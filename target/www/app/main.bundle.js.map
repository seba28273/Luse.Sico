{"version":3,"file":"app/main.bundle.js","sources":["webpack:///webpack/bootstrap","webpack:///./src/main/webapp/app/app.css","webpack:///./src/main/webapp/app/modules/home/home.css","webpack:///./src/main/webapp/app/shared/layout/footer/footer.css","webpack:///./src/main/webapp/app/shared/layout/header/header.css","webpack:///./src/main/webapp/app/shared/layout/password/password-strength-bar.css","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///(webpack)/hot sync nonrecursive ^\\.\\/log$","webpack:///./src/main/webapp/app/app.css?232f","webpack:///./src/main/webapp/app/app.tsx","webpack:///./src/main/webapp/app/config/axios-interceptor.ts","webpack:///./src/main/webapp/app/config/constants.ts","webpack:///./src/main/webapp/app/config/devtools.tsx","webpack:///./src/main/webapp/app/config/error-middleware.ts","webpack:///./src/main/webapp/app/config/icon-loader.ts","webpack:///./src/main/webapp/app/config/logger-middleware.ts","webpack:///./src/main/webapp/app/config/notification-middleware.ts","webpack:///./src/main/webapp/app/config/store.ts","webpack:///./src/main/webapp/app/config/translation.ts","webpack:///./src/main/webapp/app/entities/banco/banco-delete-dialog.tsx","webpack:///./src/main/webapp/app/entities/banco/banco-detail.tsx","webpack:///./src/main/webapp/app/entities/banco/banco-update.tsx","webpack:///./src/main/webapp/app/entities/banco/banco.reducer.ts","webpack:///./src/main/webapp/app/entities/banco/banco.tsx","webpack:///./src/main/webapp/app/entities/banco/index.tsx","webpack:///./src/main/webapp/app/entities/cliente/cliente-delete-dialog.tsx","webpack:///./src/main/webapp/app/entities/cliente/cliente-detail.tsx","webpack:///./src/main/webapp/app/entities/cliente/cliente-update.tsx","webpack:///./src/main/webapp/app/entities/cliente/cliente.reducer.ts","webpack:///./src/main/webapp/app/entities/cliente/cliente.tsx","webpack:///./src/main/webapp/app/entities/cliente/clientemisdatos.tsx","webpack:///./src/main/webapp/app/entities/cliente/clientemisdatosmensajes.tsx","webpack:///./src/main/webapp/app/entities/cliente/index.tsx","webpack:///./src/main/webapp/app/entities/country/country.reducer.ts","webpack:///./src/main/webapp/app/entities/credit-detalle/credit-detalle.reducer.ts","webpack:///./src/main/webapp/app/entities/credit/credit-delete-dialog.tsx","webpack:///./src/main/webapp/app/entities/credit/credit-detail.tsx","webpack:///./src/main/webapp/app/entities/credit/credit-update.tsx","webpack:///./src/main/webapp/app/entities/credit/credit.reducer.ts","webpack:///./src/main/webapp/app/entities/credit/credit.tsx","webpack:///./src/main/webapp/app/entities/credit/index.tsx","webpack:///./src/main/webapp/app/entities/department/department-delete-dialog.tsx","webpack:///./src/main/webapp/app/entities/department/department-detail.tsx","webpack:///./src/main/webapp/app/entities/department/department-update.tsx","webpack:///./src/main/webapp/app/entities/department/department.reducer.ts","webpack:///./src/main/webapp/app/entities/department/department.tsx","webpack:///./src/main/webapp/app/entities/department/index.tsx","webpack:///./src/main/webapp/app/entities/index.tsx","webpack:///./src/main/webapp/app/entities/location/location.reducer.ts","webpack:///./src/main/webapp/app/entities/recaudador-detalle/index.tsx","webpack:///./src/main/webapp/app/entities/recaudador-detalle/recaudador-detalle-delete-dialog.tsx","webpack:///./src/main/webapp/app/entities/recaudador-detalle/recaudador-detalle-detail.tsx","webpack:///./src/main/webapp/app/entities/recaudador-detalle/recaudador-detalle-update.tsx","webpack:///./src/main/webapp/app/entities/recaudador-detalle/recaudador-detalle.reducer.ts","webpack:///./src/main/webapp/app/entities/recaudador-detalle/recaudador-detalle.tsx","webpack:///./src/main/webapp/app/entities/recaudador/index.tsx","webpack:///./src/main/webapp/app/entities/recaudador/recaudador-delete-dialog.tsx","webpack:///./src/main/webapp/app/entities/recaudador/recaudador-detail.tsx","webpack:///./src/main/webapp/app/entities/recaudador/recaudador-update.tsx","webpack:///./src/main/webapp/app/entities/recaudador/recaudador.reducer.ts","webpack:///./src/main/webapp/app/entities/recaudador/recaudador.tsx","webpack:///./src/main/webapp/app/entities/region/region.reducer.ts","webpack:///./src/main/webapp/app/entities/token/index.tsx","webpack:///./src/main/webapp/app/entities/token/token-delete-dialog.tsx","webpack:///./src/main/webapp/app/entities/token/token-detail.tsx","webpack:///./src/main/webapp/app/entities/token/token-update.tsx","webpack:///./src/main/webapp/app/entities/token/token.reducer.ts","webpack:///./src/main/webapp/app/entities/token/token.tsx","webpack:///./src/main/webapp/app/entities/transferencia/transferencia.reducer.ts","webpack:///./src/main/webapp/app/index.tsx","webpack:///./src/main/webapp/app/modules/account/activate/activate.reducer.ts","webpack:///./src/main/webapp/app/modules/account/activate/activate.tsx","webpack:///./src/main/webapp/app/modules/account/password-reset/finish/password-reset-finish.tsx","webpack:///./src/main/webapp/app/modules/account/password-reset/init/password-reset-init.tsx","webpack:///./src/main/webapp/app/modules/account/password-reset/password-reset.reducer.ts","webpack:///./src/main/webapp/app/modules/account/password/password.reducer.ts","webpack:///./src/main/webapp/app/modules/account/register/register.reducer.ts","webpack:///./src/main/webapp/app/modules/account/register/register.tsx","webpack:///./src/main/webapp/app/modules/account/settings/settings.reducer.ts","webpack:///./src/main/webapp/app/modules/administration/administration.reducer.ts","webpack:///./src/main/webapp/app/modules/administration/user-management/user-management.reducer.ts","webpack:///./src/main/webapp/app/modules/home/home.css?07e9","webpack:///./src/main/webapp/app/modules/home/home.tsx","webpack:///./src/main/webapp/app/modules/login/login-modal.tsx","webpack:///./src/main/webapp/app/modules/login/login.tsx","webpack:///./src/main/webapp/app/modules/login/logout.tsx","webpack:///./src/main/webapp/app/routes.tsx","webpack:///./src/main/webapp/app/shared/auth/private-route.tsx","webpack:///./src/main/webapp/app/shared/error/error-boundary-route.tsx","webpack:///./src/main/webapp/app/shared/error/error-boundary.tsx","webpack:///./src/main/webapp/app/shared/layout/footer/footer.css?b323","webpack:///./src/main/webapp/app/shared/layout/footer/footer.tsx","webpack:///./src/main/webapp/app/shared/layout/header/header-components.tsx","webpack:///./src/main/webapp/app/shared/layout/header/header.css?1e42","webpack:///./src/main/webapp/app/shared/layout/header/header.tsx","webpack:///./src/main/webapp/app/shared/layout/header/menus/account.tsx","webpack:///./src/main/webapp/app/shared/layout/header/menus/admin.tsx","webpack:///./src/main/webapp/app/shared/layout/header/menus/entities.tsx","webpack:///./src/main/webapp/app/shared/layout/header/menus/index.ts","webpack:///./src/main/webapp/app/shared/layout/header/menus/locale.tsx","webpack:///./src/main/webapp/app/shared/layout/header/menus/prestamos.tsx","webpack:///./src/main/webapp/app/shared/layout/password/password-strength-bar.css?1af0","webpack:///./src/main/webapp/app/shared/layout/password/password-strength-bar.tsx","webpack:///./src/main/webapp/app/shared/model/banco.model.ts","webpack:///./src/main/webapp/app/shared/model/cliente.model.ts","webpack:///./src/main/webapp/app/shared/model/country.model.ts","webpack:///./src/main/webapp/app/shared/model/credit-detalle.model.ts","webpack:///./src/main/webapp/app/shared/model/credit.model.ts","webpack:///./src/main/webapp/app/shared/model/department.model.ts","webpack:///./src/main/webapp/app/shared/model/location.model.ts","webpack:///./src/main/webapp/app/shared/model/recaudador-detalle.model.ts","webpack:///./src/main/webapp/app/shared/model/recaudador.model.ts","webpack:///./src/main/webapp/app/shared/model/region.model.ts","webpack:///./src/main/webapp/app/shared/model/token.model.ts","webpack:///./src/main/webapp/app/shared/model/transferencia.model.ts","webpack:///./src/main/webapp/app/shared/model/user.model.ts","webpack:///./src/main/webapp/app/shared/reducers/action-type.util.ts","webpack:///./src/main/webapp/app/shared/reducers/application-profile.ts","webpack:///./src/main/webapp/app/shared/reducers/authentication.ts","webpack:///./src/main/webapp/app/shared/reducers/index.ts","webpack:///./src/main/webapp/app/shared/reducers/locale.ts","webpack:///./src/main/webapp/app/shared/util/date-utils.ts","webpack:///./src/main/webapp/app/shared/util/entity-utils.ts","webpack:///./src/main/webapp/app/shared/util/pagination.constants.ts","webpack:///./src/main/webapp/static/images/jhipster_family_member_2.svg","webpack:///readable-stream (ignored)","webpack:///supports-color (ignored)","webpack:///chalk (ignored)","webpack:///fs (ignored)"],"sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n \tfunction hotDisposeChunk(chunkId) {\n \t\tdelete installedChunks[chunkId];\n \t}\n \tvar parentHotUpdateCallback = window[\"webpackHotUpdate\"];\n \twindow[\"webpackHotUpdate\"] = // eslint-disable-next-line no-unused-vars\n \tfunction webpackHotUpdateCallback(chunkId, moreModules) {\n \t\thotAddUpdateChunk(chunkId, moreModules);\n \t\tif (parentHotUpdateCallback) parentHotUpdateCallback(chunkId, moreModules);\n \t} ;\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotDownloadUpdateChunk(chunkId) {\n \t\tvar script = document.createElement(\"script\");\n \t\tscript.charset = \"utf-8\";\n \t\tscript.src = __webpack_require__.p + \"\" + chunkId + \".\" + hotCurrentHash + \".hot-update.js\";\n \t\tif (null) script.crossOrigin = null;\n \t\tdocument.head.appendChild(script);\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotDownloadManifest(requestTimeout) {\n \t\trequestTimeout = requestTimeout || 10000;\n \t\treturn new Promise(function(resolve, reject) {\n \t\t\tif (typeof XMLHttpRequest === \"undefined\") {\n \t\t\t\treturn reject(new Error(\"No browser support\"));\n \t\t\t}\n \t\t\ttry {\n \t\t\t\tvar request = new XMLHttpRequest();\n \t\t\t\tvar requestPath = __webpack_require__.p + \"\" + hotCurrentHash + \".hot-update.json\";\n \t\t\t\trequest.open(\"GET\", requestPath, true);\n \t\t\t\trequest.timeout = requestTimeout;\n \t\t\t\trequest.send(null);\n \t\t\t} catch (err) {\n \t\t\t\treturn reject(err);\n \t\t\t}\n \t\t\trequest.onreadystatechange = function() {\n \t\t\t\tif (request.readyState !== 4) return;\n \t\t\t\tif (request.status === 0) {\n \t\t\t\t\t// timeout\n \t\t\t\t\treject(\n \t\t\t\t\t\tnew Error(\"Manifest request to \" + requestPath + \" timed out.\")\n \t\t\t\t\t);\n \t\t\t\t} else if (request.status === 404) {\n \t\t\t\t\t// no update available\n \t\t\t\t\tresolve();\n \t\t\t\t} else if (request.status !== 200 && request.status !== 304) {\n \t\t\t\t\t// other failure\n \t\t\t\t\treject(new Error(\"Manifest request to \" + requestPath + \" failed.\"));\n \t\t\t\t} else {\n \t\t\t\t\t// success\n \t\t\t\t\ttry {\n \t\t\t\t\t\tvar update = JSON.parse(request.responseText);\n \t\t\t\t\t} catch (e) {\n \t\t\t\t\t\treject(e);\n \t\t\t\t\t\treturn;\n \t\t\t\t\t}\n \t\t\t\t\tresolve(update);\n \t\t\t\t}\n \t\t\t};\n \t\t});\n \t}\n\n \tvar hotApplyOnUpdate = true;\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentHash = \"b65518505f58f34c1ef6\";\n \tvar hotRequestTimeout = 10000;\n \tvar hotCurrentModuleData = {};\n \tvar hotCurrentChildModule;\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentParents = [];\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentParentsTemp = [];\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotCreateRequire(moduleId) {\n \t\tvar me = installedModules[moduleId];\n \t\tif (!me) return __webpack_require__;\n \t\tvar fn = function(request) {\n \t\t\tif (me.hot.active) {\n \t\t\t\tif (installedModules[request]) {\n \t\t\t\t\tif (installedModules[request].parents.indexOf(moduleId) === -1) {\n \t\t\t\t\t\tinstalledModules[request].parents.push(moduleId);\n \t\t\t\t\t}\n \t\t\t\t} else {\n \t\t\t\t\thotCurrentParents = [moduleId];\n \t\t\t\t\thotCurrentChildModule = request;\n \t\t\t\t}\n \t\t\t\tif (me.children.indexOf(request) === -1) {\n \t\t\t\t\tme.children.push(request);\n \t\t\t\t}\n \t\t\t} else {\n \t\t\t\tconsole.warn(\n \t\t\t\t\t\"[HMR] unexpected require(\" +\n \t\t\t\t\t\trequest +\n \t\t\t\t\t\t\") from disposed module \" +\n \t\t\t\t\t\tmoduleId\n \t\t\t\t);\n \t\t\t\thotCurrentParents = [];\n \t\t\t}\n \t\t\treturn __webpack_require__(request);\n \t\t};\n \t\tvar ObjectFactory = function ObjectFactory(name) {\n \t\t\treturn {\n \t\t\t\tconfigurable: true,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: function() {\n \t\t\t\t\treturn __webpack_require__[name];\n \t\t\t\t},\n \t\t\t\tset: function(value) {\n \t\t\t\t\t__webpack_require__[name] = value;\n \t\t\t\t}\n \t\t\t};\n \t\t};\n \t\tfor (var name in __webpack_require__) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(__webpack_require__, name) &&\n \t\t\t\tname !== \"e\" &&\n \t\t\t\tname !== \"t\"\n \t\t\t) {\n \t\t\t\tObject.defineProperty(fn, name, ObjectFactory(name));\n \t\t\t}\n \t\t}\n \t\tfn.e = function(chunkId) {\n \t\t\tif (hotStatus === \"ready\") hotSetStatus(\"prepare\");\n \t\t\thotChunksLoading++;\n \t\t\treturn __webpack_require__.e(chunkId).then(finishChunkLoading, function(err) {\n \t\t\t\tfinishChunkLoading();\n \t\t\t\tthrow err;\n \t\t\t});\n\n \t\t\tfunction finishChunkLoading() {\n \t\t\t\thotChunksLoading--;\n \t\t\t\tif (hotStatus === \"prepare\") {\n \t\t\t\t\tif (!hotWaitingFilesMap[chunkId]) {\n \t\t\t\t\t\thotEnsureUpdateChunk(chunkId);\n \t\t\t\t\t}\n \t\t\t\t\tif (hotChunksLoading === 0 && hotWaitingFiles === 0) {\n \t\t\t\t\t\thotUpdateDownloaded();\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t};\n \t\tfn.t = function(value, mode) {\n \t\t\tif (mode & 1) value = fn(value);\n \t\t\treturn __webpack_require__.t(value, mode & ~1);\n \t\t};\n \t\treturn fn;\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotCreateModule(moduleId) {\n \t\tvar hot = {\n \t\t\t// private stuff\n \t\t\t_acceptedDependencies: {},\n \t\t\t_declinedDependencies: {},\n \t\t\t_selfAccepted: false,\n \t\t\t_selfDeclined: false,\n \t\t\t_disposeHandlers: [],\n \t\t\t_main: hotCurrentChildModule !== moduleId,\n\n \t\t\t// Module API\n \t\t\tactive: true,\n \t\t\taccept: function(dep, callback) {\n \t\t\t\tif (dep === undefined) hot._selfAccepted = true;\n \t\t\t\telse if (typeof dep === \"function\") hot._selfAccepted = dep;\n \t\t\t\telse if (typeof dep === \"object\")\n \t\t\t\t\tfor (var i = 0; i < dep.length; i++)\n \t\t\t\t\t\thot._acceptedDependencies[dep[i]] = callback || function() {};\n \t\t\t\telse hot._acceptedDependencies[dep] = callback || function() {};\n \t\t\t},\n \t\t\tdecline: function(dep) {\n \t\t\t\tif (dep === undefined) hot._selfDeclined = true;\n \t\t\t\telse if (typeof dep === \"object\")\n \t\t\t\t\tfor (var i = 0; i < dep.length; i++)\n \t\t\t\t\t\thot._declinedDependencies[dep[i]] = true;\n \t\t\t\telse hot._declinedDependencies[dep] = true;\n \t\t\t},\n \t\t\tdispose: function(callback) {\n \t\t\t\thot._disposeHandlers.push(callback);\n \t\t\t},\n \t\t\taddDisposeHandler: function(callback) {\n \t\t\t\thot._disposeHandlers.push(callback);\n \t\t\t},\n \t\t\tremoveDisposeHandler: function(callback) {\n \t\t\t\tvar idx = hot._disposeHandlers.indexOf(callback);\n \t\t\t\tif (idx >= 0) hot._disposeHandlers.splice(idx, 1);\n \t\t\t},\n\n \t\t\t// Management API\n \t\t\tcheck: hotCheck,\n \t\t\tapply: hotApply,\n \t\t\tstatus: function(l) {\n \t\t\t\tif (!l) return hotStatus;\n \t\t\t\thotStatusHandlers.push(l);\n \t\t\t},\n \t\t\taddStatusHandler: function(l) {\n \t\t\t\thotStatusHandlers.push(l);\n \t\t\t},\n \t\t\tremoveStatusHandler: function(l) {\n \t\t\t\tvar idx = hotStatusHandlers.indexOf(l);\n \t\t\t\tif (idx >= 0) hotStatusHandlers.splice(idx, 1);\n \t\t\t},\n\n \t\t\t//inherit from previous dispose call\n \t\t\tdata: hotCurrentModuleData[moduleId]\n \t\t};\n \t\thotCurrentChildModule = undefined;\n \t\treturn hot;\n \t}\n\n \tvar hotStatusHandlers = [];\n \tvar hotStatus = \"idle\";\n\n \tfunction hotSetStatus(newStatus) {\n \t\thotStatus = newStatus;\n \t\tfor (var i = 0; i < hotStatusHandlers.length; i++)\n \t\t\thotStatusHandlers[i].call(null, newStatus);\n \t}\n\n \t// while downloading\n \tvar hotWaitingFiles = 0;\n \tvar hotChunksLoading = 0;\n \tvar hotWaitingFilesMap = {};\n \tvar hotRequestedFilesMap = {};\n \tvar hotAvailableFilesMap = {};\n \tvar hotDeferred;\n\n \t// The update info\n \tvar hotUpdate, hotUpdateNewHash;\n\n \tfunction toModuleId(id) {\n \t\tvar isNumber = +id + \"\" === id;\n \t\treturn isNumber ? +id : id;\n \t}\n\n \tfunction hotCheck(apply) {\n \t\tif (hotStatus !== \"idle\") {\n \t\t\tthrow new Error(\"check() is only allowed in idle status\");\n \t\t}\n \t\thotApplyOnUpdate = apply;\n \t\thotSetStatus(\"check\");\n \t\treturn hotDownloadManifest(hotRequestTimeout).then(function(update) {\n \t\t\tif (!update) {\n \t\t\t\thotSetStatus(\"idle\");\n \t\t\t\treturn null;\n \t\t\t}\n \t\t\thotRequestedFilesMap = {};\n \t\t\thotWaitingFilesMap = {};\n \t\t\thotAvailableFilesMap = update.c;\n \t\t\thotUpdateNewHash = update.h;\n\n \t\t\thotSetStatus(\"prepare\");\n \t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\thotDeferred = {\n \t\t\t\t\tresolve: resolve,\n \t\t\t\t\treject: reject\n \t\t\t\t};\n \t\t\t});\n \t\t\thotUpdate = {};\n \t\t\tfor(var chunkId in installedChunks)\n \t\t\t// eslint-disable-next-line no-lone-blocks\n \t\t\t{\n \t\t\t\t/*globals chunkId */\n \t\t\t\thotEnsureUpdateChunk(chunkId);\n \t\t\t}\n \t\t\tif (\n \t\t\t\thotStatus === \"prepare\" &&\n \t\t\t\thotChunksLoading === 0 &&\n \t\t\t\thotWaitingFiles === 0\n \t\t\t) {\n \t\t\t\thotUpdateDownloaded();\n \t\t\t}\n \t\t\treturn promise;\n \t\t});\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotAddUpdateChunk(chunkId, moreModules) {\n \t\tif (!hotAvailableFilesMap[chunkId] || !hotRequestedFilesMap[chunkId])\n \t\t\treturn;\n \t\thotRequestedFilesMap[chunkId] = false;\n \t\tfor (var moduleId in moreModules) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\thotUpdate[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif (--hotWaitingFiles === 0 && hotChunksLoading === 0) {\n \t\t\thotUpdateDownloaded();\n \t\t}\n \t}\n\n \tfunction hotEnsureUpdateChunk(chunkId) {\n \t\tif (!hotAvailableFilesMap[chunkId]) {\n \t\t\thotWaitingFilesMap[chunkId] = true;\n \t\t} else {\n \t\t\thotRequestedFilesMap[chunkId] = true;\n \t\t\thotWaitingFiles++;\n \t\t\thotDownloadUpdateChunk(chunkId);\n \t\t}\n \t}\n\n \tfunction hotUpdateDownloaded() {\n \t\thotSetStatus(\"ready\");\n \t\tvar deferred = hotDeferred;\n \t\thotDeferred = null;\n \t\tif (!deferred) return;\n \t\tif (hotApplyOnUpdate) {\n \t\t\t// Wrap deferred object in Promise to mark it as a well-handled Promise to\n \t\t\t// avoid triggering uncaught exception warning in Chrome.\n \t\t\t// See https://bugs.chromium.org/p/chromium/issues/detail?id=465666\n \t\t\tPromise.resolve()\n \t\t\t\t.then(function() {\n \t\t\t\t\treturn hotApply(hotApplyOnUpdate);\n \t\t\t\t})\n \t\t\t\t.then(\n \t\t\t\t\tfunction(result) {\n \t\t\t\t\t\tdeferred.resolve(result);\n \t\t\t\t\t},\n \t\t\t\t\tfunction(err) {\n \t\t\t\t\t\tdeferred.reject(err);\n \t\t\t\t\t}\n \t\t\t\t);\n \t\t} else {\n \t\t\tvar outdatedModules = [];\n \t\t\tfor (var id in hotUpdate) {\n \t\t\t\tif (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n \t\t\t\t\toutdatedModules.push(toModuleId(id));\n \t\t\t\t}\n \t\t\t}\n \t\t\tdeferred.resolve(outdatedModules);\n \t\t}\n \t}\n\n \tfunction hotApply(options) {\n \t\tif (hotStatus !== \"ready\")\n \t\t\tthrow new Error(\"apply() is only allowed in ready status\");\n \t\toptions = options || {};\n\n \t\tvar cb;\n \t\tvar i;\n \t\tvar j;\n \t\tvar module;\n \t\tvar moduleId;\n\n \t\tfunction getAffectedStuff(updateModuleId) {\n \t\t\tvar outdatedModules = [updateModuleId];\n \t\t\tvar outdatedDependencies = {};\n\n \t\t\tvar queue = outdatedModules.slice().map(function(id) {\n \t\t\t\treturn {\n \t\t\t\t\tchain: [id],\n \t\t\t\t\tid: id\n \t\t\t\t};\n \t\t\t});\n \t\t\twhile (queue.length > 0) {\n \t\t\t\tvar queueItem = queue.pop();\n \t\t\t\tvar moduleId = queueItem.id;\n \t\t\t\tvar chain = queueItem.chain;\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (!module || module.hot._selfAccepted) continue;\n \t\t\t\tif (module.hot._selfDeclined) {\n \t\t\t\t\treturn {\n \t\t\t\t\t\ttype: \"self-declined\",\n \t\t\t\t\t\tchain: chain,\n \t\t\t\t\t\tmoduleId: moduleId\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\tif (module.hot._main) {\n \t\t\t\t\treturn {\n \t\t\t\t\t\ttype: \"unaccepted\",\n \t\t\t\t\t\tchain: chain,\n \t\t\t\t\t\tmoduleId: moduleId\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\tfor (var i = 0; i < module.parents.length; i++) {\n \t\t\t\t\tvar parentId = module.parents[i];\n \t\t\t\t\tvar parent = installedModules[parentId];\n \t\t\t\t\tif (!parent) continue;\n \t\t\t\t\tif (parent.hot._declinedDependencies[moduleId]) {\n \t\t\t\t\t\treturn {\n \t\t\t\t\t\t\ttype: \"declined\",\n \t\t\t\t\t\t\tchain: chain.concat([parentId]),\n \t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\tparentId: parentId\n \t\t\t\t\t\t};\n \t\t\t\t\t}\n \t\t\t\t\tif (outdatedModules.indexOf(parentId) !== -1) continue;\n \t\t\t\t\tif (parent.hot._acceptedDependencies[moduleId]) {\n \t\t\t\t\t\tif (!outdatedDependencies[parentId])\n \t\t\t\t\t\t\toutdatedDependencies[parentId] = [];\n \t\t\t\t\t\taddAllToSet(outdatedDependencies[parentId], [moduleId]);\n \t\t\t\t\t\tcontinue;\n \t\t\t\t\t}\n \t\t\t\t\tdelete outdatedDependencies[parentId];\n \t\t\t\t\toutdatedModules.push(parentId);\n \t\t\t\t\tqueue.push({\n \t\t\t\t\t\tchain: chain.concat([parentId]),\n \t\t\t\t\t\tid: parentId\n \t\t\t\t\t});\n \t\t\t\t}\n \t\t\t}\n\n \t\t\treturn {\n \t\t\t\ttype: \"accepted\",\n \t\t\t\tmoduleId: updateModuleId,\n \t\t\t\toutdatedModules: outdatedModules,\n \t\t\t\toutdatedDependencies: outdatedDependencies\n \t\t\t};\n \t\t}\n\n \t\tfunction addAllToSet(a, b) {\n \t\t\tfor (var i = 0; i < b.length; i++) {\n \t\t\t\tvar item = b[i];\n \t\t\t\tif (a.indexOf(item) === -1) a.push(item);\n \t\t\t}\n \t\t}\n\n \t\t// at begin all updates modules are outdated\n \t\t// the \"outdated\" status can propagate to parents if they don't accept the children\n \t\tvar outdatedDependencies = {};\n \t\tvar outdatedModules = [];\n \t\tvar appliedUpdate = {};\n\n \t\tvar warnUnexpectedRequire = function warnUnexpectedRequire() {\n \t\t\tconsole.warn(\n \t\t\t\t\"[HMR] unexpected require(\" + result.moduleId + \") to disposed module\"\n \t\t\t);\n \t\t};\n\n \t\tfor (var id in hotUpdate) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n \t\t\t\tmoduleId = toModuleId(id);\n \t\t\t\t/** @type {TODO} */\n \t\t\t\tvar result;\n \t\t\t\tif (hotUpdate[id]) {\n \t\t\t\t\tresult = getAffectedStuff(moduleId);\n \t\t\t\t} else {\n \t\t\t\t\tresult = {\n \t\t\t\t\t\ttype: \"disposed\",\n \t\t\t\t\t\tmoduleId: id\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\t/** @type {Error|false} */\n \t\t\t\tvar abortError = false;\n \t\t\t\tvar doApply = false;\n \t\t\t\tvar doDispose = false;\n \t\t\t\tvar chainInfo = \"\";\n \t\t\t\tif (result.chain) {\n \t\t\t\t\tchainInfo = \"\\nUpdate propagation: \" + result.chain.join(\" -> \");\n \t\t\t\t}\n \t\t\t\tswitch (result.type) {\n \t\t\t\t\tcase \"self-declined\":\n \t\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n \t\t\t\t\t\tif (!options.ignoreDeclined)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because of self decline: \" +\n \t\t\t\t\t\t\t\t\tresult.moduleId +\n \t\t\t\t\t\t\t\t\tchainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"declined\":\n \t\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n \t\t\t\t\t\tif (!options.ignoreDeclined)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because of declined dependency: \" +\n \t\t\t\t\t\t\t\t\tresult.moduleId +\n \t\t\t\t\t\t\t\t\t\" in \" +\n \t\t\t\t\t\t\t\t\tresult.parentId +\n \t\t\t\t\t\t\t\t\tchainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"unaccepted\":\n \t\t\t\t\t\tif (options.onUnaccepted) options.onUnaccepted(result);\n \t\t\t\t\t\tif (!options.ignoreUnaccepted)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because \" + moduleId + \" is not accepted\" + chainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"accepted\":\n \t\t\t\t\t\tif (options.onAccepted) options.onAccepted(result);\n \t\t\t\t\t\tdoApply = true;\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"disposed\":\n \t\t\t\t\t\tif (options.onDisposed) options.onDisposed(result);\n \t\t\t\t\t\tdoDispose = true;\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tdefault:\n \t\t\t\t\t\tthrow new Error(\"Unexception type \" + result.type);\n \t\t\t\t}\n \t\t\t\tif (abortError) {\n \t\t\t\t\thotSetStatus(\"abort\");\n \t\t\t\t\treturn Promise.reject(abortError);\n \t\t\t\t}\n \t\t\t\tif (doApply) {\n \t\t\t\t\tappliedUpdate[moduleId] = hotUpdate[moduleId];\n \t\t\t\t\taddAllToSet(outdatedModules, result.outdatedModules);\n \t\t\t\t\tfor (moduleId in result.outdatedDependencies) {\n \t\t\t\t\t\tif (\n \t\t\t\t\t\t\tObject.prototype.hasOwnProperty.call(\n \t\t\t\t\t\t\t\tresult.outdatedDependencies,\n \t\t\t\t\t\t\t\tmoduleId\n \t\t\t\t\t\t\t)\n \t\t\t\t\t\t) {\n \t\t\t\t\t\t\tif (!outdatedDependencies[moduleId])\n \t\t\t\t\t\t\t\toutdatedDependencies[moduleId] = [];\n \t\t\t\t\t\t\taddAllToSet(\n \t\t\t\t\t\t\t\toutdatedDependencies[moduleId],\n \t\t\t\t\t\t\t\tresult.outdatedDependencies[moduleId]\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t\tif (doDispose) {\n \t\t\t\t\taddAllToSet(outdatedModules, [result.moduleId]);\n \t\t\t\t\tappliedUpdate[moduleId] = warnUnexpectedRequire;\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Store self accepted outdated modules to require them later by the module system\n \t\tvar outdatedSelfAcceptedModules = [];\n \t\tfor (i = 0; i < outdatedModules.length; i++) {\n \t\t\tmoduleId = outdatedModules[i];\n \t\t\tif (\n \t\t\t\tinstalledModules[moduleId] &&\n \t\t\t\tinstalledModules[moduleId].hot._selfAccepted\n \t\t\t)\n \t\t\t\toutdatedSelfAcceptedModules.push({\n \t\t\t\t\tmodule: moduleId,\n \t\t\t\t\terrorHandler: installedModules[moduleId].hot._selfAccepted\n \t\t\t\t});\n \t\t}\n\n \t\t// Now in \"dispose\" phase\n \t\thotSetStatus(\"dispose\");\n \t\tObject.keys(hotAvailableFilesMap).forEach(function(chunkId) {\n \t\t\tif (hotAvailableFilesMap[chunkId] === false) {\n \t\t\t\thotDisposeChunk(chunkId);\n \t\t\t}\n \t\t});\n\n \t\tvar idx;\n \t\tvar queue = outdatedModules.slice();\n \t\twhile (queue.length > 0) {\n \t\t\tmoduleId = queue.pop();\n \t\t\tmodule = installedModules[moduleId];\n \t\t\tif (!module) continue;\n\n \t\t\tvar data = {};\n\n \t\t\t// Call dispose handlers\n \t\t\tvar disposeHandlers = module.hot._disposeHandlers;\n \t\t\tfor (j = 0; j < disposeHandlers.length; j++) {\n \t\t\t\tcb = disposeHandlers[j];\n \t\t\t\tcb(data);\n \t\t\t}\n \t\t\thotCurrentModuleData[moduleId] = data;\n\n \t\t\t// disable module (this disables requires from this module)\n \t\t\tmodule.hot.active = false;\n\n \t\t\t// remove module from cache\n \t\t\tdelete installedModules[moduleId];\n\n \t\t\t// when disposing there is no need to call dispose handler\n \t\t\tdelete outdatedDependencies[moduleId];\n\n \t\t\t// remove \"parents\" references from all children\n \t\t\tfor (j = 0; j < module.children.length; j++) {\n \t\t\t\tvar child = installedModules[module.children[j]];\n \t\t\t\tif (!child) continue;\n \t\t\t\tidx = child.parents.indexOf(moduleId);\n \t\t\t\tif (idx >= 0) {\n \t\t\t\t\tchild.parents.splice(idx, 1);\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// remove outdated dependency from module children\n \t\tvar dependency;\n \t\tvar moduleOutdatedDependencies;\n \t\tfor (moduleId in outdatedDependencies) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)\n \t\t\t) {\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (module) {\n \t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\n \t\t\t\t\tfor (j = 0; j < moduleOutdatedDependencies.length; j++) {\n \t\t\t\t\t\tdependency = moduleOutdatedDependencies[j];\n \t\t\t\t\t\tidx = module.children.indexOf(dependency);\n \t\t\t\t\t\tif (idx >= 0) module.children.splice(idx, 1);\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Not in \"apply\" phase\n \t\thotSetStatus(\"apply\");\n\n \t\thotCurrentHash = hotUpdateNewHash;\n\n \t\t// insert new code\n \t\tfor (moduleId in appliedUpdate) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(appliedUpdate, moduleId)) {\n \t\t\t\tmodules[moduleId] = appliedUpdate[moduleId];\n \t\t\t}\n \t\t}\n\n \t\t// call accept handlers\n \t\tvar error = null;\n \t\tfor (moduleId in outdatedDependencies) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)\n \t\t\t) {\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (module) {\n \t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\n \t\t\t\t\tvar callbacks = [];\n \t\t\t\t\tfor (i = 0; i < moduleOutdatedDependencies.length; i++) {\n \t\t\t\t\t\tdependency = moduleOutdatedDependencies[i];\n \t\t\t\t\t\tcb = module.hot._acceptedDependencies[dependency];\n \t\t\t\t\t\tif (cb) {\n \t\t\t\t\t\t\tif (callbacks.indexOf(cb) !== -1) continue;\n \t\t\t\t\t\t\tcallbacks.push(cb);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t\tfor (i = 0; i < callbacks.length; i++) {\n \t\t\t\t\t\tcb = callbacks[i];\n \t\t\t\t\t\ttry {\n \t\t\t\t\t\t\tcb(moduleOutdatedDependencies);\n \t\t\t\t\t\t} catch (err) {\n \t\t\t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\t\t\ttype: \"accept-errored\",\n \t\t\t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\t\t\tdependencyId: moduleOutdatedDependencies[i],\n \t\t\t\t\t\t\t\t\terror: err\n \t\t\t\t\t\t\t\t});\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Load self accepted modules\n \t\tfor (i = 0; i < outdatedSelfAcceptedModules.length; i++) {\n \t\t\tvar item = outdatedSelfAcceptedModules[i];\n \t\t\tmoduleId = item.module;\n \t\t\thotCurrentParents = [moduleId];\n \t\t\ttry {\n \t\t\t\t__webpack_require__(moduleId);\n \t\t\t} catch (err) {\n \t\t\t\tif (typeof item.errorHandler === \"function\") {\n \t\t\t\t\ttry {\n \t\t\t\t\t\titem.errorHandler(err);\n \t\t\t\t\t} catch (err2) {\n \t\t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\t\ttype: \"self-accept-error-handler-errored\",\n \t\t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\t\terror: err2,\n \t\t\t\t\t\t\t\toriginalError: err\n \t\t\t\t\t\t\t});\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\t\tif (!error) error = err2;\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t}\n \t\t\t\t} else {\n \t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\ttype: \"self-accept-errored\",\n \t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\terror: err\n \t\t\t\t\t\t});\n \t\t\t\t\t}\n \t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// handle errors in accept handlers and self accepted module load\n \t\tif (error) {\n \t\t\thotSetStatus(\"fail\");\n \t\t\treturn Promise.reject(error);\n \t\t}\n\n \t\thotSetStatus(\"idle\");\n \t\treturn new Promise(function(resolve) {\n \t\t\tresolve(outdatedModules);\n \t\t});\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"main\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"app/\" + chunkId + \".chunk.js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {},\n \t\t\thot: hotCreateModule(moduleId),\n \t\t\tparents: (hotCurrentParentsTemp = hotCurrentParents, hotCurrentParents = [], hotCurrentParentsTemp),\n \t\t\tchildren: []\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, hotCreateRequire(moduleId));\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\tvar error = new Error('Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')');\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \t// __webpack_hash__\n \t__webpack_require__.h = function() { return hotCurrentHash; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\nexports.i(require(\"-!../../../../node_modules/css-loader/index.js!bootstrap/dist/css/bootstrap.min.css\"), \"\");\n\n// module\nexports.push([module.id, \"/* ==============================================================\\nBootstrap tweaks\\n===============================================================*/\\n\\nbody,\\nh1,\\nh2,\\nh3,\\nh4 {\\n  font-weight: 300;\\n}\\n\\nbody {\\n  /*background: #e4e5e6;*/\\n  height: 457px;\\n  width: 100%;\\n  border-radius: 32px;\\n  background-color: #fafafa;\\n  box-shadow: 0 12px 32px 0 rgba(48, 94, 222, 0.16);\\n}\\n\\na {\\n  color: #533f03;\\n  font-weight: bold;\\n}\\n\\n/* ==========================================================================\\nBrowser Upgrade Prompt\\n========================================================================== */\\n.browserupgrade {\\n  margin: 0.2em 0;\\n  background: #ccc;\\n  color: #000;\\n  padding: 0.2em 0;\\n}\\n\\n/* ==========================================================================\\nGeneric styles\\n========================================================================== */\\n\\n/* Temporary workaround for availity-reactstrap-validation */\\n.invalid-feedback {\\n  display: inline;\\n}\\n\\n/* other generic styles */\\n\\n.jh-card {\\n  padding: 1.5%;\\n  margin-top: 20px;\\n  border: none;\\n}\\n\\n.error {\\n  color: white;\\n  background-color: red;\\n}\\n\\n.pad {\\n  padding: 10px;\\n}\\n\\n.w-40 {\\n  width: 40% !important;\\n}\\n\\n.w-60 {\\n  width: 60% !important;\\n}\\n\\n.break {\\n  white-space: normal;\\n  word-break: break-all;\\n}\\n\\n.preserve-space {\\n  white-space: pre-wrap;\\n}\\n\\n.readonly {\\n  background-color: #eee;\\n  opacity: 1;\\n}\\n\\n.footer {\\n  border-top: 1px solid rgba(0, 0, 0, 0.125);\\n}\\n\\n/* ==========================================================================\\nmake sure browsers use the pointer cursor for anchors, even with no href\\n========================================================================== */\\na:hover {\\n  cursor: pointer;\\n}\\n\\n.hand,\\n[jhisortby] {\\n  cursor: pointer;\\n}\\n\\n/* ==========================================================================\\nCustom alerts for notification\\n========================================================================== */\\n.alerts .alert {\\n  text-overflow: ellipsis;\\n}\\n.alert pre {\\n  background: none;\\n  border: none;\\n  font: inherit;\\n  color: inherit;\\n  padding: 0;\\n  margin: 0;\\n}\\n\\n.alert .popover pre {\\n  font-size: 10px;\\n}\\n\\n.alerts .toast {\\n  position: fixed;\\n  width: 100%;\\n}\\n\\n.alerts .toast.left {\\n  left: 5px;\\n}\\n\\n.alerts .toast.right {\\n  right: 5px;\\n}\\n\\n.alerts .toast.top {\\n  top: 55px;\\n}\\n\\n.alerts .toast.bottom {\\n  bottom: 55px;\\n}\\n\\n@media screen and (min-width: 480px) {\\n  .alerts .toast {\\n    width: 50%;\\n  }\\n}\\n\\n/* ==========================================================================\\nentity tables helpers\\n========================================================================== */\\n/* Remove Bootstrap padding from the element\\nhttp://stackoverflow.com/questions/19562903/remove-padding-from-columns-in-bootstrap-3 */\\n.no-padding-left {\\n  padding-left: 0 !important;\\n}\\n.no-padding-right {\\n  padding-right: 0 !important;\\n}\\n.no-padding-top {\\n  padding-top: 0 !important;\\n}\\n.no-padding-bottom {\\n  padding-bottom: 0 !important;\\n}\\n.no-padding {\\n  padding: 0 !important;\\n}\\n\\n/* bootstrap 3 input-group 100% width\\nhttp://stackoverflow.com/questions/23436430/bootstrap-3-input-group-100-width */\\n.width-min {\\n  width: 1% !important;\\n}\\n\\n/* Fix checkbox alignment\\nhttps://github.com/jhipster/generator-jhipster/issues/8463 */\\n.form-check-input {\\n  margin-top: -0.5rem;\\n}\\n\\n/* Makes toolbar not wrap on smaller screens\\nhttp://www.sketchingwithcss.com/samplechapter/cheatsheet.html#right */\\n.flex-btn-group-container {\\n  display: -webkit-flex;\\n  display: flex;\\n  -webkit-flex-direction: row;\\n  flex-direction: row;\\n  -webkit-justify-content: flex-end;\\n  justify-content: flex-end;\\n}\\n\\n/* ==========================================================================\\nentity detail page css\\n========================================================================== */\\n.row.jh-entity-details > dd {\\n  margin-bottom: 15px;\\n}\\n\\n@media screen and (min-width: 768px) {\\n  .row.jh-entity-details > dt {\\n    margin-bottom: 15px;\\n  }\\n\\n  .row.jh-entity-details > dd {\\n    border-bottom: 1px solid #eee;\\n    padding-left: 180px;\\n    margin-left: 0;\\n  }\\n}\\n\\n/* ==========================================================================\\nui bootstrap tweaks\\n========================================================================== */\\n.nav,\\n.pagination,\\n.carousel,\\n.card-title a {\\n  cursor: pointer;\\n}\\n\\n.datetime-picker-dropdown > li.date-picker-menu div > table .btn-secondary,\\n.uib-datepicker-popup > li > div.uib-datepicker > table .btn-secondary {\\n  border: 0;\\n}\\n\\n.datetime-picker-dropdown > li.date-picker-menu div > table:focus,\\n.uib-datepicker-popup > li > div.uib-datepicker > table:focus {\\n  outline: none;\\n}\\n\\n.thread-dump-modal-lock {\\n  max-width: 450px;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n}\\n\\n.btnFacebook {\\n  /*width: 165px;*/\\n  height: 53px;\\n  /*border-radius: 25px;*/\\n  background: darkblue;\\n  color: white;\\n  /* border: 0px transparent;*/\\n  text-align: center;\\n  margin: 5px;\\n  font-weight: bold;\\n  font-size: medium;\\n  width: 100%;\\n  display: inline-block;\\n  box-sizing: border-box;\\n  height: 53px;\\n  width: 100%;\\n  border: 1px solid #ecece4;\\n}\\n\\n.btnGoogle {\\n  margin: 4px;\\n  width: 100%;\\n  height: 51px;\\n  font-weight: bold;\\n  text-align: center;\\n  border: 5px transparent;\\n  display: inline-block;\\n  box-sizing: border-box;\\n  border: 1px solid #ecece4;\\n  border-radius: 26px;\\n}\\n.btnFacebook:hover {\\n  background: #3b5998;\\n  opacity: 0.6;\\n}\\n.btnGoogle:hover {\\n  background: #db3236;\\n  opacity: 0.6;\\n}\\n\\n@media only screen and (max-width: 399px) {\\n  .btnFacebook,\\n  .btnGoogle {\\n    width: 100%;\\n  }\\n}\\n.divsubtitulos {\\n  position: absolute;\\n  float: left;\\n}\\n.subtitulos {\\n  position: relative;\\n  left: 30px;\\n  bottom: 15px;\\n  z-index: 5;\\n  display: inline-block;\\n  background-color: white;\\n  padding: 3px;\\n  font-weight: bold;\\n}\\n.bg {\\n  height: 56px;\\n  width: 280px;\\n  border: 1px solid rgba(25, 25, 25, 0.32);\\n  border-radius: 28px;\\n  border-color: #105cb6;\\n}\\n.title {\\n  height: 50px;\\n  width: 280px;\\n  color: #313131;\\n  font-family: Assistant;\\n  font-size: 25.36px;\\n  font-weight: bold;\\n  line-height: 25px;\\n  text-align: center;\\n}\\n.bg:hover {\\n  border-color: darkgreen;\\n}\\n.rectangle-3 {\\n  height: 24px;\\n  width: 24px;\\n  background-color: #ffffff;\\n}\\n.texto-inicio {\\n  height: 28px;\\n  width: 228px;\\n  color: rgba(0, 0, 0, 0.87);\\n  font-family: Assistant;\\n  font-size: 16.91px;\\n  letter-spacing: 0.5px;\\n  line-height: 28px;\\n}\\n\\n.bg-btninicio {\\n  height: 40px;\\n  width: 40px;\\n  background-color: #ff531f;\\n}\\n\\n/* jhipster-needle-css-add-main JHipster will add new css style */\\n\", \"\"]);\n\n// exports\n","var escape = require(\"../../../../../../node_modules/css-loader/lib/url/escape.js\");\nexports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/* ==========================================================================\\nMain page styles\\n========================================================================== */\\n.hipster {\\n  display: inline-block;\\n  width: 100%;\\n  height: 497px;\\n  background: url(\" + escape(require(\"../../../static/images/jhipster_family_member_2.svg\")) + \") no-repeat center top;\\n  background-size: contain;\\n}\\n\", \"\"]);\n\n// exports\n","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".footer {\\n  height: 50px;\\n}\\n\", \"\"]);\n\n// exports\n","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/* ==========================================================================\\nDevelopement Ribbon\\n========================================================================== */\\n.ribbon {\\n  background-color: rgba(170, 0, 0, 0.5);\\n  left: -3.5em;\\n  -moz-transform: rotate(-45deg);\\n  -ms-transform: rotate(-45deg);\\n  -o-transform: rotate(-45deg);\\n  -webkit-transform: rotate(-45deg);\\n  transform: rotate(-45deg);\\n  overflow: hidden;\\n  position: absolute;\\n  top: 30px;\\n  white-space: nowrap;\\n  width: 15em;\\n  z-index: 99999;\\n  pointer-events: none;\\n  opacity: 0.75;\\n}\\n.ribbon a {\\n  color: #fff;\\n  display: block;\\n  font-weight: 400;\\n  margin: 1px 0;\\n  padding: 10px 50px;\\n  text-align: center;\\n  text-decoration: none;\\n  text-shadow: 0 0 5px #444;\\n  pointer-events: none;\\n}\\n/* ==========================================================================\\nNavbar styles\\n========================================================================== */\\n.jh-navbar {\\n  background-color: #353d47;\\n  padding: 0.2em 1em;\\n}\\n.jh-navbar .profile-image {\\n  margin: -10px 0px;\\n  height: 40px;\\n  width: 40px;\\n  border-radius: 50%;\\n}\\n.jh-navbar .dropdown-item.active,\\n.jh-navbar .dropdown-item.active:focus,\\n.jh-navbar .dropdown-item.active:hover {\\n  background-color: #353d47;\\n}\\n.jh-navbar .dropdown-toggle::after {\\n  margin-left: 0.15em;\\n}\\n.jh-navbar ul.navbar-nav {\\n  padding: 0.5em;\\n}\\n.jh-navbar ul.navbar-nav .nav-item {\\n  margin-left: 1.5rem;\\n}\\n.jh-navbar a.nav-link {\\n  font-weight: 400;\\n}\\n.jh-navbar a.nav-link > span {\\n  margin-left: 5px;\\n}\\n.jh-navbar .jh-navbar-toggler {\\n  color: #ccc;\\n  font-size: 1.5em;\\n  padding: 10px;\\n}\\n.jh-navbar .jh-navbar-toggler:hover {\\n  color: #fff;\\n}\\n.navbar-version {\\n  font-size: 10px;\\n  color: #bbb;\\n  padding: 0 0 0 10px;\\n}\\n.brand-logo:hover {\\n  text-decoration: none;\\n}\\n.brand-logo .brand-icon {\\n  height: 35px;\\n  width: auto;\\n  display: inline-block;\\n}\\n.brand-logo .brand-icon img {\\n  height: 45px;\\n}\\n.brand-title {\\n  font-size: 24px;\\n  color: #fff;\\n}\\n.brand-title:hover {\\n  color: #ccc;\\n  text-decoration: none;\\n}\\n.loading-bar {\\n  height: 3px;\\n  background-color: #009cd8;\\n  position: absolute;\\n  top: 0px;\\n  z-index: 1031;\\n}\\n\", \"\"]);\n\n// exports\n","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/* ==========================================================================\\nstart Password strength bar style\\n========================================================================== */\\nul#strengthBar {\\n  display: inline;\\n  list-style: none;\\n  margin: 0;\\n  margin-left: 15px;\\n  padding: 0;\\n  vertical-align: 2px;\\n}\\n\\n.point:last-child {\\n  margin: 0 !important;\\n}\\n.point {\\n  background: #ddd;\\n  border-radius: 2px;\\n  display: inline-block;\\n  height: 5px;\\n  margin-right: 1px;\\n  width: 20px;\\n}\\n\", \"\"]);\n\n// exports\n","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","var map = {\n\t\"./log\": \"./node_modules/webpack/hot/log.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/webpack/hot sync ^\\\\.\\\\/log$\";","\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!./app.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!./app.css\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!./app.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import 'react-toastify/dist/ReactToastify.css';\nimport './app.css';\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Card } from 'reactstrap';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { ToastContainer, ToastPosition, toast } from 'react-toastify';\n\nimport { IRootState } from 'app/shared/reducers';\nimport { getSession } from 'app/shared/reducers/authentication';\nimport { getProfile } from 'app/shared/reducers/application-profile';\nimport { setLocale } from 'app/shared/reducers/locale';\nimport Header from 'app/shared/layout/header/header';\nimport Footer from 'app/shared/layout/footer/footer';\nimport { hasAnyAuthority } from 'app/shared/auth/private-route';\nimport ErrorBoundary from 'app/shared/error/error-boundary';\nimport { AUTHORITIES } from 'app/config/constants';\nimport AppRoutes from 'app/routes';\n\nexport interface IAppProps extends StateProps, DispatchProps {}\n\nexport class App extends React.Component<IAppProps> {\n  componentDidMount() {\n    this.props.getSession();\n    this.props.getProfile();\n  }\n\n  render() {\n    const paddingTop = '60px';\n    return (\n      <Router>\n        <div className=\"app-container\" style={{ paddingTop }}>\n          <ToastContainer\n            position={toast.POSITION.TOP_LEFT as ToastPosition}\n            className=\"toastify-container\"\n            toastClassName=\"toastify-toast\"\n          />\n          <ErrorBoundary>\n            <Header\n              isAuthenticated={this.props.isAuthenticated}\n              isAdmin={this.props.isAdmin}\n              currentLocale={this.props.currentLocale}\n              onLocaleChange={this.props.setLocale}\n              ribbonEnv={this.props.ribbonEnv}\n              isInProduction={this.props.isInProduction}\n              isSwaggerEnabled={this.props.isSwaggerEnabled}\n            />\n          </ErrorBoundary>\n          <div className=\"container-fluid view-container\" id=\"app-view-container\">\n            <Card className=\"jh-card\">\n              <ErrorBoundary>\n                <AppRoutes />\n              </ErrorBoundary>\n            </Card>\n            <Footer />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst mapStateToProps = ({ authentication, applicationProfile, locale }: IRootState) => ({\n  currentLocale: locale.currentLocale,\n  isAuthenticated: authentication.isAuthenticated,\n  isAdmin: hasAnyAuthority(authentication.account.authorities, [AUTHORITIES.ADMIN]),\n  ribbonEnv: applicationProfile.ribbonEnv,\n  isInProduction: applicationProfile.inProduction,\n  isSwaggerEnabled: applicationProfile.isSwaggerEnabled\n});\n\nconst mapDispatchToProps = { setLocale, getSession, getProfile };\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","import axios from 'axios';\nimport { getBasePath, Storage } from 'react-jhipster';\n\nimport { SERVER_API_URL } from 'app/config/constants';\n\nconst TIMEOUT = 1 * 60 * 1000;\naxios.defaults.timeout = TIMEOUT;\naxios.defaults.baseURL = SERVER_API_URL;\n\nconst setupAxiosInterceptors = onUnauthenticated => {\n  const onRequestSuccess = config => {\n    const token = Storage.local.get('jhi-authenticationToken') || Storage.session.get('jhi-authenticationToken');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  };\n  const onResponseSuccess = response => response;\n  const onResponseError = err => {\n    const status = err.status || err.response.status;\n    if (status === 403 || status === 401) {\n      onUnauthenticated();\n    }\n    return Promise.reject(err);\n  };\n  axios.interceptors.request.use(onRequestSuccess);\n  axios.interceptors.response.use(onResponseSuccess, onResponseError);\n};\n\nexport default setupAxiosInterceptors;\n","const config = {\n  VERSION: process.env.VERSION\n};\n\nexport default config;\n\nexport const SERVER_API_URL = process.env.SERVER_API_URL;\n\nexport const AUTHORITIES = {\n  ADMIN: 'ROLE_ADMIN',\n  USER: 'ROLE_USER',\n  PERSON: 'ROLE_PERSON'\n};\n\nexport const messages = {\n  DATA_ERROR_ALERT: 'Internal Error'\n};\n\nexport const APP_DATE_FORMAT = 'DD/MM/YY HH:mm';\nexport const APP_TIMESTAMP_FORMAT = 'DD/MM/YY HH:mm:ss';\nexport const APP_LOCAL_DATE_FORMAT = 'DD/MM/YYYY';\nexport const APP_LOCAL_DATETIME_FORMAT = 'YYYY-MM-DDTHH:mm';\nexport const APP_LOCAL_DATETIME_FORMAT_Z = 'YYYY-MM-DDTHH:mm Z';\nexport const APP_WHOLE_NUMBER_FORMAT = '0,0';\nexport const APP_TWO_DIGITS_AFTER_POINT_NUMBER_FORMAT = '0,0.[00]';\n","import React from 'react';\nimport { createDevTools } from 'redux-devtools';\nimport LogMonitor from 'redux-devtools-log-monitor';\nimport DockMonitor from 'redux-devtools-dock-monitor';\n// You can toggle visibility of devTools with ctrl + H\n// and change their position with ctrl + Q\nexport default createDevTools(\n  <DockMonitor toggleVisibilityKey=\"ctrl-h\" changePositionKey=\"ctrl-q\" defaultIsVisible={false}>\n    <LogMonitor />\n  </DockMonitor>\n);\n","import { isPromise } from 'react-jhipster';\n\nconst getErrorMessage = errorData => {\n  let message = errorData.message;\n  if (errorData.fieldErrors) {\n    errorData.fieldErrors.forEach(fErr => {\n      message += `\\nfield: ${fErr.field},  Object: ${fErr.objectName}, message: ${fErr.message}\\n`;\n    });\n  }\n  return message;\n};\n\nexport default () => next => action => {\n  // If not a promise, continue on\n  if (!isPromise(action.payload)) {\n    return next(action);\n  }\n\n  /**\n   *\n   * The error middleware serves to dispatch the initial pending promise to\n   * the promise middleware, but adds a `catch`.\n   * It need not run in production\n   */\n  if (process.env.NODE_ENV === 'development') {\n    // Dispatch initial pending promise, but catch any errors\n    return next(action).catch(error => {\n      console.error(`${action.type} caught at middleware with reason: ${JSON.stringify(error.message)}.`);\n      if (error && error.response && error.response.data) {\n        const message = getErrorMessage(error.response.data);\n        console.error(`Actual cause: ${message}`);\n      }\n\n      return Promise.reject(error);\n    });\n  }\n  return next(action);\n};\n","import { faSort } from '@fortawesome/free-solid-svg-icons/faSort';\nimport { faEye } from '@fortawesome/free-solid-svg-icons/faEye';\nimport { faSync } from '@fortawesome/free-solid-svg-icons/faSync';\nimport { faBan } from '@fortawesome/free-solid-svg-icons/faBan';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons/faTrash';\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons/faArrowLeft';\nimport { faSave } from '@fortawesome/free-solid-svg-icons/faSave';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons/faPlus';\nimport { faPencilAlt } from '@fortawesome/free-solid-svg-icons/faPencilAlt';\nimport { faUser } from '@fortawesome/free-solid-svg-icons/faUser';\nimport { faHdd } from '@fortawesome/free-solid-svg-icons/faHdd';\nimport { faTachometerAlt } from '@fortawesome/free-solid-svg-icons/faTachometerAlt';\nimport { faHeart } from '@fortawesome/free-solid-svg-icons/faHeart';\nimport { faList } from '@fortawesome/free-solid-svg-icons/faList';\nimport { faTasks } from '@fortawesome/free-solid-svg-icons/faTasks';\nimport { faBook } from '@fortawesome/free-solid-svg-icons/faBook';\nimport { faClock } from '@fortawesome/free-solid-svg-icons/faClock';\nimport { faSignInAlt } from '@fortawesome/free-solid-svg-icons/faSignInAlt';\nimport { faSignOutAlt } from '@fortawesome/free-solid-svg-icons/faSignOutAlt';\nimport { faThList } from '@fortawesome/free-solid-svg-icons/faThList';\nimport { faUserPlus } from '@fortawesome/free-solid-svg-icons/faUserPlus';\nimport { faWrench } from '@fortawesome/free-solid-svg-icons/faWrench';\nimport { faAsterisk } from '@fortawesome/free-solid-svg-icons/faAsterisk';\nimport { faFlag } from '@fortawesome/free-solid-svg-icons/faFlag';\nimport { faBell } from '@fortawesome/free-solid-svg-icons/faBell';\nimport { faHome } from '@fortawesome/free-solid-svg-icons/faHome';\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons/faTimesCircle';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons/faSearch';\nimport { faRoad } from '@fortawesome/free-solid-svg-icons/faRoad';\nimport { faCloud } from '@fortawesome/free-solid-svg-icons/faCloud';\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\n\nexport const loadIcons = () => {\n  library.add(\n    faSort,\n    faEye,\n    faSync,\n    faBan,\n    faTrash,\n    faArrowLeft,\n    faSave,\n    faPlus,\n    faPencilAlt,\n    faUser,\n    faTachometerAlt,\n    faHeart,\n    faList,\n    faTasks,\n    faBook,\n    faHdd,\n    faClock,\n    faSignInAlt,\n    faSignOutAlt,\n    faWrench,\n    faThList,\n    faUserPlus,\n    faAsterisk,\n    faFlag,\n    faBell,\n    faHome,\n    faRoad,\n    faCloud,\n    faTimesCircle,\n    faSearch\n  );\n};\n","export default () => next => action => {\n  if (process.env.NODE_ENV !== 'production') {\n    const { type, payload, meta } = action;\n\n    console.groupCollapsed(type);\n    // tslint:disable-next-line\n    console.log('Payload:', payload);\n    // tslint:disable-next-line\n    console.log('Meta:', meta);\n    console.groupEnd();\n  }\n\n  return next(action);\n};\n","import { isPromise, translate } from 'react-jhipster';\nimport { toast } from 'react-toastify';\n\nconst addErrorAlert = (message, key?, data?) => {\n  key = key ? key : message;\n  toast.error(translate(key, data));\n};\nexport default () => next => action => {\n  // If not a promise, continue on\n  if (!isPromise(action.payload)) {\n    return next(action);\n  }\n\n  /**\n   *\n   * The notification middleware serves to dispatch the initial pending promise to\n   * the promise middleware, but adds a `then` and `catch.\n   */\n  return next(action)\n    .then(response => {\n      if (action.meta && action.meta.successMessage) {\n        toast.success(action.meta.successMessage);\n      } else if (response && response.action && response.action.payload && response.action.payload.headers) {\n        const headers = response.action.payload.headers;\n        let alert: string = null;\n        let alertParams: string = null;\n        Object.entries(headers).forEach(([k, v]: [string, string]) => {\n          if (k.toLowerCase().endsWith('app-alert')) {\n            alert = v;\n          } else if (k.toLowerCase().endsWith('app-params')) {\n            alertParams = v;\n          }\n        });\n        if (alert) {\n          const alertParam = alertParams;\n          toast.success(translate(alert, { param: alertParam }));\n        }\n      }\n      return Promise.resolve(response);\n    })\n    .catch(error => {\n      if (action.meta && action.meta.errorMessage) {\n        toast.error(action.meta.errorMessage);\n      } else if (error && error.response) {\n        const response = error.response;\n        const data = response.data;\n        if (!(response.status === 401 && (error.message === '' || (data && data.path && data.path.includes('/api/account'))))) {\n          let i;\n          switch (response.status) {\n            // connection refused, server not reachable\n            case 0:\n              addErrorAlert('Server not reachable', 'error.server.not.reachable');\n              break;\n\n            case 400:\n              const headers = Object.entries(response.headers);\n              let errorHeader = null;\n              let entityKey = null;\n              headers.forEach(([k, v]: [string, string]) => {\n                if (k.toLowerCase().endsWith('app-error')) {\n                  errorHeader = v;\n                } else if (k.toLowerCase().endsWith('app-params')) {\n                  entityKey = v;\n                }\n              });\n              if (errorHeader) {\n                const entityName = translate('global.menu.entities.' + entityKey);\n                addErrorAlert(errorHeader, errorHeader, { entityName });\n              } else if (data !== '' && data.fieldErrors) {\n                const fieldErrors = data.fieldErrors;\n                for (i = 0; i < fieldErrors.length; i++) {\n                  const fieldError = fieldErrors[i];\n                  if (['Min', 'Max', 'DecimalMin', 'DecimalMax'].includes(fieldError.message)) {\n                    fieldError.message = 'Size';\n                  }\n                  // convert 'something[14].other[4].id' to 'something[].other[].id' so translations can be written to it\n                  const convertedField = fieldError.field.replace(/\\[\\d*\\]/g, '[]');\n                  const fieldName = translate(`sicoApp.${fieldError.objectName}.${convertedField}`);\n                  addErrorAlert(`Error on field \"${fieldName}\"`, `error.${fieldError.message}`, { fieldName });\n                }\n              } else if (data !== '' && data.message) {\n                addErrorAlert(data.message, data.message, data.params);\n              } else {\n                addErrorAlert(data);\n              }\n              break;\n\n            case 404:\n              toast.info(response.data.title);\n              break;\n\n            case 303:\n              addErrorAlert(response.data.title, 'msn');\n              break;\n\n            default:\n              if (data !== '' && data.message) {\n                addErrorAlert(data.message);\n              } else {\n                addErrorAlert(data);\n              }\n          }\n        }\n      } else if (error && error.message) {\n        toast.error(error.message);\n      } else {\n        toast.error('Unknown error!');\n      }\n      return Promise.reject(error);\n    });\n};\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport thunkMiddleware from 'redux-thunk';\nimport reducer, { IRootState } from 'app/shared/reducers';\nimport DevTools from './devtools';\nimport errorMiddleware from './error-middleware';\nimport notificationMiddleware from './notification-middleware';\nimport loggerMiddleware from './logger-middleware';\nimport { loadingBarMiddleware } from 'react-redux-loading-bar';\n\nconst defaultMiddlewares = [\n  thunkMiddleware,\n  errorMiddleware,\n  notificationMiddleware,\n  promiseMiddleware(),\n  loadingBarMiddleware(),\n  loggerMiddleware\n];\nconst composedMiddlewares = middlewares =>\n  process.env.NODE_ENV === 'development'\n    ? compose(\n        applyMiddleware(...defaultMiddlewares, ...middlewares),\n        DevTools.instrument()\n      )\n    : compose(applyMiddleware(...defaultMiddlewares, ...middlewares));\n\nconst initialize = (initialState?: IRootState, middlewares = []) => createStore(reducer, initialState, composedMiddlewares(middlewares));\n\nexport default initialize;\n","import { TranslatorContext, Storage } from 'react-jhipster';\n\nimport { setLocale } from 'app/shared/reducers/locale';\n\nTranslatorContext.setDefaultLocale('es');\nTranslatorContext.setRenderInnerTextForMissingKeys(false);\n\nexport const languages: any = {\n  en: { name: 'English' },\n  es: { name: 'Español' }\n  // jhipster-needle-i18n-language-key-pipe - JHipster will add/remove languages in this object\n};\n\nexport const locales = Object.keys(languages).sort();\n\nexport const registerLocale = store => {\n  store.dispatch(setLocale(Storage.session.get('locale', 'es')));\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\nimport { Translate, ICrudGetAction, ICrudDeleteAction } from 'react-jhipster';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { IBanco } from 'app/shared/model/banco.model';\nimport { IRootState } from 'app/shared/reducers';\nimport { getEntity, deleteEntity } from './banco.reducer';\n\nexport interface IBancoDeleteDialogProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\n\nexport class BancoDeleteDialog extends React.Component<IBancoDeleteDialogProps> {\n  componentDidMount() {\n    this.props.getEntity(this.props.match.params.id);\n  }\n\n  confirmDelete = event => {\n    this.props.deleteEntity(this.props.bancoEntity.id);\n    this.handleClose(event);\n  };\n\n  handleClose = event => {\n    event.stopPropagation();\n    this.props.history.goBack();\n  };\n\n  render() {\n    const { bancoEntity } = this.props;\n    return (\n      <Modal isOpen toggle={this.handleClose}>\n        <ModalHeader toggle={this.handleClose}>\n          <Translate contentKey=\"entity.delete.title\">Confirm delete operation</Translate>\n        </ModalHeader>\n        <ModalBody id=\"sicoApp.banco.delete.question\">\n          <Translate contentKey=\"sicoApp.banco.delete.question\" interpolate={{ id: bancoEntity.id }}>\n            Are you sure you want to delete this Banco?\n          </Translate>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={this.handleClose}>\n            <FontAwesomeIcon icon=\"ban\" />\n            &nbsp;\n            <Translate contentKey=\"entity.action.cancel\">Cancel</Translate>\n          </Button>\n          <Button id=\"jhi-confirm-delete-banco\" color=\"danger\" onClick={this.confirmDelete}>\n            <FontAwesomeIcon icon=\"trash\" />\n            &nbsp;\n            <Translate contentKey=\"entity.action.delete\">Delete</Translate>\n          </Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nconst mapStateToProps = ({ banco }: IRootState) => ({\n  bancoEntity: banco.entity\n});\n\nconst mapDispatchToProps = { getEntity, deleteEntity };\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BancoDeleteDialog);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, RouteComponentProps } from 'react-router-dom';\nimport { Button, Row, Col } from 'reactstrap';\n// tslint:disable-next-line:no-unused-variable\nimport { Translate, ICrudGetAction } from 'react-jhipster';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { IRootState } from 'app/shared/reducers';\nimport { getEntity } from './banco.reducer';\nimport { IBanco } from 'app/shared/model/banco.model';\n// tslint:disable-next-line:no-unused-variable\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\n\nexport interface IBancoDetailProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\n\nexport class BancoDetail extends React.Component<IBancoDetailProps> {\n  componentDidMount() {\n    this.props.getEntity(this.props.match.params.id);\n  }\n\n  render() {\n    const { bancoEntity } = this.props;\n    return (\n      <Row>\n        <Col md=\"8\">\n          <h2>\n            <Translate contentKey=\"sicoApp.banco.detail.title\">Banco</Translate> [<b>{bancoEntity.id}</b>]\n          </h2>\n          <dl className=\"jh-entity-details\">\n            <dt>\n              <span id=\"bancoName\">\n                <Translate contentKey=\"sicoApp.banco.bancoName\">Banco Name</Translate>\n              </span>\n            </dt>\n            <dd>{bancoEntity.bancoName}</dd>\n          </dl>\n          <Button tag={Link} to=\"/entity/banco\" replace color=\"info\">\n            <FontAwesomeIcon icon=\"arrow-left\" />{' '}\n            <span className=\"d-none d-md-inline\">\n              <Translate contentKey=\"entity.action.back\">Back</Translate>\n            </span>\n          </Button>\n          &nbsp;\n          <Button tag={Link} to={`/entity/banco/${bancoEntity.id}/edit`} replace color=\"primary\">\n            <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\n            <span className=\"d-none d-md-inline\">\n              <Translate contentKey=\"entity.action.edit\">Edit</Translate>\n            </span>\n          </Button>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nconst mapStateToProps = ({ banco }: IRootState) => ({\n  bancoEntity: banco.entity\n});\n\nconst mapDispatchToProps = { getEntity };\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BancoDetail);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, RouteComponentProps } from 'react-router-dom';\nimport { Button, Row, Col, Label } from 'reactstrap';\nimport { AvForm, AvGroup, AvInput, AvField } from 'availity-reactstrap-validation';\n// tslint:disable-next-line:no-unused-variable\nimport { Translate, translate, ICrudGetAction, ICrudGetAllAction, ICrudPutAction } from 'react-jhipster';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { IRootState } from 'app/shared/reducers';\n\nimport { getEntity, updateEntity, createEntity, reset } from './banco.reducer';\nimport { IBanco } from 'app/shared/model/banco.model';\n// tslint:disable-next-line:no-unused-variable\nimport { convertDateTimeFromServer, convertDateTimeToServer } from 'app/shared/util/date-utils';\nimport { mapIdList } from 'app/shared/util/entity-utils';\n\nexport interface IBancoUpdateProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\n\nexport interface IBancoUpdateState {\n  isNew: boolean;\n}\n\nexport class BancoUpdate extends React.Component<IBancoUpdateProps, IBancoUpdateState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isNew: !this.props.match.params || !this.props.match.params.id\n    };\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    if (nextProps.updateSuccess !== this.props.updateSuccess && nextProps.updateSuccess) {\n      this.handleClose();\n    }\n  }\n\n  componentDidMount() {\n    if (this.state.isNew) {\n      this.props.reset();\n    } else {\n      this.props.getEntity(this.props.match.params.id);\n    }\n  }\n\n  saveEntity = (event, errors, values) => {\n    if (errors.length === 0) {\n      const { bancoEntity } = this.props;\n      const entity = {\n        ...bancoEntity,\n        ...values\n      };\n\n      if (this.state.isNew) {\n        this.props.createEntity(entity);\n      } else {\n        this.props.updateEntity(entity);\n      }\n    }\n  };\n\n  handleClose = () => {\n    this.props.history.push('/entity/banco');\n  };\n\n  render() {\n    const { bancoEntity, loading, updating } = this.props;\n    const { isNew } = this.state;\n\n    return (\n      <div>\n        <Row className=\"justify-content-center\">\n          <Col md=\"8\">\n            <h2 id=\"sicoApp.banco.home.createOrEditLabel\">\n              <Translate contentKey=\"sicoApp.banco.home.createOrEditLabel\">Create or edit a Banco</Translate>\n            </h2>\n          </Col>\n        </Row>\n        <Row className=\"justify-content-center\">\n          <Col md=\"8\">\n            {loading ? (\n              <p>Loading...</p>\n            ) : (\n              <AvForm model={isNew ? {} : bancoEntity} onSubmit={this.saveEntity}>\n                {!isNew ? (\n                  <AvGroup>\n                    <Label for=\"id\">\n                      <Translate contentKey=\"global.field.id\">ID</Translate>\n                    </Label>\n                    <AvInput id=\"banco-id\" type=\"text\" className=\"form-control\" name=\"id\" required readOnly />\n                  </AvGroup>\n                ) : null}\n                <AvGroup>\n                  <Label id=\"bancoNameLabel\" for=\"bancoName\">\n                    <Translate contentKey=\"sicoApp.banco.bancoName\">Banco Name</Translate>\n                  </Label>\n                  <AvField id=\"banco-bancoName\" type=\"text\" name=\"bancoName\" />\n                </AvGroup>\n                <Button tag={Link} id=\"cancel-save\" to=\"/entity/banco\" replace color=\"info\">\n                  <FontAwesomeIcon icon=\"arrow-left\" />\n                  &nbsp;\n                  <span className=\"d-none d-md-inline\">\n                    <Translate contentKey=\"entity.action.back\">Back</Translate>\n                  </span>\n                </Button>\n                &nbsp;\n                <Button color=\"primary\" id=\"save-entity\" type=\"submit\" disabled={updating}>\n                  <FontAwesomeIcon icon=\"save\" />\n                  &nbsp;\n                  <Translate contentKey=\"entity.action.save\">Save</Translate>\n                </Button>\n              </AvForm>\n            )}\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (storeState: IRootState) => ({\n  bancoEntity: storeState.banco.entity,\n  loading: storeState.banco.loading,\n  updating: storeState.banco.updating,\n  updateSuccess: storeState.banco.updateSuccess\n});\n\nconst mapDispatchToProps = {\n  getEntity,\n  updateEntity,\n  createEntity,\n  reset\n};\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BancoUpdate);\n","import axios from 'axios';\nimport { ICrudGetAction, ICrudGetAllAction, ICrudPutAction, ICrudDeleteAction } from 'react-jhipster';\n\nimport { cleanEntity } from 'app/shared/util/entity-utils';\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\n\nimport { IBanco, defaultValue } from 'app/shared/model/banco.model';\n\nexport const ACTION_TYPES = {\n  FETCH_BANCO_LIST: 'banco/FETCH_BANCO_LIST',\n  FETCH_BANCO: 'banco/FETCH_BANCO',\n  CREATE_BANCO: 'banco/CREATE_BANCO',\n  UPDATE_BANCO: 'banco/UPDATE_BANCO',\n  DELETE_BANCO: 'banco/DELETE_BANCO',\n  RESET: 'banco/RESET'\n};\n\nconst initialState = {\n  loading: false,\n  errorMessage: null,\n  entities: [] as ReadonlyArray<IBanco>,\n  entity: defaultValue,\n  updating: false,\n  updateSuccess: false\n};\n\nexport type BancoState = Readonly<typeof initialState>;\n\n// Reducer\n\nexport default (state: BancoState = initialState, action): BancoState => {\n  switch (action.type) {\n    case REQUEST(ACTION_TYPES.FETCH_BANCO_LIST):\n    case REQUEST(ACTION_TYPES.FETCH_BANCO):\n      return {\n        ...state,\n        errorMessage: null,\n        updateSuccess: false,\n        loading: true\n      };\n    case REQUEST(ACTION_TYPES.CREATE_BANCO):\n    case REQUEST(ACTION_TYPES.UPDATE_BANCO):\n    case REQUEST(ACTION_TYPES.DELETE_BANCO):\n      return {\n        ...state,\n        errorMessage: null,\n        updateSuccess: false,\n        updating: true\n      };\n    case FAILURE(ACTION_TYPES.FETCH_BANCO_LIST):\n    case FAILURE(ACTION_TYPES.FETCH_BANCO):\n    case FAILURE(ACTION_TYPES.CREATE_BANCO):\n    case FAILURE(ACTION_TYPES.UPDATE_BANCO):\n    case FAILURE(ACTION_TYPES.DELETE_BANCO):\n      return {\n        ...state,\n        loading: false,\n        updating: false,\n        updateSuccess: false,\n        errorMessage: action.payload\n      };\n    case SUCCESS(ACTION_TYPES.FETCH_BANCO_LIST):\n      return {\n        ...state,\n        loading: false,\n        entities: action.payload.data\n      };\n    case SUCCESS(ACTION_TYPES.FETCH_BANCO):\n      return {\n        ...state,\n        loading: false,\n        entity: action.payload.data\n      };\n    case SUCCESS(ACTION_TYPES.CREATE_BANCO):\n    case SUCCESS(ACTION_TYPES.UPDATE_BANCO):\n      return {\n        ...state,\n        updating: false,\n        updateSuccess: true,\n        entity: action.payload.data\n      };\n    case SUCCESS(ACTION_TYPES.DELETE_BANCO):\n      return {\n        ...state,\n        updating: false,\n        updateSuccess: true,\n        entity: {}\n      };\n    case ACTION_TYPES.RESET:\n      return {\n        ...initialState\n      };\n    default:\n      return state;\n  }\n};\n\nconst apiUrl = 'api/bancos';\n\n// Actions\n\nexport const getEntities: ICrudGetAllAction<IBanco> = (page, size, sort) => ({\n  type: ACTION_TYPES.FETCH_BANCO_LIST,\n  payload: axios.get<IBanco>(`${apiUrl}?cacheBuster=${new Date().getTime()}`)\n});\n\nexport const getEntity: ICrudGetAction<IBanco> = id => {\n  const requestUrl = `${apiUrl}/${id}`;\n  return {\n    type: ACTION_TYPES.FETCH_BANCO,\n    payload: axios.get<IBanco>(requestUrl)\n  };\n};\n\nexport const createEntity: ICrudPutAction<IBanco> = entity => async dispatch => {\n  const result = await dispatch({\n    type: ACTION_TYPES.CREATE_BANCO,\n    payload: axios.post(apiUrl, cleanEntity(entity))\n  });\n  dispatch(getEntities());\n  return result;\n};\n\nexport const updateEntity: ICrudPutAction<IBanco> = entity => async dispatch => {\n  const result = await dispatch({\n    type: ACTION_TYPES.UPDATE_BANCO,\n    payload: axios.put(apiUrl, cleanEntity(entity))\n  });\n  dispatch(getEntities());\n  return result;\n};\n\nexport const deleteEntity: ICrudDeleteAction<IBanco> = id => async dispatch => {\n  const requestUrl = `${apiUrl}/${id}`;\n  const result = await dispatch({\n    type: ACTION_TYPES.DELETE_BANCO,\n    payload: axios.delete(requestUrl)\n  });\n  dispatch(getEntities());\n  return result;\n};\n\nexport const reset = () => ({\n  type: ACTION_TYPES.RESET\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, RouteComponentProps } from 'react-router-dom';\nimport { Button, Col, Row, Table } from 'reactstrap';\n// tslint:disable-next-line:no-unused-variable\nimport { Translate, ICrudGetAllAction } from 'react-jhipster';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { IRootState } from 'app/shared/reducers';\nimport { getEntities } from './banco.reducer';\nimport { IBanco } from 'app/shared/model/banco.model';\n// tslint:disable-next-line:no-unused-variable\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\n\nexport interface IBancoProps extends StateProps, DispatchProps, RouteComponentProps<{ url: string }> {}\n\nexport class Banco extends React.Component<IBancoProps> {\n  componentDidMount() {\n    this.props.getEntities();\n  }\n\n  render() {\n    const { bancoList, match } = this.props;\n    return (\n      <div>\n        <h2 id=\"banco-heading\">\n          <Translate contentKey=\"sicoApp.banco.home.title\">Bancos</Translate>\n          <Link to={`${match.url}/new`} className=\"btn btn-primary float-right jh-create-entity\" id=\"jh-create-entity\">\n            <FontAwesomeIcon icon=\"plus\" />\n            &nbsp;\n            <Translate contentKey=\"sicoApp.banco.home.createLabel\">Create new Banco</Translate>\n          </Link>\n        </h2>\n        <div className=\"table-responsive\">\n          <Table responsive>\n            <thead>\n              <tr>\n                <th>\n                  <Translate contentKey=\"global.field.id\">ID</Translate>\n                </th>\n                <th>\n                  <Translate contentKey=\"sicoApp.banco.bancoName\">Banco Name</Translate>\n                </th>\n                <th />\n              </tr>\n            </thead>\n            <tbody>\n              {bancoList.map((banco, i) => (\n                <tr key={`entity-${i}`}>\n                  <td>\n                    <Button tag={Link} to={`${match.url}/${banco.id}`} color=\"link\" size=\"sm\">\n                      {banco.id}\n                    </Button>\n                  </td>\n                  <td>{banco.bancoName}</td>\n                  <td className=\"text-right\">\n                    <div className=\"btn-group flex-btn-group-container\">\n                      <Button tag={Link} to={`${match.url}/${banco.id}`} color=\"info\" size=\"sm\">\n                        <FontAwesomeIcon icon=\"eye\" />{' '}\n                        <span className=\"d-none d-md-inline\">\n                          <Translate contentKey=\"entity.action.view\">View</Translate>\n                        </span>\n                      </Button>\n                      <Button tag={Link} to={`${match.url}/${banco.id}/edit`} color=\"primary\" size=\"sm\">\n                        <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\n                        <span className=\"d-none d-md-inline\">\n                          <Translate contentKey=\"entity.action.edit\">Edit</Translate>\n                        </span>\n                      </Button>\n                      <Button tag={Link} to={`${match.url}/${banco.id}/delete`} color=\"danger\" size=\"sm\">\n                        <FontAwesomeIcon icon=\"trash\" />{' '}\n                        <span className=\"d-none d-md-inline\">\n                          <Translate contentKey=\"entity.action.delete\">Delete</Translate>\n                        </span>\n                      </Button>\n                    </div>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ banco }: IRootState) => ({\n  bancoList: banco.entities\n});\n\nconst mapDispatchToProps = {\n  getEntities\n};\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Banco);\n","import React from 'react';\nimport { Switch } from 'react-router-dom';\n\nimport ErrorBoundaryRoute from 'app/shared/error/error-boundary-route';\n\nimport Banco from './banco';\nimport BancoDetail from './banco-detail';\nimport BancoUpdate from './banco-update';\nimport BancoDeleteDialog from './banco-delete-dialog';\n\nconst Routes = ({ match }) => (\n  <>\n    <Switch>\n      <ErrorBoundaryRoute exact path={`${match.url}/new`} component={BancoUpdate} />\n      <ErrorBoundaryRoute exact path={`${match.url}/:id/edit`} component={BancoUpdate} />\n      <ErrorBoundaryRoute exact path={`${match.url}/:id`} component={BancoDetail} />\n      <ErrorBoundaryRoute path={match.url} component={Banco} />\n    </Switch>\n    <ErrorBoundaryRoute path={`${match.url}/:id/delete`} component={BancoDeleteDialog} />\n  </>\n);\n\nexport default Routes;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\nimport { Translate, ICrudGetAction, ICrudDeleteAction } from 'react-jhipster';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { ICliente } from 'app/shared/model/cliente.model';\nimport { IRootState } from 'app/shared/reducers';\nimport { getEntity, deleteEntity } from './cliente.reducer';\n\nexport interface IClienteDeleteDialogProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\n\nexport class ClienteDeleteDialog extends React.Component<IClienteDeleteDialogProps> {\n  componentDidMount() {\n    this.props.getEntity(this.props.match.params.id);\n  }\n\n  confirmDelete = event => {\n    this.props.deleteEntity(this.props.clienteEntity.id);\n    this.handleClose(event);\n  };\n\n  handleClose = event => {\n    event.stopPropagation();\n    this.props.history.goBack();\n  };\n\n  render() {\n    const { clienteEntity } = this.props;\n    return (\n      <Modal isOpen toggle={this.handleClose}>\n        <ModalHeader toggle={this.handleClose}>\n          <Translate contentKey=\"entity.delete.title\">Confirm delete operation</Translate>\n        </ModalHeader>\n        <ModalBody id=\"sicoApp.cliente.delete.question\">\n          <Translate contentKey=\"sicoApp.cliente.delete.question\" interpolate={{ id: clienteEntity.id }}>\n            Are you sure you want to delete this Cliente?\n          </Translate>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={this.handleClose}>\n            <FontAwesomeIcon icon=\"ban\" />\n            &nbsp;\n            <Translate contentKey=\"entity.action.cancel\">Cancel</Translate>\n          </Button>\n          <Button id=\"jhi-confirm-delete-cliente\" color=\"danger\" onClick={this.confirmDelete}>\n            <FontAwesomeIcon icon=\"trash\" />\n            &nbsp;\n            <Translate contentKey=\"entity.action.delete\">Delete</Translate>\n          </Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nconst mapStateToProps = ({ cliente }: IRootState) => ({\n  clienteEntity: cliente.entity\n});\n\nconst mapDispatchToProps = { getEntity, deleteEntity };\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ClienteDeleteDialog);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, RouteComponentProps } from 'react-router-dom';\nimport { Button, Row, Col } from 'reactstrap';\n// tslint:disable-next-line:no-unused-variable\nimport { Translate, ICrudGetAction, TextFormat } from 'react-jhipster';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { IRootState } from 'app/shared/reducers';\nimport { getEntity } from './cliente.reducer';\nimport { ICliente } from 'app/shared/model/cliente.model';\n// tslint:disable-next-line:no-unused-variable\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\n\nexport interface IClienteDetailProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\n\nexport class ClienteDetail extends React.Component<IClienteDetailProps> {\n  componentDidMount() {\n    this.props.getEntity(this.props.match.params.id);\n  }\n\n  render() {\n    const { clienteEntity } = this.props;\n    return (\n      <Row>\n        <Col md=\"8\">\n          <h2>\n            <Translate contentKey=\"sicoApp.cliente.detail.title\">Cliente</Translate> [<b>{clienteEntity.id}</b>]\n          </h2>\n          <dl className=\"jh-entity-details\">\n            <dt>\n              <span id=\"firstName\">\n                <Translate contentKey=\"sicoApp.cliente.firstName\">First Name</Translate>\n              </span>\n            </dt>\n            <dd>{clienteEntity.firstName}</dd>\n            <dt>\n              <span id=\"lastName\">\n                <Translate contentKey=\"sicoApp.cliente.lastName\">Last Name</Translate>\n              </span>\n            </dt>\n            <dd>{clienteEntity.lastName}</dd>\n            <dt>\n              <span id=\"telefono\">\n                <Translate contentKey=\"sicoApp.cliente.telefono\">Telefono</Translate>\n              </span>\n            </dt>\n            <dd>{clienteEntity.telefono}</dd>\n            <dt>\n              <span id=\"mail\">\n                <Translate contentKey=\"sicoApp.cliente.mail\">Mail</Translate>\n              </span>\n            </dt>\n            <dd>{clienteEntity.mail}</dd>\n            <dt>\n              <span id=\"sexo\">\n                <Translate contentKey=\"sicoApp.cliente.sexo\">Sexo</Translate>\n              </span>\n            </dt>\n            <dd>{clienteEntity.sexo}</dd>\n            <dt>\n              <span id=\"salary\">\n                <Translate contentKey=\"sicoApp.cliente.salary\">Salary</Translate>\n              </span>\n            </dt>\n            <dd>{clienteEntity.salary}</dd>\n            <dt>\n              <span id=\"scoringCredit\">\n                <Translate contentKey=\"sicoApp.cliente.scoringCredit\">Scoring Credit</Translate>\n              </span>\n            </dt>\n            <dd>{clienteEntity.scoringCredit}</dd>\n            <dt>\n              <Translate contentKey=\"sicoApp.cliente.department\">Department</Translate>\n            </dt>\n            <dd>{clienteEntity.department ? clienteEntity.department.id : ''}</dd>\n          </dl>\n          <Button tag={Link} to=\"/entity/cliente\" replace color=\"info\">\n            <FontAwesomeIcon icon=\"arrow-left\" />{' '}\n            <span className=\"d-none d-md-inline\">\n              <Translate contentKey=\"entity.action.back\">Back</Translate>\n            </span>\n          </Button>\n          &nbsp;\n          <Button tag={Link} to={`/entity/cliente/${clienteEntity.id}/edit`} replace color=\"primary\">\n            <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\n            <span className=\"d-none d-md-inline\">\n              <Translate contentKey=\"entity.action.edit\">Edit</Translate>\n            </span>\n          </Button>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nconst mapStateToProps = ({ cliente }: IRootState) => ({\n  clienteEntity: cliente.entity\n});\n\nconst mapDispatchToProps = { getEntity };\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ClienteDetail);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, RouteComponentProps } from 'react-router-dom';\nimport { Button, Row, Col, Label } from 'reactstrap';\nimport { AvForm, AvGroup, AvInput, AvField } from 'availity-reactstrap-validation';\n// tslint:disable-next-line:no-unused-variable\nimport { Translate, translate, ICrudGetAction, ICrudGetAllAction, ICrudPutAction } from 'react-jhipster';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { IRootState } from 'app/shared/reducers';\n\nimport { IDepartment } from 'app/shared/model/department.model';\nimport { IBanco } from 'app/shared/model/banco.model';\nimport { getEntities as getBancos } from 'app/entities/banco/banco.reducer';\nimport { getEntities as getDepartments } from 'app/entities/department/department.reducer';\nimport { getEntity, updateEntity, createEntity, reset } from './cliente.reducer';\nimport { ICliente } from 'app/shared/model/cliente.model';\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\n// tslint:disable-next-line:no-unused-variable\nimport { convertDateTimeFromServer, convertDateTimeToServer } from 'app/shared/util/date-utils';\nimport { mapIdList } from 'app/shared/util/entity-utils';\nimport banco from 'app/entities/banco/banco';\n\nexport interface IClienteUpdateProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\n\nexport interface IClienteUpdateState {\n  isNew: boolean;\n  departmentId: string;\n  bancoId: string;\n}\n\nexport class ClienteUpdate extends React.Component<IClienteUpdateProps, IClienteUpdateState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      departmentId: '0',\n      bancoId: '0',\n      isNew: !this.props.match.params || !this.props.match.params.id\n    };\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    if (nextProps.updateSuccess !== this.props.updateSuccess && nextProps.updateSuccess) {\n      this.handleClose();\n    }\n  }\n\n  componentDidMount() {\n    if (this.state.isNew) {\n      this.props.reset();\n    } else {\n      this.props.getEntity(this.props.match.params.id);\n    }\n\n    this.props.getDepartments();\n    this.props.getBancos();\n  }\n\n  saveEntity = (event, errors, values) => {\n    values.fechaNacimiento = convertDateTimeToServer(values.fechaNacimiento);\n\n    if (errors.length === 0) {\n      const { clienteEntity } = this.props;\n      const entity = {\n        ...clienteEntity,\n        ...values\n      };\n\n      if (this.state.isNew) {\n        this.props.createEntity(entity);\n      } else {\n        this.props.updateEntity(entity);\n      }\n    }\n  };\n\n  handleClose = () => {\n    this.props.history.push('/entity/cliente');\n  };\n\n  render() {\n    const { clienteEntity, departments, bancos, loading, updating } = this.props;\n    const { isNew } = this.state;\n\n    return (\n      <div>\n        <Row className=\"justify-content-center\">\n          <Col md=\"8\">\n            <h2 id=\"sicoApp.cliente.home.createOrEditLabel\">\n              <Translate contentKey=\"sicoApp.cliente.home.createOrEditLabel\">Create or edit a Cliente</Translate>\n            </h2>\n          </Col>\n        </Row>\n        <Row className=\"justify-content-center\">\n          <Col md=\"8\">\n            {loading ? (\n              <p>Loading...</p>\n            ) : (\n              <AvForm model={isNew ? {} : clienteEntity} onSubmit={this.saveEntity}>\n                {!isNew ? (\n                  <AvGroup>\n                    <Label for=\"id\">\n                      <Translate contentKey=\"global.field.id\">ID</Translate>\n                    </Label>\n                    <AvInput id=\"cliente-id\" type=\"text\" className=\"form-control\" name=\"id\" required readOnly />\n                  </AvGroup>\n                ) : null}\n                <AvGroup>\n                  <Label id=\"firstNameLabel\" for=\"firstName\">\n                    <Translate contentKey=\"sicoApp.cliente.firstName\">First Name</Translate>\n                  </Label>\n                  <AvField\n                    id=\"cliente-firstName\"\n                    type=\"text\"\n                    name=\"firstName\"\n                    validate={{\n                      required: { value: true, errorMessage: translate('entity.validation.required') }\n                    }}\n                  />\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"lastNameLabel\" for=\"lastName\">\n                    <Translate contentKey=\"sicoApp.cliente.lastName\">Last Name</Translate>\n                  </Label>\n                  <AvField\n                    id=\"cliente-lastName\"\n                    type=\"text\"\n                    name=\"lastName\"\n                    validate={{\n                      required: { value: true, errorMessage: translate('entity.validation.required') }\n                    }}\n                  />\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"dniLabel\" for=\"dni\">\n                    <Translate contentKey=\"sicoApp.cliente.dni\">Dni</Translate>\n                  </Label>\n                  <AvField\n                    id=\"cliente-dni\"\n                    type=\"text\"\n                    name=\"dni\"\n                    validate={{\n                      required: { value: true, errorMessage: translate('entity.validation.required') }\n                    }}\n                  />\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"cuitLabel\" for=\"cuit\">\n                    <Translate contentKey=\"sicoApp.cliente.cuit\">Cuit</Translate>\n                  </Label>\n                  <AvField\n                    id=\"cliente-cuit\"\n                    type=\"text\"\n                    name=\"cuit\"\n                    validate={{\n                      required: { value: true, errorMessage: translate('entity.validation.required') }\n                    }}\n                  />\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"fechaNacimientoLabel\" for=\"fechaNacimiento\">\n                    <Translate contentKey=\"sicoApp.cliente.fechaNacimiento\">Fecha Nacimiento</Translate>\n                  </Label>\n                  <AvInput\n                    id=\"cliente-fechaNacimiento\"\n                    type=\"date\"\n                    className=\"form-control\"\n                    name=\"fechaNacimiento\"\n                    placeholder={'YYYY-MM-DD'}\n                    value={isNew ? null : convertDateTimeFromServer(this.props.clienteEntity.fechaNacimiento)}\n                  />\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"direccionLabel\" for=\"direccion\">\n                    <Translate contentKey=\"sicoApp.cliente.direccion\">Direccion</Translate>\n                  </Label>\n                  <AvField id=\"cliente-direccion\" type=\"text\" name=\"direccion\" />\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"numeroLabel\" for=\"numero\">\n                    <Translate contentKey=\"sicoApp.cliente.numero\">Numero</Translate>\n                  </Label>\n                  <AvField id=\"cliente-numero\" type=\"string\" className=\"form-control\" name=\"numero\" />\n                </AvGroup>\n                <AvGroup>\n                  <Label for=\"department.id\">\n                    <Translate contentKey=\"sicoApp.cliente.department\">Department</Translate>\n                  </Label>\n                  <AvInput id=\"cliente-department\" type=\"select\" className=\"form-control\" name=\"department.id\">\n                    <option value=\"\" key=\"0\" />\n                    {departments\n                      ? departments.map(otherEntity => (\n                          <option value={otherEntity.id} key={otherEntity.id}>\n                            {otherEntity.departmentName}\n                          </option>\n                        ))\n                      : null}\n                  </AvInput>\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"telefonoLabel\" for=\"telefono\">\n                    <Translate contentKey=\"sicoApp.cliente.telefono\">Telefono</Translate>\n                  </Label>\n                  <AvField id=\"cliente-telefono\" type=\"text\" name=\"telefono\" />\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"mailLabel\" for=\"mail\">\n                    <Translate contentKey=\"sicoApp.cliente.mail\">Mail</Translate>\n                  </Label>\n                  <AvField id=\"cliente-mail\" type=\"text\" name=\"mail\" />\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"sexoLabel\">\n                    <Translate contentKey=\"sicoApp.cliente.sexo\">Sexo</Translate>\n                  </Label>\n                  <AvInput\n                    id=\"cliente-sexo\"\n                    type=\"select\"\n                    className=\"form-control\"\n                    name=\"sexo\"\n                    value={(!isNew && clienteEntity.sexo) || 'MASCULINO'}\n                  >\n                    <option value=\"MASCULINO\">\n                      <Translate contentKey=\"sicoApp.SEXO.MASCULINO\" />\n                    </option>\n                    <option value=\"FEMENINO\">\n                      <Translate contentKey=\"sicoApp.SEXO.FEMENINO\" />\n                    </option>\n                  </AvInput>\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"salaryLabel\" for=\"nroCbu\">\n                    <Translate contentKey=\"sicoApp.cliente.nroCbu\">Nro CBU</Translate>\n                  </Label>\n                  <AvField id=\"cliente-nroCbu\" type=\"string\" className=\"form-control\" name=\"nroCbu\" />\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"salaryLabel\" for=\"salary\">\n                    <Translate contentKey=\"sicoApp.cliente.numeroCuenta\">Numero Cuenta</Translate>\n                  </Label>\n                  <AvField id=\"cliente-numeroCuenta\" type=\"string\" className=\"form-control\" name=\"numeroCuenta\" />\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"salaryLabel\" for=\"salary\">\n                    <Translate contentKey=\"sicoApp.cliente.salary\">Salary</Translate>\n                  </Label>\n                  <AvField id=\"cliente-salary\" type=\"string\" className=\"form-control\" name=\"salary\" />\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"scoringCreditLabel\" for=\"scoringCredit\">\n                    <Translate contentKey=\"sicoApp.cliente.scoringCredit\">Scoring Credit</Translate>\n                  </Label>\n                  <AvField id=\"cliente-scoringCredit\" type=\"string\" className=\"form-control\" name=\"scoringCredit\" />\n                </AvGroup>\n                <AvGroup>\n                  <Label for=\"banco.id\">\n                    <Translate contentKey=\"sicoApp.cliente.banco\">Banco</Translate>\n                  </Label>\n                  <AvInput id=\"cliente-banco\" type=\"select\" className=\"form-control\" name=\"banco.id\">\n                    <option value=\"\" key=\"0\" />\n                    {bancos\n                      ? bancos.map(otherEntity => (\n                          <option value={otherEntity.id} key={otherEntity.id}>\n                            {otherEntity.bancoName}\n                          </option>\n                        ))\n                      : null}\n                  </AvInput>\n                </AvGroup>\n                <Button tag={Link} id=\"cancel-save\" to=\"/entity/cliente\" replace color=\"info\">\n                  <FontAwesomeIcon icon=\"arrow-left\" />\n                  &nbsp;\n                  <span className=\"d-none d-md-inline\">\n                    <Translate contentKey=\"entity.action.back\">Back</Translate>\n                  </span>\n                </Button>\n                &nbsp;\n                <Button color=\"primary\" id=\"save-entity\" type=\"submit\" disabled={updating}>\n                  <FontAwesomeIcon icon=\"save\" />\n                  &nbsp;\n                  <Translate contentKey=\"entity.action.save\">Save</Translate>\n                </Button>\n              </AvForm>\n            )}\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (storeState: IRootState) => ({\n  departments: storeState.department.entities,\n  bancos: storeState.banco.entities,\n  clienteEntity: storeState.cliente.entity,\n  loading: storeState.cliente.loading,\n  updating: storeState.cliente.updating,\n  updateSuccess: storeState.cliente.updateSuccess\n});\n\nconst mapDispatchToProps = {\n  getDepartments,\n  getBancos,\n  getEntity,\n  updateEntity,\n  createEntity,\n  reset\n};\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ClienteUpdate);\n","import axios from 'axios';\nimport { ICrudGetAction, ICrudGetAllAction, ICrudPutAction, ICrudDeleteAction, getStorage, Storage } from 'react-jhipster';\n\nimport { cleanEntity } from 'app/shared/util/entity-utils';\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\n\nimport { ICliente, defaultValue } from 'app/shared/model/cliente.model';\n\nexport const ACTION_TYPES = {\n  FETCH_CLIENTE_LIST: 'cliente/FETCH_CLIENTE_LIST',\n  FETCH_CLIENTE: 'cliente/FETCH_CLIENTE',\n  CREATE_CLIENTE: 'cliente/CREATE_CLIENTE',\n  UPDATE_CLIENTE: 'cliente/UPDATE_CLIENTE',\n  DELETE_CLIENTE: 'cliente/DELETE_CLIENTE',\n  RESET: 'cliente/RESET'\n};\n\nconst initialState = {\n  loading: false,\n  errorMessage: null,\n  entities: [] as ReadonlyArray<ICliente>,\n  cuenta: {} as any,\n  entity: defaultValue,\n  updating: false,\n  totalItems: 0,\n  updateSuccess: false\n};\n\nexport type ClienteState = Readonly<typeof initialState>;\n\n// Reducer\n\nexport default (state: ClienteState = initialState, action): ClienteState => {\n  switch (action.type) {\n    case REQUEST(ACTION_TYPES.FETCH_CLIENTE_LIST):\n    case REQUEST(ACTION_TYPES.FETCH_CLIENTE):\n      return {\n        ...state,\n        errorMessage: null,\n        updateSuccess: false,\n        loading: true\n      };\n    case REQUEST(ACTION_TYPES.CREATE_CLIENTE):\n    case REQUEST(ACTION_TYPES.UPDATE_CLIENTE):\n    case REQUEST(ACTION_TYPES.DELETE_CLIENTE):\n      return {\n        ...state,\n        errorMessage: null,\n        updateSuccess: false,\n        updating: true\n      };\n    case FAILURE(ACTION_TYPES.FETCH_CLIENTE_LIST):\n    case FAILURE(ACTION_TYPES.FETCH_CLIENTE):\n    case FAILURE(ACTION_TYPES.CREATE_CLIENTE):\n    case FAILURE(ACTION_TYPES.UPDATE_CLIENTE):\n    case FAILURE(ACTION_TYPES.DELETE_CLIENTE):\n      return {\n        ...state,\n        loading: false,\n        updating: false,\n        updateSuccess: false,\n        errorMessage: action.payload\n      };\n    case SUCCESS(ACTION_TYPES.FETCH_CLIENTE_LIST):\n      return {\n        ...state,\n        loading: false,\n        totalItems: action.payload.headers['x-total-count'],\n        entities: action.payload.data\n      };\n    case SUCCESS(ACTION_TYPES.FETCH_CLIENTE):\n      return {\n        ...state,\n        loading: false,\n        entity: action.payload.data\n      };\n    case SUCCESS(ACTION_TYPES.CREATE_CLIENTE):\n    case SUCCESS(ACTION_TYPES.UPDATE_CLIENTE):\n      return {\n        ...state,\n        updating: false,\n        updateSuccess: true,\n        entity: action.payload.data\n      };\n    case SUCCESS(ACTION_TYPES.DELETE_CLIENTE):\n      return {\n        ...state,\n        updating: false,\n        updateSuccess: true,\n        entity: {}\n      };\n    case ACTION_TYPES.RESET:\n      return {\n        ...initialState\n      };\n    default:\n      return state;\n  }\n};\n\nconst apiUrl = 'api/clientes';\n\n// Actions\n\nexport const getEntities: ICrudGetAllAction<ICliente> = (page, size, sort) => {\n  const requestUrl = `${apiUrl}${sort ? `?page=${page}&size=${size}&sort=${sort}` : ''}`;\n  return {\n    type: ACTION_TYPES.FETCH_CLIENTE_LIST,\n    payload: axios.get<ICliente>(`${requestUrl}${sort ? '&' : '?'}cacheBuster=${new Date().getTime()}`)\n  };\n};\nexport const getEntity: ICrudGetAction<ICliente> = id => {\n  const requestUrl = `${apiUrl}/${id}`;\n  return {\n    type: ACTION_TYPES.FETCH_CLIENTE,\n    payload: axios.get<ICliente>(requestUrl)\n  };\n};\nexport const getEntityByEmail: ICrudGetAction<ICliente> = () => {\n  const requestUrl = `api/ByEmail/${Storage.session.get('email', '')}`;\n  return {\n    type: ACTION_TYPES.FETCH_CLIENTE,\n    payload: axios.get<ICliente>(requestUrl)\n  };\n};\nexport const createEntity: ICrudPutAction<ICliente> = entity => async dispatch => {\n  const result = await dispatch({\n    type: ACTION_TYPES.CREATE_CLIENTE,\n    payload: axios.post(apiUrl, cleanEntity(entity))\n  });\n  dispatch(getEntities());\n  return result;\n};\nexport const createEntityMisDatos: ICrudPutAction<ICliente> = entity => async dispatch => {\n  entity.mail = Storage.session.get('email', '');\n  const result = await dispatch({\n    type: ACTION_TYPES.CREATE_CLIENTE,\n    payload: axios.post(apiUrl, cleanEntity(entity))\n  });\n  dispatch(getEntities());\n  return result;\n};\nexport const updateEntityMisDatos: ICrudPutAction<ICliente> = entity => async dispatch => {\n  entity.mail = Storage.session.get('email', '');\n  const result = await dispatch({\n    type: ACTION_TYPES.UPDATE_CLIENTE,\n    payload: axios.put(apiUrl, cleanEntity(entity))\n  });\n  dispatch(getEntities());\n  return result;\n};\n\nexport const updateEntity: ICrudPutAction<ICliente> = entity => async dispatch => {\n  const result = await dispatch({\n    type: ACTION_TYPES.UPDATE_CLIENTE,\n    payload: axios.put(apiUrl, cleanEntity(entity))\n  });\n  dispatch(getEntities());\n  return result;\n};\n\nexport const deleteEntity: ICrudDeleteAction<ICliente> = id => async dispatch => {\n  const requestUrl = `${apiUrl}/${id}`;\n  const result = await dispatch({\n    type: ACTION_TYPES.DELETE_CLIENTE,\n    payload: axios.delete(requestUrl)\n  });\n  dispatch(getEntities());\n  return result;\n};\n\nexport const reset = () => ({\n  type: ACTION_TYPES.RESET\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, RouteComponentProps } from 'react-router-dom';\nimport { Button, Col, Row, Table } from 'reactstrap';\n// tslint:disable-next-line:no-unused-variable\nimport {\n  Translate,\n  ICrudGetAllAction,\n  TextFormat,\n  getSortState,\n  IPaginationBaseState,\n  getPaginationItemsNumber,\n  JhiPagination\n} from 'react-jhipster';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { IRootState } from 'app/shared/reducers';\nimport { getEntities } from './cliente.reducer';\nimport { ICliente } from 'app/shared/model/cliente.model';\n// tslint:disable-next-line:no-unused-variable\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\nimport { ITEMS_PER_PAGE } from 'app/shared/util/pagination.constants';\n\nexport interface IClienteProps extends StateProps, DispatchProps, RouteComponentProps<{ url: string }> {}\n\nexport type IClienteState = IPaginationBaseState;\n\nexport class Cliente extends React.Component<IClienteProps, IClienteState> {\n  state: IClienteState = {\n    ...getSortState(this.props.location, ITEMS_PER_PAGE)\n  };\n\n  componentDidMount() {\n    this.getEntities();\n  }\n\n  sort = prop => () => {\n    this.setState(\n      {\n        order: this.state.order === 'asc' ? 'desc' : 'asc',\n        sort: prop\n      },\n      () => this.sortEntities()\n    );\n  };\n\n  sortEntities() {\n    this.getEntities();\n    this.props.history.push(`${this.props.location.pathname}?page=${this.state.activePage}&sort=${this.state.sort},${this.state.order}`);\n  }\n\n  handlePagination = activePage => this.setState({ activePage }, () => this.sortEntities());\n\n  getEntities = () => {\n    const { activePage, itemsPerPage, sort, order } = this.state;\n    this.props.getEntities(activePage - 1, itemsPerPage, `${sort},${order}`);\n  };\n\n  render() {\n    const { clienteList, match, totalItems } = this.props;\n    return (\n      <div>\n        <h2 id=\"cliente-heading\">\n          <Translate contentKey=\"sicoApp.cliente.home.title\">Clientes</Translate>\n          <Link to={`${match.url}/new`} className=\"btn btn-primary float-right jh-create-entity\" id=\"jh-create-entity\">\n            <FontAwesomeIcon icon=\"plus\" />\n            &nbsp;\n            <Translate contentKey=\"sicoApp.cliente.home.createLabel\">Create new Cliente</Translate>\n          </Link>\n        </h2>\n        <div className=\"table-responsive\">\n          <Table responsive>\n            <thead>\n              <tr>\n                <th className=\"hand\" onClick={this.sort('id')}>\n                  <Translate contentKey=\"global.field.id\">ID</Translate> <FontAwesomeIcon icon=\"sort\" />\n                </th>\n                <th className=\"hand\" onClick={this.sort('firstName')}>\n                  <Translate contentKey=\"sicoApp.cliente.firstName\">First Name</Translate> <FontAwesomeIcon icon=\"sort\" />\n                </th>\n                <th className=\"hand\" onClick={this.sort('lastName')}>\n                  <Translate contentKey=\"sicoApp.cliente.lastName\">Last Name</Translate> <FontAwesomeIcon icon=\"sort\" />\n                </th>\n                <th className=\"hand\" onClick={this.sort('dni')}>\n                  <Translate contentKey=\"sicoApp.cliente.dni\">Dni</Translate> <FontAwesomeIcon icon=\"sort\" />\n                </th>\n                <th className=\"hand\" onClick={this.sort('cuit')}>\n                  <Translate contentKey=\"sicoApp.cliente.cuit\">Dni</Translate> <FontAwesomeIcon icon=\"sort\" />\n                </th>\n                <th className=\"hand\" onClick={this.sort('fechaNacimiento')}>\n                  <Translate contentKey=\"sicoApp.cliente.fechaNacimiento\">Fecha Nacimiento</Translate> <FontAwesomeIcon icon=\"sort\" />\n                </th>\n                <th className=\"hand\" onClick={this.sort('direccion')}>\n                  <Translate contentKey=\"sicoApp.cliente.direccion\">Direccion</Translate> <FontAwesomeIcon icon=\"sort\" />\n                </th>\n                <th className=\"hand\" onClick={this.sort('numero')}>\n                  <Translate contentKey=\"sicoApp.cliente.numero\">Numero</Translate> <FontAwesomeIcon icon=\"sort\" />\n                </th>\n                <th className=\"hand\" onClick={this.sort('telefono')}>\n                  <Translate contentKey=\"sicoApp.cliente.telefono\">Telefono</Translate> <FontAwesomeIcon icon=\"sort\" />\n                </th>\n                <th className=\"hand\" onClick={this.sort('mail')}>\n                  <Translate contentKey=\"sicoApp.cliente.mail\">Mail</Translate> <FontAwesomeIcon icon=\"sort\" />\n                </th>\n                <th className=\"hand\" onClick={this.sort('sexo')}>\n                  <Translate contentKey=\"sicoApp.cliente.sexo\">Sexo</Translate> <FontAwesomeIcon icon=\"sort\" />\n                </th>\n                <th className=\"hand\" onClick={this.sort('salary')}>\n                  <Translate contentKey=\"sicoApp.cliente.salary\">Salary</Translate> <FontAwesomeIcon icon=\"sort\" />\n                </th>\n                <th className=\"hand\" onClick={this.sort('scoringCredit')}>\n                  <Translate contentKey=\"sicoApp.cliente.scoringCredit\">Scoring Credit</Translate> <FontAwesomeIcon icon=\"sort\" />\n                </th>\n                <th>\n                  <Translate contentKey=\"sicoApp.cliente.department\">Department</Translate> <FontAwesomeIcon icon=\"sort\" />\n                </th>\n                <th />\n              </tr>\n            </thead>\n            <tbody>\n              {clienteList.map((cliente, i) => (\n                <tr key={`entity-${i}`}>\n                  <td>\n                    <Button tag={Link} to={`${match.url}/${cliente.id}`} color=\"link\" size=\"sm\">\n                      {cliente.id}\n                    </Button>\n                  </td>\n                  <td>{cliente.firstName}</td>\n                  <td>{cliente.lastName}</td>\n                  <td>{cliente.dni}</td>\n                  <td>{cliente.cuit}</td>\n                  <td>\n                    <TextFormat type=\"date\" value={cliente.fechaNacimiento} format={APP_LOCAL_DATE_FORMAT} />\n                  </td>\n                  <td>{cliente.direccion}</td>\n                  <td>{cliente.numero}</td>\n                  <td>{cliente.telefono}</td>\n                  <td>{cliente.mail}</td>\n                  <td>\n                    <Translate contentKey={`sicoApp.SEXO.${cliente.sexo}`} />\n                  </td>\n                  <td>{cliente.salary}</td>\n                  <td>{cliente.scoringCredit}</td>\n                  <td>\n                    {cliente.department ? <Link to={`department/${cliente.department.id}`}>{cliente.department.departmentName}</Link> : ''}\n                  </td>\n                  <td className=\"text-right\">\n                    <div className=\"btn-group flex-btn-group-container\">\n                      <Button tag={Link} to={`${match.url}/${cliente.id}`} color=\"info\" size=\"sm\">\n                        <FontAwesomeIcon icon=\"eye\" />{' '}\n                        <span className=\"d-none d-md-inline\">\n                          <Translate contentKey=\"entity.action.view\">View</Translate>\n                        </span>\n                      </Button>\n                      <Button tag={Link} to={`${match.url}/${cliente.id}/edit`} color=\"primary\" size=\"sm\">\n                        <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\n                        <span className=\"d-none d-md-inline\">\n                          <Translate contentKey=\"entity.action.edit\">Edit</Translate>\n                        </span>\n                      </Button>\n                      <Button tag={Link} to={`${match.url}/${cliente.id}/delete`} color=\"danger\" size=\"sm\">\n                        <FontAwesomeIcon icon=\"trash\" />{' '}\n                        <span className=\"d-none d-md-inline\">\n                          <Translate contentKey=\"entity.action.delete\">Delete</Translate>\n                        </span>\n                      </Button>\n                    </div>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </div>\n        <Row className=\"justify-content-center\">\n          <JhiPagination\n            items={getPaginationItemsNumber(totalItems, this.state.itemsPerPage)}\n            activePage={this.state.activePage}\n            onSelect={this.handlePagination}\n            maxButtons={5}\n          />\n        </Row>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ cliente }: IRootState) => ({\n  clienteList: cliente.entities,\n  totalItems: cliente.totalItems\n});\n\nconst mapDispatchToProps = {\n  getEntities\n};\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Cliente);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, RouteComponentProps } from 'react-router-dom';\nimport { IRootState } from 'app/shared/reducers';\nimport { AvForm, AvGroup, AvInput, AvField } from 'availity-reactstrap-validation';\nimport { getEntities as getBancos } from 'app/entities/banco/banco.reducer';\nimport { getEntities as getDepartments } from 'app/entities/department/department.reducer';\nimport { getEntityByEmail, createEntityMisDatos, updateEntityMisDatos, reset } from './cliente.reducer';\nimport { Button, Row, Col, Label } from 'reactstrap';\nimport { convertDateTimeFromServer, convertDateTimeToServer } from 'app/shared/util/date-utils';\nimport { IClienteUpdateProps } from 'app/entities/cliente/cliente-update';\nimport { getStorage, Translate, translate } from 'react-jhipster';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nexport interface IClienteUpdateProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\n\nexport interface IClienteUpdateState {\n  isNew: boolean;\n  departmentId: string;\n  bancoId: string;\n}\n\nexport class ClienteMisDatos extends React.Component<IClienteUpdateProps, IClienteUpdateState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      departmentId: '0',\n      bancoId: '0',\n      isNew: !this.props.clienteEntity || !this.props.clienteEntity.id\n    };\n  }\n  componentWillUpdate(nextProps, nextState) {\n    if (nextProps.updateSuccess !== this.props.updateSuccess && nextProps.updateSuccess) {\n      this.handleClose();\n    }\n  }\n\n  componentDidMount() {\n    this.props.reset();\n    this.props.getDepartments();\n    this.props.getBancos();\n  }\n\n  saveEntity = (event, errors, values) => {\n    values.fechaNacimiento = convertDateTimeToServer(values.fechaNacimiento);\n\n    if (errors.length === 0) {\n      const { clienteEntity } = this.props;\n      const entity = {\n        ...clienteEntity,\n        ...values\n      };\n\n     /* if (this.state.isNew) {\n        this.props.createEntityMisDatos(entity);\n      } else {\n        this.props.updateEntityMisDatos(entity);\n      }*/\n    }\n  };\n\n  handleClose = () => {\n    this.props.history.push('/entity/clientemisdatosmensajes');\n  };\n  render() {\n    const { clienteEntity, departments, bancos, loading, updating } = this.props;\n    const { isNew } = this.state;\n    return (\n      <div>\n        <Row className=\"justify-content-center\">\n          <Col md=\"8\">\n            <h2 id=\"sicoApp.cliente.home.createOrEditLabel\" className=\"title\">\n              <Translate contentKey=\"sicoApp.cliente.home.actualizarmisdatos\">Actualizar mis Datos</Translate>\n            </h2>\n          </Col>\n        </Row>\n        <Row className=\"justify-content-center\">\n          <Col md=\"8\">\n            {loading ? (\n              <p>Loading...</p>\n            ) : (\n              <AvForm model={isNew ? {} : clienteEntity} onSubmit={this.saveEntity}>\n                {!isNew ? (\n                  <AvGroup>\n                    <Label for=\"id\">\n                      <Translate contentKey=\"global.field.id\">ID</Translate>\n                    </Label>\n                    <AvInput id=\"cliente-id\" type=\"text\" className=\"bg\" name=\"id\" required readOnly />\n                  </AvGroup>\n                ) : null}\n                <AvGroup>\n                  <div className=\"divsubtitulos\">\n                    <Label id=\"firstNameLabel\" for=\"firstName\" className=\"subtitulos\">\n                      <Translate contentKey=\"sicoApp.cliente.firstName\">First Name</Translate>\n                    </Label>\n                  </div>\n                  <AvField\n                    id=\"cliente-firstName\"\n                    type=\"text\"\n                    name=\"firstName\"\n                    className=\"bg\"\n                    validate={{\n                      required: { value: true, errorMessage: translate('entity.validation.required') }\n                    }}\n                  />\n                </AvGroup>\n                <AvGroup>\n                  <div className=\"divsubtitulos\">\n                    <Label id=\"lastNameLabel\" for=\"lastName\" className=\"subtitulos\">\n                      <Translate contentKey=\"sicoApp.cliente.lastName\">Last Name</Translate>\n                    </Label>\n                  </div>\n                  <AvField\n                    id=\"cliente-lastName\"\n                    type=\"text\"\n                    name=\"lastName\"\n                    className=\"bg\"\n                    validate={{\n                      required: { value: true, errorMessage: translate('entity.validation.required') }\n                    }}\n                  />\n                </AvGroup>\n                <AvGroup>\n                  <div className=\"divsubtitulos\">\n                    <Label id=\"mailLabel\" for=\"mail\" className=\"subtitulos\">\n                      <Translate contentKey=\"sicoApp.cliente.mail\">Mail</Translate>\n                    </Label>\n                  </div>\n                  <AvField id=\"cliente-mail\" className=\"bg\" required type=\"text\" name=\"mail\" />\n                </AvGroup>\n                <AvGroup>\n                  <div className=\"divsubtitulos\">\n                    <Label id=\"dniLabel\" for=\"dni\" className=\"subtitulos\">\n                      <Translate contentKey=\"sicoApp.cliente.dni\">Dni</Translate>\n                    </Label>\n                  </div>\n                  <AvField\n                    id=\"cliente-dni\"\n                    type=\"text\"\n                    name=\"dni\"\n                    className=\"bg\"\n                    validate={{\n                      required: { value: true, errorMessage: translate('entity.validation.required') }\n                    }}\n                  />\n                </AvGroup>\n                <AvGroup>\n                  <div className=\"divsubtitulos\">\n                    <Label id=\"fechaNacimientoLabel\" for=\"fechaNacimiento\" className=\"subtitulos\">\n                      <Translate contentKey=\"sicoApp.cliente.fechaNacimiento\">Fecha Nacimiento</Translate>\n                    </Label>\n                  </div>\n                  <AvInput\n                    id=\"cliente-fechaNacimiento\"\n                    type=\"date\"\n                    name=\"fechaNacimiento\"\n                    className=\"bg\"\n                    placeholder={'DD-MM-YYYY'}\n                    value={convertDateTimeFromServer(this.props.clienteEntity.fechaNacimiento)}\n                  />\n                </AvGroup>\n                <AvGroup>\n                  <div className=\"divsubtitulos\">\n                    <Label id=\"direccionLabel\" for=\"direccion\" className=\"subtitulos\">\n                      <Translate contentKey=\"sicoApp.cliente.direccion\">Direccion</Translate>\n                    </Label>\n                  </div>\n                  <AvField id=\"cliente-direccion\" className=\"bg\" type=\"text\" name=\"direccion\" />\n                </AvGroup>\n                <AvGroup>\n                  <div className=\"divsubtitulos\">\n                    <Label id=\"numeroLabel\" for=\"numero\" className=\"subtitulos\">\n                      <Translate contentKey=\"sicoApp.cliente.numero\">Numero</Translate>\n                    </Label>\n                  </div>\n                  <AvField id=\"cliente-numero\" type=\"string\" className=\"bg\" name=\"numero\" />\n                </AvGroup>\n                <AvGroup>\n                  <div className=\"divsubtitulos\">\n                    <Label for=\"department.id\" className=\"subtitulos\">\n                      <Translate contentKey=\"sicoApp.cliente.department\">Department</Translate>\n                    </Label>\n                  </div>\n                  <AvInput id=\"cliente-department\" type=\"select\" className=\"bg\" name=\"department.id\">\n                    <option value=\"\" key=\"0\" />\n                    {departments\n                      ? departments.map(otherEntity => (\n                          <option value={otherEntity.id} key={otherEntity.id}>\n                            {otherEntity.departmentName}\n                          </option>\n                        ))\n                      : null}\n                  </AvInput>\n                </AvGroup>\n                <AvGroup>\n                  <div className=\"divsubtitulos\">\n                    <Label id=\"telefonoLabel\" for=\"telefono\" className=\"subtitulos\">\n                      <Translate contentKey=\"sicoApp.cliente.telefono\">Telefono</Translate>\n                    </Label>\n                  </div>\n                  <AvField id=\"cliente-telefono\" className=\"bg\" type=\"text\" name=\"telefono\" />\n                </AvGroup>\n                <AvGroup>\n                  <div className=\"divsubtitulos\">\n                    <Label id=\"sexoLabel\" className=\"subtitulos\">\n                      <Translate contentKey=\"sicoApp.cliente.sexo\">Sexo</Translate>\n                    </Label>\n                  </div>\n                  <AvInput id=\"cliente-sexo\" type=\"select\" className=\"bg\" name=\"sexo\" value={clienteEntity.sexo}>\n                    <option value=\"MASCULINO\">\n                      <Translate contentKey=\"sicoApp.SEXO.MASCULINO\" />\n                    </option>\n                    <option value=\"FEMENINO\">\n                      <Translate contentKey=\"sicoApp.SEXO.FEMENINO\" />\n                    </option>\n                  </AvInput>\n                </AvGroup>\n                <AvGroup>\n                  <div className=\"divsubtitulos\">\n                    <Label id=\"salaryLabel\" for=\"nroCbu\" className=\"subtitulos\">\n                      <Translate contentKey=\"sicoApp.cliente.nroCbu\">Nro CBU</Translate>\n                    </Label>\n                  </div>\n                  <AvField id=\"cliente-nroCbu\" type=\"string\" className=\"bg\" name=\"nroCbu\" />\n                </AvGroup>\n                <AvGroup>\n                  <div className=\"divsubtitulos\">\n                    <Label id=\"salaryLabel\" for=\"numeroCuenta\" className=\"subtitulos\">\n                      <Translate contentKey=\"sicoApp.cliente.numeroCuenta\">Numero Cuenta</Translate>\n                    </Label>\n                  </div>\n                  <AvField id=\"cliente-numeroCuenta\" type=\"string\" className=\"bg\" name=\"numeroCuenta\" />\n                </AvGroup>\n                <AvGroup>\n                  <div className=\"divsubtitulos\">\n                    <Label for=\"banco.id\" className=\"subtitulos\">\n                      <Translate contentKey=\"sicoApp.cliente.banco\">Banco</Translate>\n                    </Label>\n                  </div>\n                  <AvInput id=\"cliente-banco\" type=\"select\" className=\"bg\" name=\"banco.id\">\n                    <option value=\"\" key=\"0\" />\n                    {bancos\n                      ? bancos.map(otherEntity => (\n                          <option value={otherEntity.id} key={otherEntity.id}>\n                            {otherEntity.bancoName}\n                          </option>\n                        ))\n                      : null}\n                  </AvInput>\n                </AvGroup>\n                <Button tag={Link} id=\"cancel-save\" to=\"/entity/cliente\" replace color=\"info\">\n                  <FontAwesomeIcon icon=\"arrow-left\" />\n                  &nbsp;\n                  <span className=\"d-none d-md-inline\">\n                    <Translate contentKey=\"entity.action.back\">Back</Translate>\n                  </span>\n                </Button>\n                &nbsp;\n                <Button color=\"primary\" id=\"save-entity\" type=\"submit\" disabled={updating}>\n                  <FontAwesomeIcon icon=\"save\" />\n                  &nbsp;\n                  <Translate contentKey=\"entity.action.save\">Save</Translate>\n                </Button>\n              </AvForm>\n            )}\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (storeState: IRootState) => ({\n  departments: storeState.department.entities,\n  bancos: storeState.banco.entities,\n  clienteEntity: storeState.cliente.entity,\n  loading: storeState.cliente.loading,\n  updating: storeState.cliente.updating,\n  updateSuccess: storeState.cliente.updateSuccess\n});\n\nconst mapDispatchToProps = {\n  getEntityByEmail,\n  getDepartments,\n  getBancos,\n  createEntityMisDatos,\n  updateEntityMisDatos,\n  reset\n};\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ClienteMisDatos);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, RouteComponentProps } from 'react-router-dom';\nimport { Row, Col, Alert } from 'reactstrap';\nimport { Translate, getUrlParameter } from 'react-jhipster';\n\nimport { IRootState } from 'app/shared/reducers';\nimport { IClienteUpdateProps } from 'app/entities/cliente/clientemisdatos';\nimport { activateAction, reset } from 'app/modules/account/activate/activate.reducer';\n\nexport interface IActivateProps extends StateProps, DispatchProps, RouteComponentProps<{ key: any }> {}\n\nexport class Clientemisdatosmensajes extends React.Component<IActivateProps> {\n  componentWillUnmount() {\n    this.props.reset();\n  }\n  render() {\n    return (\n      <div>\n        <Row className=\"justify-content-center\">\n          <Col md=\"8\">\n            <h1>\n              <Translate contentKey=\"actualization.title\">Actualizacion de Tus Datos</Translate>\n            </h1>\n            <Alert color=\"success\">\n              <Translate contentKey=\"actualization.messages.success\">\n                <strong>Sus Datos fueron actualizados con exito</strong> Please\n              </Translate>\n            </Alert>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = ({ activate }: IRootState) => ({\n  activationSuccess: activate.activationSuccess,\n  activationFailure: activate.activationFailure\n});\n\nconst mapDispatchToProps = { activateAction, reset };\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Clientemisdatosmensajes);\n","import React from 'react';\nimport { Switch } from 'react-router-dom';\n\nimport ErrorBoundaryRoute from 'app/shared/error/error-boundary-route';\n\nimport Cliente from './cliente';\nimport ClienteDetail from './cliente-detail';\nimport ClienteUpdate from './cliente-update';\nimport ClienteDeleteDialog from './cliente-delete-dialog';\n\nconst Routes = ({ match }) => (\n  <>\n    <Switch>\n      <ErrorBoundaryRoute exact path={`${match.url}/new`} component={ClienteUpdate} />\n      <ErrorBoundaryRoute exact path={`${match.url}/:id/edit`} component={ClienteUpdate} />\n      <ErrorBoundaryRoute exact path={`${match.url}/:id`} component={ClienteDetail} />\n      <ErrorBoundaryRoute path={match.url} component={Cliente} />\n    </Switch>\n    <ErrorBoundaryRoute path={`${match.url}/:id/delete`} component={ClienteDeleteDialog} />\n  </>\n);\n\nexport default Routes;\n","import axios from 'axios';\nimport { ICrudGetAction, ICrudGetAllAction, ICrudPutAction, ICrudDeleteAction } from 'react-jhipster';\n\nimport { cleanEntity } from 'app/shared/util/entity-utils';\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\n\nimport { ICountry, defaultValue } from 'app/shared/model/country.model';\n\nexport const ACTION_TYPES = {\n  FETCH_COUNTRY_LIST: 'country/FETCH_COUNTRY_LIST',\n  FETCH_COUNTRY: 'country/FETCH_COUNTRY',\n  CREATE_COUNTRY: 'country/CREATE_COUNTRY',\n  UPDATE_COUNTRY: 'country/UPDATE_COUNTRY',\n  DELETE_COUNTRY: 'country/DELETE_COUNTRY',\n  RESET: 'country/RESET'\n};\n\nconst initialState = {\n  loading: false,\n  errorMessage: null,\n  entities: [] as ReadonlyArray<ICountry>,\n  entity: defaultValue,\n  updating: false,\n  updateSuccess: false\n};\n\nexport type CountryState = Readonly<typeof initialState>;\n\n// Reducer\n\nexport default (state: CountryState = initialState, action): CountryState => {\n  switch (action.type) {\n    case REQUEST(ACTION_TYPES.FETCH_COUNTRY_LIST):\n    case REQUEST(ACTION_TYPES.FETCH_COUNTRY):\n      return {\n        ...state,\n        errorMessage: null,\n        updateSuccess: false,\n        loading: true\n      };\n    case REQUEST(ACTION_TYPES.CREATE_COUNTRY):\n    case REQUEST(ACTION_TYPES.UPDATE_COUNTRY):\n    case REQUEST(ACTION_TYPES.DELETE_COUNTRY):\n      return {\n        ...state,\n        errorMessage: null,\n        updateSuccess: false,\n        updating: true\n      };\n    case FAILURE(ACTION_TYPES.FETCH_COUNTRY_LIST):\n    case FAILURE(ACTION_TYPES.FETCH_COUNTRY):\n    case FAILURE(ACTION_TYPES.CREATE_COUNTRY):\n    case FAILURE(ACTION_TYPES.UPDATE_COUNTRY):\n    case FAILURE(ACTION_TYPES.DELETE_COUNTRY):\n      return {\n        ...state,\n        loading: false,\n        updating: false,\n        updateSuccess: false,\n        errorMessage: action.payload\n      };\n    case SUCCESS(ACTION_TYPES.FETCH_COUNTRY_LIST):\n      return {\n        ...state,\n        loading: false,\n        entities: action.payload.data\n      };\n    case SUCCESS(ACTION_TYPES.FETCH_COUNTRY):\n      return {\n        ...state,\n        loading: false,\n        entity: action.payload.data\n      };\n    case SUCCESS(ACTION_TYPES.CREATE_COUNTRY):\n    case SUCCESS(ACTION_TYPES.UPDATE_COUNTRY):\n      return {\n        ...state,\n        updating: false,\n        updateSuccess: true,\n        entity: action.payload.data\n      };\n    case SUCCESS(ACTION_TYPES.DELETE_COUNTRY):\n      return {\n        ...state,\n        updating: false,\n        updateSuccess: true,\n        entity: {}\n      };\n    case ACTION_TYPES.RESET:\n      return {\n        ...initialState\n      };\n    default:\n      return state;\n  }\n};\n\nconst apiUrl = 'api/countries';\n\n// Actions\n\nexport const getEntities: ICrudGetAllAction<ICountry> = (page, size, sort) => ({\n  type: ACTION_TYPES.FETCH_COUNTRY_LIST,\n  payload: axios.get<ICountry>(`${apiUrl}?cacheBuster=${new Date().getTime()}`)\n});\n\nexport const getEntity: ICrudGetAction<ICountry> = id => {\n  const requestUrl = `${apiUrl}/${id}`;\n  return {\n    type: ACTION_TYPES.FETCH_COUNTRY,\n    payload: axios.get<ICountry>(requestUrl)\n  };\n};\n\nexport const createEntity: ICrudPutAction<ICountry> = entity => async dispatch => {\n  const result = await dispatch({\n    type: ACTION_TYPES.CREATE_COUNTRY,\n    payload: axios.post(apiUrl, cleanEntity(entity))\n  });\n  dispatch(getEntities());\n  return result;\n};\n\nexport const updateEntity: ICrudPutAction<ICountry> = entity => async dispatch => {\n  const result = await dispatch({\n    type: ACTION_TYPES.UPDATE_COUNTRY,\n    payload: axios.put(apiUrl, cleanEntity(entity))\n  });\n  dispatch(getEntities());\n  return result;\n};\n\nexport const deleteEntity: ICrudDeleteAction<ICountry> = id => async dispatch => {\n  const requestUrl = `${apiUrl}/${id}`;\n  const result = await dispatch({\n    type: ACTION_TYPES.DELETE_COUNTRY,\n    payload: axios.delete(requestUrl)\n  });\n  dispatch(getEntities());\n  return result;\n};\n\nexport const reset = () => ({\n  type: ACTION_TYPES.RESET\n});\n","import axios from 'axios';\nimport { ICrudGetAction, ICrudGetAllAction, ICrudPutAction, ICrudDeleteAction } from 'react-jhipster';\n\nimport { cleanEntity } from 'app/shared/util/entity-utils';\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\n\nimport { ICreditDetalle, defaultValue } from 'app/shared/model/credit-detalle.model';\n\nexport const ACTION_TYPES = {\n  FETCH_CREDITDETALLE_LIST: 'creditDetalle/FETCH_CREDITDETALLE_LIST',\n  FETCH_CREDITDETALLE: 'creditDetalle/FETCH_CREDITDETALLE',\n  CREATE_CREDITDETALLE: 'creditDetalle/CREATE_CREDITDETALLE',\n  UPDATE_CREDITDETALLE: 'creditDetalle/UPDATE_CREDITDETALLE',\n  DELETE_CREDITDETALLE: 'creditDetalle/DELETE_CREDITDETALLE',\n  RESET: 'creditDetalle/RESET'\n};\n\nconst initialState = {\n  loading: false,\n  errorMessage: null,\n  entities: [] as ReadonlyArray<ICreditDetalle>,\n  entity: defaultValue,\n  updating: false,\n  updateSuccess: false\n};\n\nexport type CreditDetalleState = Readonly<typeof initialState>;\n\n// Reducer\n\nexport default (state: CreditDetalleState = initialState, action): CreditDetalleState => {\n  switch (action.type) {\n    case REQUEST(ACTION_TYPES.FETCH_CREDITDETALLE_LIST):\n    case REQUEST(ACTION_TYPES.FETCH_CREDITDETALLE):\n      return {\n        ...state,\n        errorMessage: null,\n        updateSuccess: false,\n        loading: true\n      };\n    case REQUEST(ACTION_TYPES.CREATE_CREDITDETALLE):\n    case REQUEST(ACTION_TYPES.UPDATE_CREDITDETALLE):\n    case REQUEST(ACTION_TYPES.DELETE_CREDITDETALLE):\n      return {\n        ...state,\n        errorMessage: null,\n        updateSuccess: false,\n        updating: true\n      };\n    case FAILURE(ACTION_TYPES.FETCH_CREDITDETALLE_LIST):\n    case FAILURE(ACTION_TYPES.FETCH_CREDITDETALLE):\n    case FAILURE(ACTION_TYPES.CREATE_CREDITDETALLE):\n    case FAILURE(ACTION_TYPES.UPDATE_CREDITDETALLE):\n    case FAILURE(ACTION_TYPES.DELETE_CREDITDETALLE):\n      return {\n        ...state,\n        loading: false,\n        updating: false,\n        updateSuccess: false,\n        errorMessage: action.payload\n      };\n    case SUCCESS(ACTION_TYPES.FETCH_CREDITDETALLE_LIST):\n      return {\n        ...state,\n        loading: false,\n        entities: action.payload.data\n      };\n    case SUCCESS(ACTION_TYPES.FETCH_CREDITDETALLE):\n      return {\n        ...state,\n        loading: false,\n        entity: action.payload.data\n      };\n    case SUCCESS(ACTION_TYPES.CREATE_CREDITDETALLE):\n    case SUCCESS(ACTION_TYPES.UPDATE_CREDITDETALLE):\n      return {\n        ...state,\n        updating: false,\n        updateSuccess: true,\n        entity: action.payload.data\n      };\n    case SUCCESS(ACTION_TYPES.DELETE_CREDITDETALLE):\n      return {\n        ...state,\n        updating: false,\n        updateSuccess: true,\n        entity: {}\n      };\n    case ACTION_TYPES.RESET:\n      return {\n        ...initialState\n      };\n    default:\n      return state;\n  }\n};\n\nconst apiUrl = 'api/credit-detalles';\n\n// Actions\n\nexport const getEntities: ICrudGetAllAction<ICreditDetalle> = (page, size, sort) => ({\n  type: ACTION_TYPES.FETCH_CREDITDETALLE_LIST,\n  payload: axios.get<ICreditDetalle>(`${apiUrl}?cacheBuster=${new Date().getTime()}`)\n});\n\nexport const getEntity: ICrudGetAction<ICreditDetalle> = id => {\n  const requestUrl = `${apiUrl}/${id}`;\n  return {\n    type: ACTION_TYPES.FETCH_CREDITDETALLE,\n    payload: axios.get<ICreditDetalle>(requestUrl)\n  };\n};\n\nexport const createEntity: ICrudPutAction<ICreditDetalle> = entity => async dispatch => {\n  const result = await dispatch({\n    type: ACTION_TYPES.CREATE_CREDITDETALLE,\n    payload: axios.post(apiUrl, cleanEntity(entity))\n  });\n  dispatch(getEntities());\n  return result;\n};\n\nexport const updateEntity: ICrudPutAction<ICreditDetalle> = entity => async dispatch => {\n  const result = await dispatch({\n    type: ACTION_TYPES.UPDATE_CREDITDETALLE,\n    payload: axios.put(apiUrl, cleanEntity(entity))\n  });\n  dispatch(getEntities());\n  return result;\n};\n\nexport const deleteEntity: ICrudDeleteAction<ICreditDetalle> = id => async dispatch => {\n  const requestUrl = `${apiUrl}/${id}`;\n  const result = await dispatch({\n    type: ACTION_TYPES.DELETE_CREDITDETALLE,\n    payload: axios.delete(requestUrl)\n  });\n  dispatch(getEntities());\n  return result;\n};\n\nexport const reset = () => ({\n  type: ACTION_TYPES.RESET\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\nimport { Translate, ICrudGetAction, ICrudDeleteAction } from 'react-jhipster';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { ICredit } from 'app/shared/model/credit.model';\nimport { IRootState } from 'app/shared/reducers';\nimport { getEntity, deleteEntity } from './credit.reducer';\n\nexport interface ICreditDeleteDialogProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\n\nexport class CreditDeleteDialog extends React.Component<ICreditDeleteDialogProps> {\n  componentDidMount() {\n    this.props.getEntity(this.props.match.params.id);\n  }\n\n  confirmDelete = event => {\n    this.props.deleteEntity(this.props.creditEntity.id);\n    this.handleClose(event);\n  };\n\n  handleClose = event => {\n    event.stopPropagation();\n    this.props.history.goBack();\n  };\n\n  render() {\n    const { creditEntity } = this.props;\n    return (\n      <Modal isOpen toggle={this.handleClose}>\n        <ModalHeader toggle={this.handleClose}>\n          <Translate contentKey=\"entity.delete.title\">Confirm delete operation</Translate>\n        </ModalHeader>\n        <ModalBody id=\"sicoApp.credit.delete.question\">\n          <Translate contentKey=\"sicoApp.credit.delete.question\" interpolate={{ id: creditEntity.id }}>\n            Are you sure you want to delete this Credit?\n          </Translate>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={this.handleClose}>\n            <FontAwesomeIcon icon=\"ban\" />\n            &nbsp;\n            <Translate contentKey=\"entity.action.cancel\">Cancel</Translate>\n          </Button>\n          <Button id=\"jhi-confirm-delete-credit\" color=\"danger\" onClick={this.confirmDelete}>\n            <FontAwesomeIcon icon=\"trash\" />\n            &nbsp;\n            <Translate contentKey=\"entity.action.delete\">Delete</Translate>\n          </Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nconst mapStateToProps = ({ credit }: IRootState) => ({\n  creditEntity: credit.entity\n});\n\nconst mapDispatchToProps = { getEntity, deleteEntity };\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CreditDeleteDialog);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, RouteComponentProps } from 'react-router-dom';\nimport { Button, Row, Col } from 'reactstrap';\n// tslint:disable-next-line:no-unused-variable\nimport { Translate, ICrudGetAction, TextFormat } from 'react-jhipster';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { IRootState } from 'app/shared/reducers';\nimport { getEntity } from './credit.reducer';\nimport { ICredit } from 'app/shared/model/credit.model';\n// tslint:disable-next-line:no-unused-variable\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\n\nexport interface ICreditDetailProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\n\nexport class CreditDetail extends React.Component<ICreditDetailProps> {\n  componentDidMount() {\n    this.props.getEntity(this.props.match.params.id);\n  }\n\n  render() {\n    const { creditEntity } = this.props;\n    return (\n      <Row>\n        <Col md=\"8\">\n          <h2>\n            <Translate contentKey=\"sicoApp.credit.detail.title\">Credit</Translate> [<b>{creditEntity.id}</b>]\n          </h2>\n          <dl className=\"jh-entity-details\">\n            <dt>\n              <span id=\"periodicidad\">\n                <Translate contentKey=\"sicoApp.credit.periodicidad\">Periodicidad</Translate>\n              </span>\n            </dt>\n            <dd>{creditEntity.periodicidad}</dd>\n            <dt>\n              <span id=\"diaHoraEjecucion\">\n                <Translate contentKey=\"sicoApp.credit.diaHoraEjecucion\">Dia Hora Ejecucion</Translate>\n              </span>\n            </dt>\n            <dd>{creditEntity.diaHoraEjecucion}</dd>\n            <dt>\n              <span id=\"tipoCobro\">\n                <Translate contentKey=\"sicoApp.credit.tipoCobro\">Tipo Cobro</Translate>\n              </span>\n            </dt>\n            <dd>{creditEntity.tipoCobro}</dd>\n            <dt>\n              <span id=\"monto\">\n                <Translate contentKey=\"sicoApp.credit.monto\">Monto</Translate>\n              </span>\n            </dt>\n            <dd>{creditEntity.monto}</dd>\n            <dt>\n              <span id=\"observaciones\">\n                <Translate contentKey=\"sicoApp.credit.observaciones\">Observaciones</Translate>\n              </span>\n            </dt>\n            <dd>{creditEntity.observaciones}</dd>\n            <dt>\n              <span id=\"activo\">\n                <Translate contentKey=\"sicoApp.credit.activo\">Activo</Translate>\n              </span>\n            </dt>\n            <dd>{creditEntity.activo ? 'true' : 'false'}</dd>\n            <dt>\n              <span id=\"cantCuotas\">\n                <Translate contentKey=\"sicoApp.credit.cantCuotas\">Cant Cuotas</Translate>\n              </span>\n            </dt>\n            <dd>{creditEntity.cantCuotas}</dd>\n            <dt>\n              <span id=\"cuotaCobrada\">\n                <Translate contentKey=\"sicoApp.credit.cuotaCobrada\">Cuota Cobrada</Translate>\n              </span>\n            </dt>\n            <dd>{creditEntity.cuotaCobrada}</dd>\n            <dt>\n              <span id=\"fechaCreacion\">\n                <Translate contentKey=\"sicoApp.credit.fechaCreacion\">Fecha Creacion</Translate>\n              </span>\n            </dt>\n            <dd>\n              <TextFormat value={creditEntity.fechaCreacion} type=\"date\" format={APP_DATE_FORMAT} />\n            </dd>\n            <dt>\n              <span id=\"fechaInicio\">\n                <Translate contentKey=\"sicoApp.credit.fechaInicio\">Fecha Inicio</Translate>\n              </span>\n            </dt>\n            <dd>\n              <TextFormat value={creditEntity.fechaInicio} type=\"date\" format={APP_DATE_FORMAT} />\n            </dd>\n            <dt>\n              <span id=\"fechaVencimiento\">\n                <Translate contentKey=\"sicoApp.credit.fechaVencimiento\">Fecha Vencimiento</Translate>\n              </span>\n            </dt>\n            <dd>\n              <TextFormat value={creditEntity.fechaVencimiento} type=\"date\" format={APP_DATE_FORMAT} />\n            </dd>\n            <dt>\n              <span id=\"excluirFindeSemanas\">\n                <Translate contentKey=\"sicoApp.credit.excluirFindeSemanas\">Excluir Finde Semanas</Translate>\n              </span>\n            </dt>\n            <dd>{creditEntity.excluirFindeSemanas ? 'true' : 'false'}</dd>\n            <dt>\n              <span id=\"porcParticipacion\">\n                <Translate contentKey=\"sicoApp.credit.porcParticipacion\">Porc Participacion</Translate>\n              </span>\n            </dt>\n            <dd>{creditEntity.porcParticipacion}</dd>\n            <dt>\n              <span id=\"capitalPrestamo\">\n                <Translate contentKey=\"sicoApp.credit.capitalPrestamo\">Capital Prestamo</Translate>\n              </span>\n            </dt>\n            <dd>{creditEntity.capitalPrestamo}</dd>\n            <dt>\n              <span id=\"interesesPrestamos\">\n                <Translate contentKey=\"sicoApp.credit.interesesPrestamos\">Intereses Prestamos</Translate>\n              </span>\n            </dt>\n            <dd>{creditEntity.interesesPrestamos}</dd>\n            <dt>\n              <span id=\"cuotaPura\">\n                <Translate contentKey=\"sicoApp.credit.cuotaPura\">Cuota Pura</Translate>\n              </span>\n            </dt>\n            <dd>{creditEntity.cuotaPura}</dd>\n            <dt>\n              <span id=\"interesesCuota\">\n                <Translate contentKey=\"sicoApp.credit.interesesCuota\">Intereses Cuota</Translate>\n              </span>\n            </dt>\n            <dd>{creditEntity.interesesCuota}</dd>\n            <dt>\n              <span id=\"cuotaRecuperoCapital\">\n                <Translate contentKey=\"sicoApp.credit.cuotaRecuperoCapital\">Cuota Recupero Capital</Translate>\n              </span>\n            </dt>\n            <dd>{creditEntity.cuotaRecuperoCapital}</dd>\n            <dt>\n              <span id=\"cantidadRenegociado\">\n                <Translate contentKey=\"sicoApp.credit.cantidadRenegociado\">Cantidad Renegociado</Translate>\n              </span>\n            </dt>\n            <dd>{creditEntity.cantidadRenegociado}</dd>\n            <dt>\n              <span id=\"incobrable\">\n                <Translate contentKey=\"sicoApp.credit.incobrable\">Incobrable</Translate>\n              </span>\n            </dt>\n            <dd>{creditEntity.incobrable ? 'true' : 'false'}</dd>\n            <dt>\n              <span id=\"pagoManual\">\n                <Translate contentKey=\"sicoApp.credit.pagoManual\">Pago Manual</Translate>\n              </span>\n            </dt>\n            <dd>{creditEntity.pagoManual ? 'true' : 'false'}</dd>\n            <dt>\n              <span id=\"esPersonal\">\n                <Translate contentKey=\"sicoApp.credit.esPersonal\">Es Personal</Translate>\n              </span>\n            </dt>\n            <dd>{creditEntity.esPersonal ? 'true' : 'false'}</dd>\n          </dl>\n          <Button tag={Link} to=\"/entity/credit\" replace color=\"info\">\n            <FontAwesomeIcon icon=\"arrow-left\" />{' '}\n            <span className=\"d-none d-md-inline\">\n              <Translate contentKey=\"entity.action.back\">Back</Translate>\n            </span>\n          </Button>\n          &nbsp;\n          <Button tag={Link} to={`/entity/credit/${creditEntity.id}/edit`} replace color=\"primary\">\n            <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\n            <span className=\"d-none d-md-inline\">\n              <Translate contentKey=\"entity.action.edit\">Edit</Translate>\n            </span>\n          </Button>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nconst mapStateToProps = ({ credit }: IRootState) => ({\n  creditEntity: credit.entity\n});\n\nconst mapDispatchToProps = { getEntity };\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CreditDetail);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, RouteComponentProps } from 'react-router-dom';\nimport { Button, Row, Col, Label } from 'reactstrap';\nimport { AvForm, AvGroup, AvInput, AvField } from 'availity-reactstrap-validation';\n// tslint:disable-next-line:no-unused-variable\nimport { Translate, translate, ICrudGetAction, ICrudGetAllAction, ICrudPutAction } from 'react-jhipster';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { IRootState } from 'app/shared/reducers';\n\nimport { getEntity, updateEntity, createEntity, reset } from './credit.reducer';\nimport { ICredit } from 'app/shared/model/credit.model';\n// tslint:disable-next-line:no-unused-variable\nimport { convertDateTimeFromServer, convertDateTimeToServer } from 'app/shared/util/date-utils';\nimport { mapIdList } from 'app/shared/util/entity-utils';\n\nexport interface ICreditUpdateProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\n\nexport interface ICreditUpdateState {\n  isNew: boolean;\n}\n\nexport class CreditUpdate extends React.Component<ICreditUpdateProps, ICreditUpdateState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isNew: !this.props.match.params || !this.props.match.params.id\n    };\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    if (nextProps.updateSuccess !== this.props.updateSuccess && nextProps.updateSuccess) {\n      this.handleClose();\n    }\n  }\n\n  componentDidMount() {\n    if (this.state.isNew) {\n      this.props.reset();\n    } else {\n      this.props.getEntity(this.props.match.params.id);\n    }\n  }\n\n  saveEntity = (event, errors, values) => {\n    values.fechaCreacion = convertDateTimeToServer(values.fechaCreacion);\n    values.fechaInicio = convertDateTimeToServer(values.fechaInicio);\n    values.fechaVencimiento = convertDateTimeToServer(values.fechaVencimiento);\n\n    if (errors.length === 0) {\n      const { creditEntity } = this.props;\n      const entity = {\n        ...creditEntity,\n        ...values\n      };\n\n      if (this.state.isNew) {\n        this.props.createEntity(entity);\n      } else {\n        this.props.updateEntity(entity);\n      }\n    }\n  };\n\n  handleClose = () => {\n    this.props.history.push('/entity/credit');\n  };\n\n  render() {\n    const { creditEntity, loading, updating } = this.props;\n    const { isNew } = this.state;\n\n    return (\n      <div>\n        <Row className=\"justify-content-center\">\n          <Col md=\"8\">\n            <h2 id=\"sicoApp.credit.home.createOrEditLabel\">\n              <Translate contentKey=\"sicoApp.credit.home.createOrEditLabel\">Create or edit a Credit</Translate>\n            </h2>\n          </Col>\n        </Row>\n        <Row className=\"justify-content-center\">\n          <Col md=\"8\">\n            {loading ? (\n              <p>Loading...</p>\n            ) : (\n              <AvForm model={isNew ? {} : creditEntity} onSubmit={this.saveEntity}>\n                {!isNew ? (\n                  <AvGroup>\n                    <Label for=\"id\">\n                      <Translate contentKey=\"global.field.id\">ID</Translate>\n                    </Label>\n                    <AvInput id=\"credit-id\" type=\"text\" className=\"form-control\" name=\"id\" required readOnly />\n                  </AvGroup>\n                ) : null}\n                {/*<AvGroup>\n                  <Label id=\"periodicidadLabel\">\n                    <Translate contentKey=\"sicoApp.credit.periodicidad\">Periodicidad</Translate>\n                  </Label>\n                  <AvInput\n                    id=\"credit-periodicidad\"\n                    type=\"select\"\n                    className=\"form-control\"\n                    name=\"periodicidad\"\n                    value={(!isNew && creditEntity.periodicidad) || 'DIARIO'}\n                  >\n                    <option value=\"DIARIO\">\n                      <Translate contentKey=\"sicoApp.Periodicidad.DIARIO\" />\n                    </option>\n                    <option value=\"SEMANAL\">\n                      <Translate contentKey=\"sicoApp.Periodicidad.SEMANAL\" />\n                    </option>\n                    <option value=\"MENSUAL\">\n                      <Translate contentKey=\"sicoApp.Periodicidad.MENSUAL\" />\n                    </option>\n                    <option value=\"BIMENSUAL\">\n                      <Translate contentKey=\"sicoApp.Periodicidad.BIMENSUAL\" />\n                    </option>\n                    <option value=\"SEMESTRAL\">\n                      <Translate contentKey=\"sicoApp.Periodicidad.SEMESTRAL\" />\n                    </option>\n                  </AvInput>\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"diaHoraEjecucionLabel\" for=\"diaHoraEjecucion\">\n                    <Translate contentKey=\"sicoApp.credit.diaHoraEjecucion\">Dia Hora Ejecucion</Translate>\n                  </Label>\n                  <AvField id=\"credit-diaHoraEjecucion\" type=\"string\" className=\"form-control\" name=\"diaHoraEjecucion\" />\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"tipoCobroLabel\">\n                    <Translate contentKey=\"sicoApp.credit.tipoCobro\">Tipo Cobro</Translate>\n                  </Label>\n                  <AvInput\n                    id=\"credit-tipoCobro\"\n                    type=\"select\"\n                    className=\"form-control\"\n                    name=\"tipoCobro\"\n                    value={(!isNew && creditEntity.tipoCobro) || 'PRESTAMO'}\n                  >\n                    <option value=\"PRESTAMO\">\n                      <Translate contentKey=\"sicoApp.TipoCobro.PRESTAMO\" />\n                    </option>\n                    <option value=\"INSUMOINFORMATICO\">\n                      <Translate contentKey=\"sicoApp.TipoCobro.INSUMOINFORMATICO\" />\n                    </option>\n                  </AvInput>\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"montoLabel\" for=\"monto\">\n                    <Translate contentKey=\"sicoApp.credit.monto\">Monto</Translate>\n                  </Label>\n                  <AvField id=\"credit-monto\" type=\"string\" className=\"form-control\" name=\"monto\" />\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"observacionesLabel\" for=\"observaciones\">\n                    <Translate contentKey=\"sicoApp.credit.observaciones\">Observaciones</Translate>\n                  </Label>\n                  <AvField id=\"credit-observaciones\" type=\"text\" name=\"observaciones\" />\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"activoLabel\" check>\n                    <AvInput id=\"credit-activo\" type=\"checkbox\" className=\"form-control\" name=\"activo\" />\n                    <Translate contentKey=\"sicoApp.credit.activo\">Activo</Translate>\n                  </Label>\n                </AvGroup>*/}\n                <AvGroup>\n                  <Label id=\"capitalPrestamoLabel\" for=\"capitalPrestamo\">\n                    <Translate contentKey=\"sicoApp.credit.capitalPrestamo\">Capital Prestamo</Translate>\n                  </Label>\n                  <AvField id=\"credit-capitalPrestamo\" type=\"string\" className=\"form-control\" name=\"capitalPrestamo\" />\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"cantCuotasLabel\" for=\"cantCuotas\">\n                    <Translate contentKey=\"sicoApp.credit.cantCuotas\">Cant Cuotas</Translate>\n                  </Label>\n                  <AvField id=\"credit-cantCuotas\" type=\"string\" className=\"form-control\" name=\"cantCuotas\" />\n                </AvGroup>\n                {/*<AvGroup>\n                  <Label id=\"cuotaCobradaLabel\" for=\"cuotaCobrada\">\n                    <Translate contentKey=\"sicoApp.credit.cuotaCobrada\">Cuota Cobrada</Translate>\n                  </Label>\n                  <AvField id=\"credit-cuotaCobrada\" type=\"string\" className=\"form-control\" name=\"cuotaCobrada\" />\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"fechaCreacionLabel\" for=\"fechaCreacion\">\n                    <Translate contentKey=\"sicoApp.credit.fechaCreacion\">Fecha Creacion</Translate>\n                  </Label>\n                  <AvInput\n                    id=\"credit-fechaCreacion\"\n                    type=\"datetime-local\"\n                    className=\"form-control\"\n                    name=\"fechaCreacion\"\n                    placeholder={'YYYY-MM-DD HH:mm'}\n                    value={isNew ? null : convertDateTimeFromServer(this.props.creditEntity.fechaCreacion)}\n                  />\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"fechaInicioLabel\" for=\"fechaInicio\">\n                    <Translate contentKey=\"sicoApp.credit.fechaInicio\">Fecha Inicio</Translate>\n                  </Label>\n                  <AvInput\n                    id=\"credit-fechaInicio\"\n                    type=\"datetime-local\"\n                    className=\"form-control\"\n                    name=\"fechaInicio\"\n                    placeholder={'YYYY-MM-DD HH:mm'}\n                    value={isNew ? null : convertDateTimeFromServer(this.props.creditEntity.fechaInicio)}\n                  />\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"fechaVencimientoLabel\" for=\"fechaVencimiento\">\n                    <Translate contentKey=\"sicoApp.credit.fechaVencimiento\">Fecha Vencimiento</Translate>\n                  </Label>\n                  <AvInput\n                    id=\"credit-fechaVencimiento\"\n                    type=\"datetime-local\"\n                    className=\"form-control\"\n                    name=\"fechaVencimiento\"\n                    placeholder={'YYYY-MM-DD HH:mm'}\n                    value={isNew ? null : convertDateTimeFromServer(this.props.creditEntity.fechaVencimiento)}\n                  />\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"excluirFindeSemanasLabel\" check>\n                    <AvInput id=\"credit-excluirFindeSemanas\" type=\"checkbox\" className=\"form-control\" name=\"excluirFindeSemanas\" />\n                    <Translate contentKey=\"sicoApp.credit.excluirFindeSemanas\">Excluir Finde Semanas</Translate>\n                  </Label>\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"porcParticipacionLabel\" for=\"porcParticipacion\">\n                    <Translate contentKey=\"sicoApp.credit.porcParticipacion\">Porc Participacion</Translate>\n                  </Label>\n                  <AvField id=\"credit-porcParticipacion\" type=\"string\" className=\"form-control\" name=\"porcParticipacion\" />\n                </AvGroup>*/}\n                {/*<AvGroup>\n                  <Label id=\"interesesPrestamosLabel\" for=\"interesesPrestamos\">\n                    <Translate contentKey=\"sicoApp.credit.interesesPrestamos\">Intereses Prestamos</Translate>\n                  </Label>\n                  <AvField id=\"credit-interesesPrestamos\" type=\"string\" className=\"form-control\" name=\"interesesPrestamos\" />\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"cuotaPuraLabel\" for=\"cuotaPura\">\n                    <Translate contentKey=\"sicoApp.credit.cuotaPura\">Cuota Pura</Translate>\n                  </Label>\n                  <AvField id=\"credit-cuotaPura\" type=\"string\" className=\"form-control\" name=\"cuotaPura\" />\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"interesesCuotaLabel\" for=\"interesesCuota\">\n                    <Translate contentKey=\"sicoApp.credit.interesesCuota\">Intereses Cuota</Translate>\n                  </Label>\n                  <AvField id=\"credit-interesesCuota\" type=\"string\" className=\"form-control\" name=\"interesesCuota\" />\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"cuotaRecuperoCapitalLabel\" for=\"cuotaRecuperoCapital\">\n                    <Translate contentKey=\"sicoApp.credit.cuotaRecuperoCapital\">Cuota Recupero Capital</Translate>\n                  </Label>\n                  <AvField id=\"credit-cuotaRecuperoCapital\" type=\"string\" className=\"form-control\" name=\"cuotaRecuperoCapital\" />\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"cantidadRenegociadoLabel\" for=\"cantidadRenegociado\">\n                    <Translate contentKey=\"sicoApp.credit.cantidadRenegociado\">Cantidad Renegociado</Translate>\n                  </Label>\n                  <AvField id=\"credit-cantidadRenegociado\" type=\"string\" className=\"form-control\" name=\"cantidadRenegociado\" />\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"incobrableLabel\" check>\n                    <AvInput id=\"credit-incobrable\" type=\"checkbox\" className=\"form-control\" name=\"incobrable\" />\n                    <Translate contentKey=\"sicoApp.credit.incobrable\">Incobrable</Translate>\n                  </Label>\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"pagoManualLabel\" check>\n                    <AvInput id=\"credit-pagoManual\" type=\"checkbox\" className=\"form-control\" name=\"pagoManual\" />\n                    <Translate contentKey=\"sicoApp.credit.pagoManual\">Pago Manual</Translate>\n                  </Label>\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"esPersonalLabel\" check>\n                    <AvInput id=\"credit-esPersonal\" type=\"checkbox\" className=\"form-control\" name=\"esPersonal\" />\n                    <Translate contentKey=\"sicoApp.credit.esPersonal\">Es Personal</Translate>\n                  </Label>\n                </AvGroup>*/}\n                <Button tag={Link} id=\"cancel-save\" to=\"/entity/credit\" replace color=\"info\">\n                  <FontAwesomeIcon icon=\"arrow-left\" />\n                  &nbsp;\n                  <span className=\"d-none d-md-inline\">\n                    <Translate contentKey=\"entity.action.back\">Back</Translate>\n                  </span>\n                </Button>\n                &nbsp;\n                <Button color=\"primary\" id=\"save-entity\" type=\"submit\" disabled={updating}>\n                  <FontAwesomeIcon icon=\"save\" />\n                  &nbsp;\n                  <Translate contentKey=\"entity.action.save\">Save</Translate>\n                </Button>\n              </AvForm>\n            )}\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (storeState: IRootState) => ({\n  creditEntity: storeState.credit.entity,\n  loading: storeState.credit.loading,\n  updating: storeState.credit.updating,\n  updateSuccess: storeState.credit.updateSuccess\n});\n\nconst mapDispatchToProps = {\n  getEntity,\n  updateEntity,\n  createEntity,\n  reset\n};\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CreditUpdate);\n","import axios from 'axios';\nimport { ICrudGetAction, ICrudGetAllAction, ICrudPutAction, ICrudDeleteAction } from 'react-jhipster';\n\nimport { cleanEntity } from 'app/shared/util/entity-utils';\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\n\nimport { ICredit, defaultValue } from 'app/shared/model/credit.model';\n\nexport const ACTION_TYPES = {\n  FETCH_CREDIT_LIST: 'credit/FETCH_CREDIT_LIST',\n  FETCH_CREDIT: 'credit/FETCH_CREDIT',\n  CREATE_CREDIT: 'credit/CREATE_CREDIT',\n  UPDATE_CREDIT: 'credit/UPDATE_CREDIT',\n  DELETE_CREDIT: 'credit/DELETE_CREDIT',\n  RESET: 'credit/RESET'\n};\n\nconst initialState = {\n  loading: false,\n  errorMessage: null,\n  entities: [] as ReadonlyArray<ICredit>,\n  entity: defaultValue,\n  updating: false,\n  totalItems: 0,\n  updateSuccess: false\n};\n\nexport type CreditState = Readonly<typeof initialState>;\n\n// Reducer\n\nexport default (state: CreditState = initialState, action): CreditState => {\n  switch (action.type) {\n    case REQUEST(ACTION_TYPES.FETCH_CREDIT_LIST):\n    case REQUEST(ACTION_TYPES.FETCH_CREDIT):\n      return {\n        ...state,\n        errorMessage: null,\n        updateSuccess: false,\n        loading: true\n      };\n    case REQUEST(ACTION_TYPES.CREATE_CREDIT):\n    case REQUEST(ACTION_TYPES.UPDATE_CREDIT):\n    case REQUEST(ACTION_TYPES.DELETE_CREDIT):\n      return {\n        ...state,\n        errorMessage: null,\n        updateSuccess: false,\n        updating: true\n      };\n    case FAILURE(ACTION_TYPES.FETCH_CREDIT_LIST):\n    case FAILURE(ACTION_TYPES.FETCH_CREDIT):\n    case FAILURE(ACTION_TYPES.CREATE_CREDIT):\n    case FAILURE(ACTION_TYPES.UPDATE_CREDIT):\n    case FAILURE(ACTION_TYPES.DELETE_CREDIT):\n      return {\n        ...state,\n        loading: false,\n        updating: false,\n        updateSuccess: false,\n        errorMessage: action.payload\n      };\n    case SUCCESS(ACTION_TYPES.FETCH_CREDIT_LIST):\n      return {\n        ...state,\n        loading: false,\n        totalItems: action.payload.headers['x-total-count'],\n        entities: action.payload.data\n      };\n    case SUCCESS(ACTION_TYPES.FETCH_CREDIT):\n      return {\n        ...state,\n        loading: false,\n        entity: action.payload.data\n      };\n    case SUCCESS(ACTION_TYPES.CREATE_CREDIT):\n    case SUCCESS(ACTION_TYPES.UPDATE_CREDIT):\n      return {\n        ...state,\n        updating: false,\n        updateSuccess: true,\n        entity: action.payload.data\n      };\n    case SUCCESS(ACTION_TYPES.DELETE_CREDIT):\n      return {\n        ...state,\n        updating: false,\n        updateSuccess: true,\n        entity: {}\n      };\n    case ACTION_TYPES.RESET:\n      return {\n        ...initialState\n      };\n    default:\n      return state;\n  }\n};\n\nconst apiUrl = 'api/credits';\n\n// Actions\n\nexport const getEntities: ICrudGetAllAction<ICredit> = (page, size, sort) => {\n  const requestUrl = `${apiUrl}${sort ? `?page=${page}&size=${size}&sort=${sort}` : ''}`;\n  return {\n    type: ACTION_TYPES.FETCH_CREDIT_LIST,\n    payload: axios.get<ICredit>(`${requestUrl}${sort ? '&' : '?'}cacheBuster=${new Date().getTime()}`)\n  };\n};\n\nexport const getEntity: ICrudGetAction<ICredit> = id => {\n  const requestUrl = `${apiUrl}/${id}`;\n  return {\n    type: ACTION_TYPES.FETCH_CREDIT,\n    payload: axios.get<ICredit>(requestUrl)\n  };\n};\n\nexport const createEntity: ICrudPutAction<ICredit> = entity => async dispatch => {\n  const result = await dispatch({\n    type: ACTION_TYPES.CREATE_CREDIT,\n    payload: axios.post(apiUrl, cleanEntity(entity))\n  });\n  dispatch(getEntities());\n  return result;\n};\n\nexport const updateEntity: ICrudPutAction<ICredit> = entity => async dispatch => {\n  const result = await dispatch({\n    type: ACTION_TYPES.UPDATE_CREDIT,\n    payload: axios.put(apiUrl, cleanEntity(entity))\n  });\n  dispatch(getEntities());\n  return result;\n};\n\nexport const deleteEntity: ICrudDeleteAction<ICredit> = id => async dispatch => {\n  const requestUrl = `${apiUrl}/${id}`;\n  const result = await dispatch({\n    type: ACTION_TYPES.DELETE_CREDIT,\n    payload: axios.delete(requestUrl)\n  });\n  dispatch(getEntities());\n  return result;\n};\n\nexport const reset = () => ({\n  type: ACTION_TYPES.RESET\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, RouteComponentProps } from 'react-router-dom';\nimport { Button, Col, Row, Table } from 'reactstrap';\n// tslint:disable-next-line:no-unused-variable\nimport {\n  Translate,\n  ICrudGetAllAction,\n  TextFormat,\n  getSortState,\n  IPaginationBaseState,\n  getPaginationItemsNumber,\n  JhiPagination\n} from 'react-jhipster';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { IRootState } from 'app/shared/reducers';\nimport { getEntities } from './credit.reducer';\nimport { ICredit } from 'app/shared/model/credit.model';\n// tslint:disable-next-line:no-unused-variable\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\nimport { ITEMS_PER_PAGE } from 'app/shared/util/pagination.constants';\n\nexport interface ICreditProps extends StateProps, DispatchProps, RouteComponentProps<{ url: string }> {}\n\nexport type ICreditState = IPaginationBaseState;\n\nexport class Credit extends React.Component<ICreditProps, ICreditState> {\n  state: ICreditState = {\n    ...getSortState(this.props.location, ITEMS_PER_PAGE)\n  };\n\n  componentDidMount() {\n    this.getEntities();\n  }\n\n  sort = prop => () => {\n    this.setState(\n      {\n        order: this.state.order === 'asc' ? 'desc' : 'asc',\n        sort: prop\n      },\n      () => this.sortEntities()\n    );\n  };\n\n  sortEntities() {\n    this.getEntities();\n    this.props.history.push(`${this.props.location.pathname}?page=${this.state.activePage}&sort=${this.state.sort},${this.state.order}`);\n  }\n\n  handlePagination = activePage => this.setState({ activePage }, () => this.sortEntities());\n\n  getEntities = () => {\n    const { activePage, itemsPerPage, sort, order } = this.state;\n    this.props.getEntities(activePage - 1, itemsPerPage, `${sort},${order}`);\n  };\n\n  render() {\n    const { creditList, match, totalItems } = this.props;\n    return (\n      <div>\n        <h2 id=\"credit-heading\">\n          <Translate contentKey=\"sicoApp.credit.home.title\">Credits</Translate>\n          <Link to={`${match.url}/new`} className=\"btn btn-primary float-right jh-create-entity\" id=\"jh-create-entity\">\n            <FontAwesomeIcon icon=\"plus\" />\n            &nbsp;\n            <Translate contentKey=\"sicoApp.credit.home.createLabel\">Create new Credit</Translate>\n          </Link>\n        </h2>\n        <div className=\"table-responsive\">\n          <Table responsive>\n            <thead>\n              <tr>\n                <th className=\"hand\" onClick={this.sort('id')}>\n                  <Translate contentKey=\"global.field.id\">ID</Translate> <FontAwesomeIcon icon=\"sort\" />\n                </th>\n                <th className=\"hand\" onClick={this.sort('periodicidad')}>\n                  <Translate contentKey=\"sicoApp.credit.periodicidad\">Periodicidad</Translate> <FontAwesomeIcon icon=\"sort\" />\n                </th>\n                <th className=\"hand\" onClick={this.sort('diaHoraEjecucion')}>\n                  <Translate contentKey=\"sicoApp.credit.diaHoraEjecucion\">Dia Hora Ejecucion</Translate> <FontAwesomeIcon icon=\"sort\" />\n                </th>\n                {/*<th className=\"hand\" onClick={this.sort('tipoCobro')}>\n                  <Translate contentKey=\"sicoApp.credit.tipoCobro\">Tipo Cobro</Translate> <FontAwesomeIcon icon=\"sort\" />\n                </th>*/}\n                <th className=\"hand\" onClick={this.sort('monto')}>\n                  <Translate contentKey=\"sicoApp.credit.monto\">Monto</Translate> <FontAwesomeIcon icon=\"sort\" />\n                </th>\n                {/* <th className=\"hand\" onClick={this.sort('observaciones')}>\n                  <Translate contentKey=\"sicoApp.credit.observaciones\">Observaciones</Translate> <FontAwesomeIcon icon=\"sort\" />\n                </th>\n                <th className=\"hand\" onClick={this.sort('activo')}>\n                  <Translate contentKey=\"sicoApp.credit.activo\">Activo</Translate> <FontAwesomeIcon icon=\"sort\" />\n                </th>*/}\n                <th className=\"hand\" onClick={this.sort('capitalPrestamo')}>\n                  <Translate contentKey=\"sicoApp.credit.capitalPrestamo\">Capital Prestamo</Translate> <FontAwesomeIcon icon=\"sort\" />\n                </th>\n                <th className=\"hand\" onClick={this.sort('cantCuotas')}>\n                  <Translate contentKey=\"sicoApp.credit.cantCuotas\">Cant Cuotas</Translate> <FontAwesomeIcon icon=\"sort\" />\n                </th>\n                <th className=\"hand\" onClick={this.sort('cuotaCobrada')}>\n                  <Translate contentKey=\"sicoApp.credit.cuotaCobrada\">Cuota Cobrada</Translate> <FontAwesomeIcon icon=\"sort\" />\n                </th>\n                {/* <th className=\"hand\" onClick={this.sort('fechaCreacion')}>\n                  <Translate contentKey=\"sicoApp.credit.fechaCreacion\">Fecha Creacion</Translate> <FontAwesomeIcon icon=\"sort\" />\n                </th>\n                <th className=\"hand\" onClick={this.sort('fechaInicio')}>\n                  <Translate contentKey=\"sicoApp.credit.fechaInicio\">Fecha Inicio</Translate> <FontAwesomeIcon icon=\"sort\" />\n                </th>*/}\n                <th className=\"hand\" onClick={this.sort('fechaVencimiento')}>\n                  <Translate contentKey=\"sicoApp.credit.fechaVencimiento\">Fecha Vencimiento</Translate> <FontAwesomeIcon icon=\"sort\" />\n                </th>\n                {/*<th className=\"hand\" onClick={this.sort('excluirFindeSemanas')}>\n                  <Translate contentKey=\"sicoApp.credit.excluirFindeSemanas\">Excluir Finde Semanas</Translate>{' '}\n                  <FontAwesomeIcon icon=\"sort\" />\n                </th>\n                <th className=\"hand\" onClick={this.sort('porcParticipacion')}>\n                  <Translate contentKey=\"sicoApp.credit.porcParticipacion\">Porc Participacion</Translate> <FontAwesomeIcon icon=\"sort\" />\n                </th>*/}\n\n                {/*<th className=\"hand\" onClick={this.sort('interesesPrestamos')}>\n                  <Translate contentKey=\"sicoApp.credit.interesesPrestamos\">Intereses Prestamos</Translate> <FontAwesomeIcon icon=\"sort\" />\n                </th>\n                <th className=\"hand\" onClick={this.sort('cuotaPura')}>\n                  <Translate contentKey=\"sicoApp.credit.cuotaPura\">Cuota Pura</Translate> <FontAwesomeIcon icon=\"sort\" />\n                </th>\n                <th className=\"hand\" onClick={this.sort('interesesCuota')}>\n                  <Translate contentKey=\"sicoApp.credit.interesesCuota\">Intereses Cuota</Translate> <FontAwesomeIcon icon=\"sort\" />\n                </th>\n                <th className=\"hand\" onClick={this.sort('cuotaRecuperoCapital')}>\n                  <Translate contentKey=\"sicoApp.credit.cuotaRecuperoCapital\">Cuota Recupero Capital</Translate>{' '}\n                  <FontAwesomeIcon icon=\"sort\" />\n                </th>\n                <th className=\"hand\" onClick={this.sort('cantidadRenegociado')}>\n                  <Translate contentKey=\"sicoApp.credit.cantidadRenegociado\">Cantidad Renegociado</Translate>{' '}\n                  <FontAwesomeIcon icon=\"sort\" />\n                </th>\n                <th className=\"hand\" onClick={this.sort('incobrable')}>\n                  <Translate contentKey=\"sicoApp.credit.incobrable\">Incobrable</Translate> <FontAwesomeIcon icon=\"sort\" />\n                </th>\n                <th className=\"hand\" onClick={this.sort('pagoManual')}>\n                  <Translate contentKey=\"sicoApp.credit.pagoManual\">Pago Manual</Translate> <FontAwesomeIcon icon=\"sort\" />\n                </th>\n                <th className=\"hand\" onClick={this.sort('esPersonal')}>\n                  <Translate contentKey=\"sicoApp.credit.esPersonal\">Es Personal</Translate> <FontAwesomeIcon icon=\"sort\" />\n                </th>*/}\n                <th />\n              </tr>\n            </thead>\n            <tbody>\n              {creditList.map((credit, i) => (\n                <tr key={`entity-${i}`}>\n                  <td>\n                    <Button tag={Link} to={`${match.url}/${credit.id}`} color=\"link\" size=\"sm\">\n                      {credit.id}\n                    </Button>\n                  </td>\n                  <td>\n                    <Translate contentKey={`sicoApp.Periodicidad.${credit.periodicidad}`} />\n                  </td>\n                  <td>{credit.diaHoraEjecucion}</td>\n                  {/*<td>\n                    <Translate contentKey={`sicoApp.TipoCobro.${credit.tipoCobro}`} />\n                  </td>*/}\n                  <td>{credit.capitalPrestamo}</td>\n                  <td>{credit.monto}</td>\n                  {/*   <td>{credit.observaciones}</td>\n                  <td>{credit.activo ? 'true' : 'false'}</td>*/}\n                  <td>{credit.cantCuotas}</td>\n                  <td>{credit.cuotaCobrada}</td>\n                  {/* <td>\n                    <TextFormat type=\"date\" value={credit.fechaCreacion} format={APP_DATE_FORMAT} />\n                  </td>\n                  <td>\n                    <TextFormat type=\"date\" value={credit.fechaInicio} format={APP_DATE_FORMAT} />\n                  </td>*/}\n                  <td>\n                    <TextFormat type=\"date\" value={credit.fechaVencimiento} format={APP_DATE_FORMAT} />\n                  </td>\n                  {/*<td>{credit.excluirFindeSemanas ? 'true' : 'false'}</td>\n                  <td>{credit.porcParticipacion}</td>*/}\n\n                  {/*<td>{credit.interesesPrestamos}</td>\n                  <td>{credit.cuotaPura}</td>\n                  <td>{credit.interesesCuota}</td>\n                  <td>{credit.cuotaRecuperoCapital}</td>\n                  <td>{credit.cantidadRenegociado}</td>\n                  <td>{credit.incobrable ? 'true' : 'false'}</td>\n                  <td>{credit.pagoManual ? 'true' : 'false'}</td>\n                  <td>{credit.esPersonal ? 'true' : 'false'}</td>*/}\n                  <td className=\"text-right\">\n                    <div className=\"btn-group flex-btn-group-container\">\n                      <Button tag={Link} to={`${match.url}/${credit.id}`} color=\"info\" size=\"sm\">\n                        <FontAwesomeIcon icon=\"eye\" />{' '}\n                        <span className=\"d-none d-md-inline\">\n                          <Translate contentKey=\"entity.action.view\">View</Translate>\n                        </span>\n                      </Button>\n                      {/*<Button tag={Link} to={`${match.url}/${credit.id}/edit`} color=\"primary\" size=\"sm\">\n                        <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\n                        <span className=\"d-none d-md-inline\">\n                          <Translate contentKey=\"entity.action.edit\">Edit</Translate>\n                        </span>\n                      </Button>\n                      <Button tag={Link} to={`${match.url}/${credit.id}/delete`} color=\"danger\" size=\"sm\">\n                        <FontAwesomeIcon icon=\"trash\" />{' '}\n                        <span className=\"d-none d-md-inline\">\n                          <Translate contentKey=\"entity.action.delete\">Delete</Translate>\n                        </span>\n                      </Button>*/}\n                    </div>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </div>\n        <Row className=\"justify-content-center\">\n          <JhiPagination\n            items={getPaginationItemsNumber(totalItems, this.state.itemsPerPage)}\n            activePage={this.state.activePage}\n            onSelect={this.handlePagination}\n            maxButtons={5}\n          />\n        </Row>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ credit }: IRootState) => ({\n  creditList: credit.entities,\n  totalItems: credit.totalItems\n});\n\nconst mapDispatchToProps = {\n  getEntities\n};\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Credit);\n","import React from 'react';\nimport { Switch } from 'react-router-dom';\n\nimport ErrorBoundaryRoute from 'app/shared/error/error-boundary-route';\n\nimport Credit from './credit';\nimport CreditDetail from './credit-detail';\nimport CreditUpdate from './credit-update';\nimport CreditDeleteDialog from './credit-delete-dialog';\n\nconst Routes = ({ match }) => (\n  <>\n    <Switch>\n      <ErrorBoundaryRoute exact path={`${match.url}/new`} component={CreditUpdate} />\n      <ErrorBoundaryRoute exact path={`${match.url}/:id/edit`} component={CreditUpdate} />\n      <ErrorBoundaryRoute exact path={`${match.url}/:id`} component={CreditDetail} />\n      <ErrorBoundaryRoute path={match.url} component={Credit} />\n    </Switch>\n    <ErrorBoundaryRoute path={`${match.url}/:id/delete`} component={CreditDeleteDialog} />\n  </>\n);\n\nexport default Routes;\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\r\nimport { Translate, ICrudGetAction, ICrudDeleteAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IDepartment } from 'app/shared/model/department.model';\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity, deleteEntity } from './department.reducer';\r\n\r\nexport interface IDepartmentDeleteDialogProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class DepartmentDeleteDialog extends React.Component<IDepartmentDeleteDialogProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  confirmDelete = event => {\r\n    this.props.deleteEntity(this.props.departmentEntity.id);\r\n    this.handleClose(event);\r\n  };\r\n\r\n  handleClose = event => {\r\n    event.stopPropagation();\r\n    this.props.history.goBack();\r\n  };\r\n\r\n  render() {\r\n    const { departmentEntity } = this.props;\r\n    return (\r\n      <Modal isOpen toggle={this.handleClose}>\r\n        <ModalHeader toggle={this.handleClose}>\r\n          <Translate contentKey=\"entity.delete.title\">Confirm delete operation</Translate>\r\n        </ModalHeader>\r\n        <ModalBody id=\"sicoApp.department.delete.question\">\r\n          <Translate contentKey=\"sicoApp.department.delete.question\" interpolate={{ id: departmentEntity.id }}>\r\n            Are you sure you want to delete this Department?\r\n          </Translate>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={this.handleClose}>\r\n            <FontAwesomeIcon icon=\"ban\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.cancel\">Cancel</Translate>\r\n          </Button>\r\n          <Button id=\"jhi-confirm-delete-department\" color=\"danger\" onClick={this.confirmDelete}>\r\n            <FontAwesomeIcon icon=\"trash\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ department }: IRootState) => ({\r\n  departmentEntity: department.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity, deleteEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(DepartmentDeleteDialog);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity } from './department.reducer';\r\nimport { IDepartment } from 'app/shared/model/department.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\n\r\nexport interface IDepartmentDetailProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class DepartmentDetail extends React.Component<IDepartmentDetailProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  render() {\r\n    const { departmentEntity } = this.props;\r\n    return (\r\n      <Row>\r\n        <Col md=\"8\">\r\n          <h2>\r\n            <Translate contentKey=\"sicoApp.department.detail.title\">Department</Translate> [<b>{departmentEntity.id}</b>]\r\n          </h2>\r\n          <dl className=\"jh-entity-details\">\r\n            <dt>\r\n              <span id=\"departmentName\">\r\n                <Translate contentKey=\"sicoApp.department.departmentName\">Department Name</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{departmentEntity.departmentName}</dd>\r\n          </dl>\r\n          <Button tag={Link} to=\"/entity/department\" replace color=\"info\">\r\n            <FontAwesomeIcon icon=\"arrow-left\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n            </span>\r\n          </Button>\r\n          &nbsp;\r\n          <Button tag={Link} to={`/entity/department/${departmentEntity.id}/edit`} replace color=\"primary\">\r\n            <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n            </span>\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ department }: IRootState) => ({\r\n  departmentEntity: department.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(DepartmentDetail);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col, Label } from 'reactstrap';\r\nimport { AvForm, AvGroup, AvInput, AvField } from 'availity-reactstrap-validation';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, translate, ICrudGetAction, ICrudGetAllAction, ICrudPutAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IRootState } from 'app/shared/reducers';\r\n\r\nimport { getEntity, updateEntity, createEntity, reset } from './department.reducer';\r\nimport { IDepartment } from 'app/shared/model/department.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { convertDateTimeFromServer, convertDateTimeToServer } from 'app/shared/util/date-utils';\r\nimport { mapIdList } from 'app/shared/util/entity-utils';\r\n\r\nexport interface IDepartmentUpdateProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport interface IDepartmentUpdateState {\r\n  isNew: boolean;\r\n}\r\n\r\nexport class DepartmentUpdate extends React.Component<IDepartmentUpdateProps, IDepartmentUpdateState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isNew: !this.props.match.params || !this.props.match.params.id\r\n    };\r\n  }\r\n\r\n  componentWillUpdate(nextProps, nextState) {\r\n    if (nextProps.updateSuccess !== this.props.updateSuccess && nextProps.updateSuccess) {\r\n      this.handleClose();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.state.isNew) {\r\n      this.props.reset();\r\n    } else {\r\n      this.props.getEntity(this.props.match.params.id);\r\n    }\r\n  }\r\n\r\n  saveEntity = (event, errors, values) => {\r\n    if (errors.length === 0) {\r\n      const { departmentEntity } = this.props;\r\n      const entity = {\r\n        ...departmentEntity,\r\n        ...values\r\n      };\r\n\r\n      if (this.state.isNew) {\r\n        this.props.createEntity(entity);\r\n      } else {\r\n        this.props.updateEntity(entity);\r\n      }\r\n    }\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.props.history.push('/entity/department');\r\n  };\r\n\r\n  render() {\r\n    const { departmentEntity, loading, updating } = this.props;\r\n    const { isNew } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            <h2 id=\"sicoApp.department.home.createOrEditLabel\">\r\n              <Translate contentKey=\"sicoApp.department.home.createOrEditLabel\">Create or edit a Department</Translate>\r\n            </h2>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            {loading ? (\r\n              <p>Loading...</p>\r\n            ) : (\r\n              <AvForm model={isNew ? {} : departmentEntity} onSubmit={this.saveEntity}>\r\n                {!isNew ? (\r\n                  <AvGroup>\r\n                    <Label for=\"id\">\r\n                      <Translate contentKey=\"global.field.id\">ID</Translate>\r\n                    </Label>\r\n                    <AvInput id=\"department-id\" type=\"text\" className=\"form-control\" name=\"id\" required readOnly />\r\n                  </AvGroup>\r\n                ) : null}\r\n                <AvGroup>\r\n                  <Label id=\"departmentNameLabel\" for=\"departmentName\">\r\n                    <Translate contentKey=\"sicoApp.department.departmentName\">Department Name</Translate>\r\n                  </Label>\r\n                  <AvField\r\n                    id=\"department-departmentName\"\r\n                    type=\"text\"\r\n                    name=\"departmentName\"\r\n                    validate={{\r\n                      required: { value: true, errorMessage: translate('entity.validation.required') }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <Button tag={Link} id=\"cancel-save\" to=\"/entity/department\" replace color=\"info\">\r\n                  <FontAwesomeIcon icon=\"arrow-left\" />\r\n                  &nbsp;\r\n                  <span className=\"d-none d-md-inline\">\r\n                    <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n                  </span>\r\n                </Button>\r\n                &nbsp;\r\n                <Button color=\"primary\" id=\"save-entity\" type=\"submit\" disabled={updating}>\r\n                  <FontAwesomeIcon icon=\"save\" />\r\n                  &nbsp;\r\n                  <Translate contentKey=\"entity.action.save\">Save</Translate>\r\n                </Button>\r\n              </AvForm>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (storeState: IRootState) => ({\r\n  departmentEntity: storeState.department.entity,\r\n  loading: storeState.department.loading,\r\n  updating: storeState.department.updating,\r\n  updateSuccess: storeState.department.updateSuccess\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getEntity,\r\n  updateEntity,\r\n  createEntity,\r\n  reset\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(DepartmentUpdate);\r\n","import axios from 'axios';\nimport { ICrudGetAction, ICrudGetAllAction, ICrudPutAction, ICrudDeleteAction } from 'react-jhipster';\n\nimport { cleanEntity } from 'app/shared/util/entity-utils';\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\n\nimport { IDepartment, defaultValue } from 'app/shared/model/department.model';\n\nexport const ACTION_TYPES = {\n  FETCH_DEPARTMENT_LIST: 'department/FETCH_DEPARTMENT_LIST',\n  FETCH_DEPARTMENT: 'department/FETCH_DEPARTMENT',\n  CREATE_DEPARTMENT: 'department/CREATE_DEPARTMENT',\n  UPDATE_DEPARTMENT: 'department/UPDATE_DEPARTMENT',\n  DELETE_DEPARTMENT: 'department/DELETE_DEPARTMENT',\n  RESET: 'department/RESET'\n};\n\nconst initialState = {\n  loading: false,\n  errorMessage: null,\n  entities: [] as ReadonlyArray<IDepartment>,\n  entity: defaultValue,\n  updating: false,\n  updateSuccess: false\n};\n\nexport type DepartmentState = Readonly<typeof initialState>;\n\n// Reducer\n\nexport default (state: DepartmentState = initialState, action): DepartmentState => {\n  switch (action.type) {\n    case REQUEST(ACTION_TYPES.FETCH_DEPARTMENT_LIST):\n    case REQUEST(ACTION_TYPES.FETCH_DEPARTMENT):\n      return {\n        ...state,\n        errorMessage: null,\n        updateSuccess: false,\n        loading: true\n      };\n    case REQUEST(ACTION_TYPES.CREATE_DEPARTMENT):\n    case REQUEST(ACTION_TYPES.UPDATE_DEPARTMENT):\n    case REQUEST(ACTION_TYPES.DELETE_DEPARTMENT):\n      return {\n        ...state,\n        errorMessage: null,\n        updateSuccess: false,\n        updating: true\n      };\n    case FAILURE(ACTION_TYPES.FETCH_DEPARTMENT_LIST):\n    case FAILURE(ACTION_TYPES.FETCH_DEPARTMENT):\n    case FAILURE(ACTION_TYPES.CREATE_DEPARTMENT):\n    case FAILURE(ACTION_TYPES.UPDATE_DEPARTMENT):\n    case FAILURE(ACTION_TYPES.DELETE_DEPARTMENT):\n      return {\n        ...state,\n        loading: false,\n        updating: false,\n        updateSuccess: false,\n        errorMessage: action.payload\n      };\n    case SUCCESS(ACTION_TYPES.FETCH_DEPARTMENT_LIST):\n      return {\n        ...state,\n        loading: false,\n        entities: action.payload.data\n      };\n    case SUCCESS(ACTION_TYPES.FETCH_DEPARTMENT):\n      return {\n        ...state,\n        loading: false,\n        entity: action.payload.data\n      };\n    case SUCCESS(ACTION_TYPES.CREATE_DEPARTMENT):\n    case SUCCESS(ACTION_TYPES.UPDATE_DEPARTMENT):\n      return {\n        ...state,\n        updating: false,\n        updateSuccess: true,\n        entity: action.payload.data\n      };\n    case SUCCESS(ACTION_TYPES.DELETE_DEPARTMENT):\n      return {\n        ...state,\n        updating: false,\n        updateSuccess: true,\n        entity: {}\n      };\n    case ACTION_TYPES.RESET:\n      return {\n        ...initialState\n      };\n    default:\n      return state;\n  }\n};\n\nconst apiUrl = 'api/departments';\n\n// Actions\n\nexport const getEntities: ICrudGetAllAction<IDepartment> = (page, size, sort) => ({\n  type: ACTION_TYPES.FETCH_DEPARTMENT_LIST,\n  payload: axios.get<IDepartment>(`${apiUrl}?cacheBuster=${new Date().getTime()}`)\n});\n\nexport const getEntity: ICrudGetAction<IDepartment> = id => {\n  const requestUrl = `${apiUrl}/${id}`;\n  return {\n    type: ACTION_TYPES.FETCH_DEPARTMENT,\n    payload: axios.get<IDepartment>(requestUrl)\n  };\n};\n\nexport const createEntity: ICrudPutAction<IDepartment> = entity => async dispatch => {\n  const result = await dispatch({\n    type: ACTION_TYPES.CREATE_DEPARTMENT,\n    payload: axios.post(apiUrl, cleanEntity(entity))\n  });\n  dispatch(getEntities());\n  return result;\n};\n\nexport const updateEntity: ICrudPutAction<IDepartment> = entity => async dispatch => {\n  const result = await dispatch({\n    type: ACTION_TYPES.UPDATE_DEPARTMENT,\n    payload: axios.put(apiUrl, cleanEntity(entity))\n  });\n  dispatch(getEntities());\n  return result;\n};\n\nexport const deleteEntity: ICrudDeleteAction<IDepartment> = id => async dispatch => {\n  const requestUrl = `${apiUrl}/${id}`;\n  const result = await dispatch({\n    type: ACTION_TYPES.DELETE_DEPARTMENT,\n    payload: axios.delete(requestUrl)\n  });\n  dispatch(getEntities());\n  return result;\n};\n\nexport const reset = () => ({\n  type: ACTION_TYPES.RESET\n});\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Col, Row, Table } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAllAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntities } from './department.reducer';\r\nimport { IDepartment } from 'app/shared/model/department.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\n\r\nexport interface IDepartmentProps extends StateProps, DispatchProps, RouteComponentProps<{ url: string }> {}\r\n\r\nexport class Department extends React.Component<IDepartmentProps> {\r\n  componentDidMount() {\r\n    this.props.getEntities();\r\n  }\r\n\r\n  render() {\r\n    const { departmentList, match } = this.props;\r\n    return (\r\n      <div>\r\n        <h2 id=\"department-heading\">\r\n          <Translate contentKey=\"sicoApp.department.home.title\">Departments</Translate>\r\n          <Link to={`${match.url}/new`} className=\"btn btn-primary float-right jh-create-entity\" id=\"jh-create-entity\">\r\n            <FontAwesomeIcon icon=\"plus\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"sicoApp.department.home.createLabel\">Create new Department</Translate>\r\n          </Link>\r\n        </h2>\r\n        <div className=\"table-responsive\">\r\n          <Table responsive>\r\n            <thead>\r\n              <tr>\r\n                <th>\r\n                  <Translate contentKey=\"global.field.id\">ID</Translate>\r\n                </th>\r\n                <th>\r\n                  <Translate contentKey=\"sicoApp.department.departmentName\">Department Name</Translate>\r\n                </th>\r\n                <th />\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {departmentList.map((department, i) => (\r\n                <tr key={`entity-${i}`}>\r\n                  <td>\r\n                    <Button tag={Link} to={`${match.url}/${department.id}`} color=\"link\" size=\"sm\">\r\n                      {department.id}\r\n                    </Button>\r\n                  </td>\r\n                  <td>{department.departmentName}</td>\r\n                  <td className=\"text-right\">\r\n                    <div className=\"btn-group flex-btn-group-container\">\r\n                      <Button tag={Link} to={`${match.url}/${department.id}`} color=\"info\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"eye\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.view\">View</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${department.id}/edit`} color=\"primary\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${department.id}/delete`} color=\"danger\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"trash\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n                        </span>\r\n                      </Button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ department }: IRootState) => ({\r\n  departmentList: department.entities\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getEntities\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Department);\r\n","import React from 'react';\nimport { Switch } from 'react-router-dom';\n\nimport ErrorBoundaryRoute from 'app/shared/error/error-boundary-route';\n\nimport Department from './department';\nimport DepartmentDetail from './department-detail';\nimport DepartmentUpdate from './department-update';\nimport DepartmentDeleteDialog from './department-delete-dialog';\n\nconst Routes = ({ match }) => (\n  <>\n    <Switch>\n      <ErrorBoundaryRoute exact path={`${match.url}/new`} component={DepartmentUpdate} />\n      <ErrorBoundaryRoute exact path={`${match.url}/:id/edit`} component={DepartmentUpdate} />\n      <ErrorBoundaryRoute exact path={`${match.url}/:id`} component={DepartmentDetail} />\n      <ErrorBoundaryRoute path={match.url} component={Department} />\n    </Switch>\n    <ErrorBoundaryRoute path={`${match.url}/:id/delete`} component={DepartmentDeleteDialog} />\n  </>\n);\n\nexport default Routes;\n","import React from 'react';\nimport { Switch } from 'react-router-dom';\n\n// tslint:disable-next-line:no-unused-variable\nimport ErrorBoundaryRoute from 'app/shared/error/error-boundary-route';\n\nimport Region from './region';\nimport Country from './country';\nimport Location from './location';\nimport Department from './department';\nimport Banco from './banco';\nimport CreditDetalle from './credit-detalle';\nimport Credit from './credit';\nimport Cliente from './cliente';\nimport ClienteMisDatos from './cliente/clientemisdatos';\nimport ClienteMisDatosAviso from './cliente/clientemisdatosmensajes';\nimport { AUTHORITIES } from 'app/config/constants';\nimport PrivateRoute from 'app/shared/auth/private-route';\nimport Recaudador from './recaudador';\nimport RecaudadorDetalle from './recaudador-detalle';\nimport Token from './token';\n/* jhipster-needle-add-route-import - JHipster will add routes here */\n\nconst Routes = ({ match }) => (\n  <div>\n    <Switch>\n      {/* prettier-ignore */}\n      {/*<ErrorBoundaryRoute path={`${match.url}/region`} component={Region} />*/}\n      {/*<ErrorBoundaryRoute path={`${match.url}/country`} component={Country} />*/}\n      {/*      <ErrorBoundaryRoute path={`${match.url}/location`} component={Location} />*/}\n      <ErrorBoundaryRoute path={`${match.url}/department`} component={Department} />\n      {/* <ErrorBoundaryRoute path={`${match.url}/task`} component={Task} />\n        {/*  <ErrorBoundaryRoute path={`${match.url}/employee`} component={Employee} />\n      <ErrorBoundaryRoute path={`${match.url}/job`} component={Job} />\n      <ErrorBoundaryRoute path={`${match.url}/job-history`} component={JobHistory} />*/}\n      <ErrorBoundaryRoute path={`${match.url}/banco`} component={Banco} />\n      <ErrorBoundaryRoute path={`${match.url}/credit`} component={Credit} />\n      <ErrorBoundaryRoute path={`${match.url}/clientemisdatos`} component={ClienteMisDatos} />\n      <ErrorBoundaryRoute path={`${match.url}/clientemisdatosmensajes`} component={ClienteMisDatosAviso} />\n      {/*<ErrorBoundaryRoute path={`${match.url}/cliente`} component={Cliente} />*/}\n      <PrivateRoute path={`${match.url}/cliente`} component={Cliente} hasAnyAuthorities={[AUTHORITIES.ADMIN]} />\n      <ErrorBoundaryRoute path={`${match.url}/recaudador`} component={Recaudador} />\n      <ErrorBoundaryRoute path={`${match.url}/recaudador-detalle`} component={RecaudadorDetalle} />\n        <ErrorBoundaryRoute path={`${match.url}/token`} component={Token} />\n      {/* jhipster-needle-add-route-path - JHipster will routes here */}\n    </Switch>\n  </div>\n);\n\nexport default Routes;\n","import axios from 'axios';\nimport { ICrudGetAction, ICrudGetAllAction, ICrudPutAction, ICrudDeleteAction } from 'react-jhipster';\n\nimport { cleanEntity } from 'app/shared/util/entity-utils';\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\n\nimport { ILocation, defaultValue } from 'app/shared/model/location.model';\n\nexport const ACTION_TYPES = {\n  FETCH_LOCATION_LIST: 'location/FETCH_LOCATION_LIST',\n  FETCH_LOCATION: 'location/FETCH_LOCATION',\n  CREATE_LOCATION: 'location/CREATE_LOCATION',\n  UPDATE_LOCATION: 'location/UPDATE_LOCATION',\n  DELETE_LOCATION: 'location/DELETE_LOCATION',\n  RESET: 'location/RESET'\n};\n\nconst initialState = {\n  loading: false,\n  errorMessage: null,\n  entities: [] as ReadonlyArray<ILocation>,\n  entity: defaultValue,\n  updating: false,\n  updateSuccess: false\n};\n\nexport type LocationState = Readonly<typeof initialState>;\n\n// Reducer\n\nexport default (state: LocationState = initialState, action): LocationState => {\n  switch (action.type) {\n    case REQUEST(ACTION_TYPES.FETCH_LOCATION_LIST):\n    case REQUEST(ACTION_TYPES.FETCH_LOCATION):\n      return {\n        ...state,\n        errorMessage: null,\n        updateSuccess: false,\n        loading: true\n      };\n    case REQUEST(ACTION_TYPES.CREATE_LOCATION):\n    case REQUEST(ACTION_TYPES.UPDATE_LOCATION):\n    case REQUEST(ACTION_TYPES.DELETE_LOCATION):\n      return {\n        ...state,\n        errorMessage: null,\n        updateSuccess: false,\n        updating: true\n      };\n    case FAILURE(ACTION_TYPES.FETCH_LOCATION_LIST):\n    case FAILURE(ACTION_TYPES.FETCH_LOCATION):\n    case FAILURE(ACTION_TYPES.CREATE_LOCATION):\n    case FAILURE(ACTION_TYPES.UPDATE_LOCATION):\n    case FAILURE(ACTION_TYPES.DELETE_LOCATION):\n      return {\n        ...state,\n        loading: false,\n        updating: false,\n        updateSuccess: false,\n        errorMessage: action.payload\n      };\n    case SUCCESS(ACTION_TYPES.FETCH_LOCATION_LIST):\n      return {\n        ...state,\n        loading: false,\n        entities: action.payload.data\n      };\n    case SUCCESS(ACTION_TYPES.FETCH_LOCATION):\n      return {\n        ...state,\n        loading: false,\n        entity: action.payload.data\n      };\n    case SUCCESS(ACTION_TYPES.CREATE_LOCATION):\n    case SUCCESS(ACTION_TYPES.UPDATE_LOCATION):\n      return {\n        ...state,\n        updating: false,\n        updateSuccess: true,\n        entity: action.payload.data\n      };\n    case SUCCESS(ACTION_TYPES.DELETE_LOCATION):\n      return {\n        ...state,\n        updating: false,\n        updateSuccess: true,\n        entity: {}\n      };\n    case ACTION_TYPES.RESET:\n      return {\n        ...initialState\n      };\n    default:\n      return state;\n  }\n};\n\nconst apiUrl = 'api/locations';\n\n// Actions\n\nexport const getEntities: ICrudGetAllAction<ILocation> = (page, size, sort) => ({\n  type: ACTION_TYPES.FETCH_LOCATION_LIST,\n  payload: axios.get<ILocation>(`${apiUrl}?cacheBuster=${new Date().getTime()}`)\n});\n\nexport const getEntity: ICrudGetAction<ILocation> = id => {\n  const requestUrl = `${apiUrl}/${id}`;\n  return {\n    type: ACTION_TYPES.FETCH_LOCATION,\n    payload: axios.get<ILocation>(requestUrl)\n  };\n};\n\nexport const createEntity: ICrudPutAction<ILocation> = entity => async dispatch => {\n  const result = await dispatch({\n    type: ACTION_TYPES.CREATE_LOCATION,\n    payload: axios.post(apiUrl, cleanEntity(entity))\n  });\n  dispatch(getEntities());\n  return result;\n};\n\nexport const updateEntity: ICrudPutAction<ILocation> = entity => async dispatch => {\n  const result = await dispatch({\n    type: ACTION_TYPES.UPDATE_LOCATION,\n    payload: axios.put(apiUrl, cleanEntity(entity))\n  });\n  dispatch(getEntities());\n  return result;\n};\n\nexport const deleteEntity: ICrudDeleteAction<ILocation> = id => async dispatch => {\n  const requestUrl = `${apiUrl}/${id}`;\n  const result = await dispatch({\n    type: ACTION_TYPES.DELETE_LOCATION,\n    payload: axios.delete(requestUrl)\n  });\n  dispatch(getEntities());\n  return result;\n};\n\nexport const reset = () => ({\n  type: ACTION_TYPES.RESET\n});\n","import React from 'react';\nimport { Switch } from 'react-router-dom';\n\nimport ErrorBoundaryRoute from 'app/shared/error/error-boundary-route';\n\nimport RecaudadorDetalle from './recaudador-detalle';\nimport RecaudadorDetalleDetail from './recaudador-detalle-detail';\nimport RecaudadorDetalleUpdate from './recaudador-detalle-update';\nimport RecaudadorDetalleDeleteDialog from './recaudador-detalle-delete-dialog';\n\nconst Routes = ({ match }) => (\n  <>\n    <Switch>\n      <ErrorBoundaryRoute exact path={`${match.url}/new`} component={RecaudadorDetalleUpdate} />\n      <ErrorBoundaryRoute exact path={`${match.url}/:id/edit`} component={RecaudadorDetalleUpdate} />\n      <ErrorBoundaryRoute exact path={`${match.url}/:id`} component={RecaudadorDetalleDetail} />\n      <ErrorBoundaryRoute path={match.url} component={RecaudadorDetalle} />\n    </Switch>\n    <ErrorBoundaryRoute path={`${match.url}/:id/delete`} component={RecaudadorDetalleDeleteDialog} />\n  </>\n);\n\nexport default Routes;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\nimport { Translate, ICrudGetAction, ICrudDeleteAction } from 'react-jhipster';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { IRecaudadorDetalle } from 'app/shared/model/recaudador-detalle.model';\nimport { IRootState } from 'app/shared/reducers';\nimport { getEntity, deleteEntity } from './recaudador-detalle.reducer';\n\nexport interface IRecaudadorDetalleDeleteDialogProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\n\nexport class RecaudadorDetalleDeleteDialog extends React.Component<IRecaudadorDetalleDeleteDialogProps> {\n  componentDidMount() {\n    this.props.getEntity(this.props.match.params.id);\n  }\n\n  confirmDelete = event => {\n    this.props.deleteEntity(this.props.recaudadorDetalleEntity.id);\n    this.handleClose(event);\n  };\n\n  handleClose = event => {\n    event.stopPropagation();\n    this.props.history.goBack();\n  };\n\n  render() {\n    const { recaudadorDetalleEntity } = this.props;\n    return (\n      <Modal isOpen toggle={this.handleClose}>\n        <ModalHeader toggle={this.handleClose}>\n          <Translate contentKey=\"entity.delete.title\">Confirm delete operation</Translate>\n        </ModalHeader>\n        <ModalBody id=\"sicoApp.recaudadorDetalle.delete.question\">\n          <Translate contentKey=\"sicoApp.recaudadorDetalle.delete.question\" interpolate={{ id: recaudadorDetalleEntity.id }}>\n            Are you sure you want to delete this RecaudadorDetalle?\n          </Translate>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={this.handleClose}>\n            <FontAwesomeIcon icon=\"ban\" />&nbsp;\n            <Translate contentKey=\"entity.action.cancel\">Cancel</Translate>\n          </Button>\n          <Button id=\"jhi-confirm-delete-recaudadorDetalle\" color=\"danger\" onClick={this.confirmDelete}>\n            <FontAwesomeIcon icon=\"trash\" />&nbsp;\n            <Translate contentKey=\"entity.action.delete\">Delete</Translate>\n          </Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nconst mapStateToProps = ({ recaudadorDetalle }: IRootState) => ({\n  recaudadorDetalleEntity: recaudadorDetalle.entity\n});\n\nconst mapDispatchToProps = { getEntity, deleteEntity };\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RecaudadorDetalleDeleteDialog);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, RouteComponentProps } from 'react-router-dom';\nimport { Button, Row, Col } from 'reactstrap';\n// tslint:disable-next-line:no-unused-variable\nimport { Translate, ICrudGetAction, TextFormat } from 'react-jhipster';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { IRootState } from 'app/shared/reducers';\nimport { getEntity } from './recaudador-detalle.reducer';\nimport { IRecaudadorDetalle } from 'app/shared/model/recaudador-detalle.model';\n// tslint:disable-next-line:no-unused-variable\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\n\nexport interface IRecaudadorDetalleDetailProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\n\nexport class RecaudadorDetalleDetail extends React.Component<IRecaudadorDetalleDetailProps> {\n  componentDidMount() {\n    this.props.getEntity(this.props.match.params.id);\n  }\n\n  render() {\n    const { recaudadorDetalleEntity } = this.props;\n    return (\n      <Row>\n        <Col md=\"8\">\n          <h2>\n            <Translate contentKey=\"sicoApp.recaudadorDetalle.detail.title\">RecaudadorDetalle</Translate> [<b>\n              {recaudadorDetalleEntity.id}\n            </b>]\n          </h2>\n          <dl className=\"jh-entity-details\">\n            <dt>\n              <span id=\"ejecutada\">\n                <Translate contentKey=\"sicoApp.recaudadorDetalle.ejecutada\">Ejecutada</Translate>\n              </span>\n            </dt>\n            <dd>{recaudadorDetalleEntity.ejecutada}</dd>\n            <dt>\n              <span id=\"fechaEjecucion\">\n                <Translate contentKey=\"sicoApp.recaudadorDetalle.fechaEjecucion\">Fecha Ejecucion</Translate>\n              </span>\n            </dt>\n            <dd>\n              <TextFormat value={recaudadorDetalleEntity.fechaEjecucion} type=\"date\" format={APP_DATE_FORMAT} />\n            </dd>\n            <dt>\n              <span id=\"fechaProgramada\">\n                <Translate contentKey=\"sicoApp.recaudadorDetalle.fechaProgramada\">Fecha Programada</Translate>\n              </span>\n            </dt>\n            <dd>\n              <TextFormat value={recaudadorDetalleEntity.fechaProgramada} type=\"date\" format={APP_DATE_FORMAT} />\n            </dd>\n            <dt>\n              <span id=\"nroCuota\">\n                <Translate contentKey=\"sicoApp.recaudadorDetalle.nroCuota\">Nro Cuota</Translate>\n              </span>\n            </dt>\n            <dd>{recaudadorDetalleEntity.nroCuota}</dd>\n            <dt>\n              <span id=\"observaciones\">\n                <Translate contentKey=\"sicoApp.recaudadorDetalle.observaciones\">Observaciones</Translate>\n              </span>\n            </dt>\n            <dd>{recaudadorDetalleEntity.observaciones}</dd>\n            <dt>\n              <span id=\"reintentos\">\n                <Translate contentKey=\"sicoApp.recaudadorDetalle.reintentos\">Reintentos</Translate>\n              </span>\n            </dt>\n            <dd>{recaudadorDetalleEntity.reintentos}</dd>\n            <dt>\n              <Translate contentKey=\"sicoApp.recaudadorDetalle.recaudador\">Recaudador</Translate>\n            </dt>\n            <dd>{recaudadorDetalleEntity.recaudador ? recaudadorDetalleEntity.recaudador.id : ''}</dd>\n          </dl>\n          <Button tag={Link} to=\"/entity/recaudador-detalle\" replace color=\"info\">\n            <FontAwesomeIcon icon=\"arrow-left\" />{' '}\n            <span className=\"d-none d-md-inline\">\n              <Translate contentKey=\"entity.action.back\">Back</Translate>\n            </span>\n          </Button>&nbsp;\n          <Button tag={Link} to={`/entity/recaudador-detalle/${recaudadorDetalleEntity.id}/edit`} replace color=\"primary\">\n            <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\n            <span className=\"d-none d-md-inline\">\n              <Translate contentKey=\"entity.action.edit\">Edit</Translate>\n            </span>\n          </Button>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nconst mapStateToProps = ({ recaudadorDetalle }: IRootState) => ({\n  recaudadorDetalleEntity: recaudadorDetalle.entity\n});\n\nconst mapDispatchToProps = { getEntity };\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RecaudadorDetalleDetail);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, RouteComponentProps } from 'react-router-dom';\nimport { Button, Row, Col, Label } from 'reactstrap';\nimport { AvForm, AvGroup, AvInput, AvField } from 'availity-reactstrap-validation';\n// tslint:disable-next-line:no-unused-variable\nimport { Translate, translate, ICrudGetAction, ICrudGetAllAction, ICrudPutAction } from 'react-jhipster';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { IRootState } from 'app/shared/reducers';\n\nimport { IRecaudador } from 'app/shared/model/recaudador.model';\nimport { getEntities as getRecaudadors } from 'app/entities/recaudador/recaudador.reducer';\nimport { getEntity, updateEntity, createEntity, reset } from './recaudador-detalle.reducer';\nimport { IRecaudadorDetalle } from 'app/shared/model/recaudador-detalle.model';\n// tslint:disable-next-line:no-unused-variable\nimport { convertDateTimeFromServer, convertDateTimeToServer } from 'app/shared/util/date-utils';\nimport { mapIdList } from 'app/shared/util/entity-utils';\n\nexport interface IRecaudadorDetalleUpdateProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\n\nexport interface IRecaudadorDetalleUpdateState {\n  isNew: boolean;\n  recaudadorId: string;\n}\n\nexport class RecaudadorDetalleUpdate extends React.Component<IRecaudadorDetalleUpdateProps, IRecaudadorDetalleUpdateState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      recaudadorId: '0',\n      isNew: !this.props.match.params || !this.props.match.params.id\n    };\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    if (nextProps.updateSuccess !== this.props.updateSuccess && nextProps.updateSuccess) {\n      this.handleClose();\n    }\n  }\n\n  componentDidMount() {\n    if (this.state.isNew) {\n      this.props.reset();\n    } else {\n      this.props.getEntity(this.props.match.params.id);\n    }\n\n    this.props.getRecaudadors();\n  }\n\n  saveEntity = (event, errors, values) => {\n    values.fechaEjecucion = convertDateTimeToServer(values.fechaEjecucion);\n    values.fechaProgramada = convertDateTimeToServer(values.fechaProgramada);\n\n    if (errors.length === 0) {\n      const { recaudadorDetalleEntity } = this.props;\n      const entity = {\n        ...recaudadorDetalleEntity,\n        ...values\n      };\n\n      if (this.state.isNew) {\n        this.props.createEntity(entity);\n      } else {\n        this.props.updateEntity(entity);\n      }\n    }\n  };\n\n  handleClose = () => {\n    this.props.history.push('/entity/recaudador-detalle');\n  };\n\n  render() {\n    const { recaudadorDetalleEntity, recaudadors, loading, updating } = this.props;\n    const { isNew } = this.state;\n\n    return (\n      <div>\n        <Row className=\"justify-content-center\">\n          <Col md=\"8\">\n            <h2 id=\"sicoApp.recaudadorDetalle.home.createOrEditLabel\">\n              <Translate contentKey=\"sicoApp.recaudadorDetalle.home.createOrEditLabel\">Create or edit a RecaudadorDetalle</Translate>\n            </h2>\n          </Col>\n        </Row>\n        <Row className=\"justify-content-center\">\n          <Col md=\"8\">\n            {loading ? (\n              <p>Loading...</p>\n            ) : (\n              <AvForm model={isNew ? {} : recaudadorDetalleEntity} onSubmit={this.saveEntity}>\n                {!isNew ? (\n                  <AvGroup>\n                    <Label for=\"id\">\n                      <Translate contentKey=\"global.field.id\">ID</Translate>\n                    </Label>\n                    <AvInput id=\"recaudador-detalle-id\" type=\"text\" className=\"form-control\" name=\"id\" required readOnly />\n                  </AvGroup>\n                ) : null}\n                <AvGroup>\n                  <Label id=\"ejecutadaLabel\" for=\"ejecutada\">\n                    <Translate contentKey=\"sicoApp.recaudadorDetalle.ejecutada\">Ejecutada</Translate>\n                  </Label>\n                  <AvField id=\"recaudador-detalle-ejecutada\" type=\"string\" className=\"form-control\" name=\"ejecutada\" />\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"fechaEjecucionLabel\" for=\"fechaEjecucion\">\n                    <Translate contentKey=\"sicoApp.recaudadorDetalle.fechaEjecucion\">Fecha Ejecucion</Translate>\n                  </Label>\n                  <AvInput\n                    id=\"recaudador-detalle-fechaEjecucion\"\n                    type=\"datetime-local\"\n                    className=\"form-control\"\n                    name=\"fechaEjecucion\"\n                    placeholder={'YYYY-MM-DD HH:mm'}\n                    value={isNew ? null : convertDateTimeFromServer(this.props.recaudadorDetalleEntity.fechaEjecucion)}\n                  />\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"fechaProgramadaLabel\" for=\"fechaProgramada\">\n                    <Translate contentKey=\"sicoApp.recaudadorDetalle.fechaProgramada\">Fecha Programada</Translate>\n                  </Label>\n                  <AvInput\n                    id=\"recaudador-detalle-fechaProgramada\"\n                    type=\"datetime-local\"\n                    className=\"form-control\"\n                    name=\"fechaProgramada\"\n                    placeholder={'YYYY-MM-DD HH:mm'}\n                    value={isNew ? null : convertDateTimeFromServer(this.props.recaudadorDetalleEntity.fechaProgramada)}\n                  />\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"nroCuotaLabel\" for=\"nroCuota\">\n                    <Translate contentKey=\"sicoApp.recaudadorDetalle.nroCuota\">Nro Cuota</Translate>\n                  </Label>\n                  <AvField id=\"recaudador-detalle-nroCuota\" type=\"string\" className=\"form-control\" name=\"nroCuota\" />\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"observacionesLabel\" for=\"observaciones\">\n                    <Translate contentKey=\"sicoApp.recaudadorDetalle.observaciones\">Observaciones</Translate>\n                  </Label>\n                  <AvField id=\"recaudador-detalle-observaciones\" type=\"text\" name=\"observaciones\" />\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"reintentosLabel\" for=\"reintentos\">\n                    <Translate contentKey=\"sicoApp.recaudadorDetalle.reintentos\">Reintentos</Translate>\n                  </Label>\n                  <AvField id=\"recaudador-detalle-reintentos\" type=\"string\" className=\"form-control\" name=\"reintentos\" />\n                </AvGroup>\n                <AvGroup>\n                  <Label for=\"recaudador.id\">\n                    <Translate contentKey=\"sicoApp.recaudadorDetalle.recaudador\">Recaudador</Translate>\n                  </Label>\n                  <AvInput id=\"recaudador-detalle-recaudador\" type=\"select\" className=\"form-control\" name=\"recaudador.id\">\n                    <option value=\"\" key=\"0\" />\n                    {recaudadors\n                      ? recaudadors.map(otherEntity => (\n                          <option value={otherEntity.id} key={otherEntity.id}>\n                            {otherEntity.id}\n                          </option>\n                        ))\n                      : null}\n                  </AvInput>\n                </AvGroup>\n                <Button tag={Link} id=\"cancel-save\" to=\"/entity/recaudador-detalle\" replace color=\"info\">\n                  <FontAwesomeIcon icon=\"arrow-left\" />&nbsp;\n                  <span className=\"d-none d-md-inline\">\n                    <Translate contentKey=\"entity.action.back\">Back</Translate>\n                  </span>\n                </Button>\n                &nbsp;\n                <Button color=\"primary\" id=\"save-entity\" type=\"submit\" disabled={updating}>\n                  <FontAwesomeIcon icon=\"save\" />&nbsp;\n                  <Translate contentKey=\"entity.action.save\">Save</Translate>\n                </Button>\n              </AvForm>\n            )}\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (storeState: IRootState) => ({\n  recaudadors: storeState.recaudador.entities,\n  recaudadorDetalleEntity: storeState.recaudadorDetalle.entity,\n  loading: storeState.recaudadorDetalle.loading,\n  updating: storeState.recaudadorDetalle.updating,\n  updateSuccess: storeState.recaudadorDetalle.updateSuccess\n});\n\nconst mapDispatchToProps = {\n  getRecaudadors,\n  getEntity,\n  updateEntity,\n  createEntity,\n  reset\n};\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RecaudadorDetalleUpdate);\n","import axios from 'axios';\nimport { ICrudGetAction, ICrudGetAllAction, ICrudPutAction, ICrudDeleteAction } from 'react-jhipster';\n\nimport { cleanEntity } from 'app/shared/util/entity-utils';\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\n\nimport { IRecaudadorDetalle, defaultValue } from 'app/shared/model/recaudador-detalle.model';\n\nexport const ACTION_TYPES = {\n  FETCH_RECAUDADORDETALLE_LIST: 'recaudadorDetalle/FETCH_RECAUDADORDETALLE_LIST',\n  FETCH_RECAUDADORDETALLE: 'recaudadorDetalle/FETCH_RECAUDADORDETALLE',\n  CREATE_RECAUDADORDETALLE: 'recaudadorDetalle/CREATE_RECAUDADORDETALLE',\n  UPDATE_RECAUDADORDETALLE: 'recaudadorDetalle/UPDATE_RECAUDADORDETALLE',\n  DELETE_RECAUDADORDETALLE: 'recaudadorDetalle/DELETE_RECAUDADORDETALLE',\n  RESET: 'recaudadorDetalle/RESET'\n};\n\nconst initialState = {\n  loading: false,\n  errorMessage: null,\n  entities: [] as ReadonlyArray<IRecaudadorDetalle>,\n  entity: defaultValue,\n  updating: false,\n  updateSuccess: false\n};\n\nexport type RecaudadorDetalleState = Readonly<typeof initialState>;\n\n// Reducer\n\nexport default (state: RecaudadorDetalleState = initialState, action): RecaudadorDetalleState => {\n  switch (action.type) {\n    case REQUEST(ACTION_TYPES.FETCH_RECAUDADORDETALLE_LIST):\n    case REQUEST(ACTION_TYPES.FETCH_RECAUDADORDETALLE):\n      return {\n        ...state,\n        errorMessage: null,\n        updateSuccess: false,\n        loading: true\n      };\n    case REQUEST(ACTION_TYPES.CREATE_RECAUDADORDETALLE):\n    case REQUEST(ACTION_TYPES.UPDATE_RECAUDADORDETALLE):\n    case REQUEST(ACTION_TYPES.DELETE_RECAUDADORDETALLE):\n      return {\n        ...state,\n        errorMessage: null,\n        updateSuccess: false,\n        updating: true\n      };\n    case FAILURE(ACTION_TYPES.FETCH_RECAUDADORDETALLE_LIST):\n    case FAILURE(ACTION_TYPES.FETCH_RECAUDADORDETALLE):\n    case FAILURE(ACTION_TYPES.CREATE_RECAUDADORDETALLE):\n    case FAILURE(ACTION_TYPES.UPDATE_RECAUDADORDETALLE):\n    case FAILURE(ACTION_TYPES.DELETE_RECAUDADORDETALLE):\n      return {\n        ...state,\n        loading: false,\n        updating: false,\n        updateSuccess: false,\n        errorMessage: action.payload\n      };\n    case SUCCESS(ACTION_TYPES.FETCH_RECAUDADORDETALLE_LIST):\n      return {\n        ...state,\n        loading: false,\n        entities: action.payload.data\n      };\n    case SUCCESS(ACTION_TYPES.FETCH_RECAUDADORDETALLE):\n      return {\n        ...state,\n        loading: false,\n        entity: action.payload.data\n      };\n    case SUCCESS(ACTION_TYPES.CREATE_RECAUDADORDETALLE):\n    case SUCCESS(ACTION_TYPES.UPDATE_RECAUDADORDETALLE):\n      return {\n        ...state,\n        updating: false,\n        updateSuccess: true,\n        entity: action.payload.data\n      };\n    case SUCCESS(ACTION_TYPES.DELETE_RECAUDADORDETALLE):\n      return {\n        ...state,\n        updating: false,\n        updateSuccess: true,\n        entity: {}\n      };\n    case ACTION_TYPES.RESET:\n      return {\n        ...initialState\n      };\n    default:\n      return state;\n  }\n};\n\nconst apiUrl = 'api/recaudador-detalles';\n\n// Actions\n\nexport const getEntities: ICrudGetAllAction<IRecaudadorDetalle> = (page, size, sort) => ({\n  type: ACTION_TYPES.FETCH_RECAUDADORDETALLE_LIST,\n  payload: axios.get<IRecaudadorDetalle>(`${apiUrl}?cacheBuster=${new Date().getTime()}`)\n});\n\nexport const getEntity: ICrudGetAction<IRecaudadorDetalle> = id => {\n  const requestUrl = `${apiUrl}/${id}`;\n  return {\n    type: ACTION_TYPES.FETCH_RECAUDADORDETALLE,\n    payload: axios.get<IRecaudadorDetalle>(requestUrl)\n  };\n};\n\nexport const createEntity: ICrudPutAction<IRecaudadorDetalle> = entity => async dispatch => {\n  const result = await dispatch({\n    type: ACTION_TYPES.CREATE_RECAUDADORDETALLE,\n    payload: axios.post(apiUrl, cleanEntity(entity))\n  });\n  dispatch(getEntities());\n  return result;\n};\n\nexport const updateEntity: ICrudPutAction<IRecaudadorDetalle> = entity => async dispatch => {\n  const result = await dispatch({\n    type: ACTION_TYPES.UPDATE_RECAUDADORDETALLE,\n    payload: axios.put(apiUrl, cleanEntity(entity))\n  });\n  dispatch(getEntities());\n  return result;\n};\n\nexport const deleteEntity: ICrudDeleteAction<IRecaudadorDetalle> = id => async dispatch => {\n  const requestUrl = `${apiUrl}/${id}`;\n  const result = await dispatch({\n    type: ACTION_TYPES.DELETE_RECAUDADORDETALLE,\n    payload: axios.delete(requestUrl)\n  });\n  dispatch(getEntities());\n  return result;\n};\n\nexport const reset = () => ({\n  type: ACTION_TYPES.RESET\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, RouteComponentProps } from 'react-router-dom';\nimport { Button, Col, Row, Table } from 'reactstrap';\n// tslint:disable-next-line:no-unused-variable\nimport { Translate, ICrudGetAllAction, TextFormat } from 'react-jhipster';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { IRootState } from 'app/shared/reducers';\nimport { getEntities } from './recaudador-detalle.reducer';\nimport { IRecaudadorDetalle } from 'app/shared/model/recaudador-detalle.model';\n// tslint:disable-next-line:no-unused-variable\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\n\nexport interface IRecaudadorDetalleProps extends StateProps, DispatchProps, RouteComponentProps<{ url: string }> {}\n\nexport class RecaudadorDetalle extends React.Component<IRecaudadorDetalleProps> {\n  componentDidMount() {\n    this.props.getEntities();\n  }\n\n  render() {\n    const { recaudadorDetalleList, match } = this.props;\n    return (\n      <div>\n        <h2 id=\"recaudador-detalle-heading\">\n          <Translate contentKey=\"sicoApp.recaudadorDetalle.home.title\">Recaudador Detalles</Translate>\n          <Link to={`${match.url}/new`} className=\"btn btn-primary float-right jh-create-entity\" id=\"jh-create-entity\">\n            <FontAwesomeIcon icon=\"plus\" />&nbsp;\n            <Translate contentKey=\"sicoApp.recaudadorDetalle.home.createLabel\">Create new Recaudador Detalle</Translate>\n          </Link>\n        </h2>\n        <div className=\"table-responsive\">\n          <Table responsive>\n            <thead>\n              <tr>\n                <th>\n                  <Translate contentKey=\"global.field.id\">ID</Translate>\n                </th>\n                <th>\n                  <Translate contentKey=\"sicoApp.recaudadorDetalle.ejecutada\">Ejecutada</Translate>\n                </th>\n                <th>\n                  <Translate contentKey=\"sicoApp.recaudadorDetalle.fechaEjecucion\">Fecha Ejecucion</Translate>\n                </th>\n                <th>\n                  <Translate contentKey=\"sicoApp.recaudadorDetalle.fechaProgramada\">Fecha Programada</Translate>\n                </th>\n                <th>\n                  <Translate contentKey=\"sicoApp.recaudadorDetalle.nroCuota\">Nro Cuota</Translate>\n                </th>\n                <th>\n                  <Translate contentKey=\"sicoApp.recaudadorDetalle.observaciones\">Observaciones</Translate>\n                </th>\n                <th>\n                  <Translate contentKey=\"sicoApp.recaudadorDetalle.reintentos\">Reintentos</Translate>\n                </th>\n                <th>\n                  <Translate contentKey=\"sicoApp.recaudadorDetalle.recaudador\">Recaudador</Translate>\n                </th>\n                <th />\n              </tr>\n            </thead>\n            <tbody>\n              {recaudadorDetalleList.map((recaudadorDetalle, i) => (\n                <tr key={`entity-${i}`}>\n                  <td>\n                    <Button tag={Link} to={`${match.url}/${recaudadorDetalle.id}`} color=\"link\" size=\"sm\">\n                      {recaudadorDetalle.id}\n                    </Button>\n                  </td>\n                  <td>{recaudadorDetalle.ejecutada}</td>\n                  <td>\n                    <TextFormat type=\"date\" value={recaudadorDetalle.fechaEjecucion} format={APP_DATE_FORMAT} />\n                  </td>\n                  <td>\n                    <TextFormat type=\"date\" value={recaudadorDetalle.fechaProgramada} format={APP_DATE_FORMAT} />\n                  </td>\n                  <td>{recaudadorDetalle.nroCuota}</td>\n                  <td>{recaudadorDetalle.observaciones}</td>\n                  <td>{recaudadorDetalle.reintentos}</td>\n                  <td>\n                    {recaudadorDetalle.recaudador ? (\n                      <Link to={`recaudador/${recaudadorDetalle.recaudador.id}`}>{recaudadorDetalle.recaudador.id}</Link>\n                    ) : (\n                      ''\n                    )}\n                  </td>\n                  <td className=\"text-right\">\n                    <div className=\"btn-group flex-btn-group-container\">\n                      <Button tag={Link} to={`${match.url}/${recaudadorDetalle.id}`} color=\"info\" size=\"sm\">\n                        <FontAwesomeIcon icon=\"eye\" />{' '}\n                        <span className=\"d-none d-md-inline\">\n                          <Translate contentKey=\"entity.action.view\">View</Translate>\n                        </span>\n                      </Button>\n                      <Button tag={Link} to={`${match.url}/${recaudadorDetalle.id}/edit`} color=\"primary\" size=\"sm\">\n                        <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\n                        <span className=\"d-none d-md-inline\">\n                          <Translate contentKey=\"entity.action.edit\">Edit</Translate>\n                        </span>\n                      </Button>\n                      <Button tag={Link} to={`${match.url}/${recaudadorDetalle.id}/delete`} color=\"danger\" size=\"sm\">\n                        <FontAwesomeIcon icon=\"trash\" />{' '}\n                        <span className=\"d-none d-md-inline\">\n                          <Translate contentKey=\"entity.action.delete\">Delete</Translate>\n                        </span>\n                      </Button>\n                    </div>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ recaudadorDetalle }: IRootState) => ({\n  recaudadorDetalleList: recaudadorDetalle.entities\n});\n\nconst mapDispatchToProps = {\n  getEntities\n};\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RecaudadorDetalle);\n","import React from 'react';\nimport { Switch } from 'react-router-dom';\n\nimport ErrorBoundaryRoute from 'app/shared/error/error-boundary-route';\n\nimport Recaudador from './recaudador';\nimport RecaudadorDetail from './recaudador-detail';\nimport RecaudadorUpdate from './recaudador-update';\nimport RecaudadorDeleteDialog from './recaudador-delete-dialog';\n\nconst Routes = ({ match }) => (\n  <>\n    <Switch>\n      <ErrorBoundaryRoute exact path={`${match.url}/new`} component={RecaudadorUpdate} />\n      <ErrorBoundaryRoute exact path={`${match.url}/:id/edit`} component={RecaudadorUpdate} />\n      <ErrorBoundaryRoute exact path={`${match.url}/:id`} component={RecaudadorDetail} />\n      <ErrorBoundaryRoute path={match.url} component={Recaudador} />\n    </Switch>\n    <ErrorBoundaryRoute path={`${match.url}/:id/delete`} component={RecaudadorDeleteDialog} />\n  </>\n);\n\nexport default Routes;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\nimport { Translate, ICrudGetAction, ICrudDeleteAction } from 'react-jhipster';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { IRecaudador } from 'app/shared/model/recaudador.model';\nimport { IRootState } from 'app/shared/reducers';\nimport { getEntity, deleteEntity } from './recaudador.reducer';\n\nexport interface IRecaudadorDeleteDialogProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\n\nexport class RecaudadorDeleteDialog extends React.Component<IRecaudadorDeleteDialogProps> {\n  componentDidMount() {\n    this.props.getEntity(this.props.match.params.id);\n  }\n\n  confirmDelete = event => {\n    this.props.deleteEntity(this.props.recaudadorEntity.id);\n    this.handleClose(event);\n  };\n\n  handleClose = event => {\n    event.stopPropagation();\n    this.props.history.goBack();\n  };\n\n  render() {\n    const { recaudadorEntity } = this.props;\n    return (\n      <Modal isOpen toggle={this.handleClose}>\n        <ModalHeader toggle={this.handleClose}>\n          <Translate contentKey=\"entity.delete.title\">Confirm delete operation</Translate>\n        </ModalHeader>\n        <ModalBody id=\"sicoApp.recaudador.delete.question\">\n          <Translate contentKey=\"sicoApp.recaudador.delete.question\" interpolate={{ id: recaudadorEntity.id }}>\n            Are you sure you want to delete this Recaudador?\n          </Translate>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={this.handleClose}>\n            <FontAwesomeIcon icon=\"ban\" />&nbsp;\n            <Translate contentKey=\"entity.action.cancel\">Cancel</Translate>\n          </Button>\n          <Button id=\"jhi-confirm-delete-recaudador\" color=\"danger\" onClick={this.confirmDelete}>\n            <FontAwesomeIcon icon=\"trash\" />&nbsp;\n            <Translate contentKey=\"entity.action.delete\">Delete</Translate>\n          </Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nconst mapStateToProps = ({ recaudador }: IRootState) => ({\n  recaudadorEntity: recaudador.entity\n});\n\nconst mapDispatchToProps = { getEntity, deleteEntity };\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RecaudadorDeleteDialog);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, RouteComponentProps } from 'react-router-dom';\nimport { Button, Row, Col } from 'reactstrap';\n// tslint:disable-next-line:no-unused-variable\nimport { Translate, ICrudGetAction, TextFormat } from 'react-jhipster';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { IRootState } from 'app/shared/reducers';\nimport { getEntity } from './recaudador.reducer';\nimport { IRecaudador } from 'app/shared/model/recaudador.model';\n// tslint:disable-next-line:no-unused-variable\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\n\nexport interface IRecaudadorDetailProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\n\nexport class RecaudadorDetail extends React.Component<IRecaudadorDetailProps> {\n  componentDidMount() {\n    this.props.getEntity(this.props.match.params.id);\n  }\n\n  render() {\n    const { recaudadorEntity } = this.props;\n    return (\n      <Row>\n        <Col md=\"8\">\n          <h2>\n            <Translate contentKey=\"sicoApp.recaudador.detail.title\">Recaudador</Translate> [<b>{recaudadorEntity.id}</b>]\n          </h2>\n          <dl className=\"jh-entity-details\">\n            <dt>\n              <span id=\"activo\">\n                <Translate contentKey=\"sicoApp.recaudador.activo\">Activo</Translate>\n              </span>\n            </dt>\n            <dd>{recaudadorEntity.activo ? 'true' : 'false'}</dd>\n            <dt>\n              <span id=\"cantCuotas\">\n                <Translate contentKey=\"sicoApp.recaudador.cantCuotas\">Cant Cuotas</Translate>\n              </span>\n            </dt>\n            <dd>{recaudadorEntity.cantCuotas}</dd>\n            <dt>\n              <span id=\"cantidadRenegociado\">\n                <Translate contentKey=\"sicoApp.recaudador.cantidadRenegociado\">Cantidad Renegociado</Translate>\n              </span>\n            </dt>\n            <dd>{recaudadorEntity.cantidadRenegociado}</dd>\n            <dt>\n              <span id=\"capitalPrestamo\">\n                <Translate contentKey=\"sicoApp.recaudador.capitalPrestamo\">Capital Prestamo</Translate>\n              </span>\n            </dt>\n            <dd>{recaudadorEntity.capitalPrestamo}</dd>\n            <dt>\n              <span id=\"cuotaCobrada\">\n                <Translate contentKey=\"sicoApp.recaudador.cuotaCobrada\">Cuota Cobrada</Translate>\n              </span>\n            </dt>\n            <dd>{recaudadorEntity.cuotaCobrada}</dd>\n            <dt>\n              <span id=\"cuotaPura\">\n                <Translate contentKey=\"sicoApp.recaudador.cuotaPura\">Cuota Pura</Translate>\n              </span>\n            </dt>\n            <dd>{recaudadorEntity.cuotaPura}</dd>\n            <dt>\n              <span id=\"cuotaRecuperoCapital\">\n                <Translate contentKey=\"sicoApp.recaudador.cuotaRecuperoCapital\">Cuota Recupero Capital</Translate>\n              </span>\n            </dt>\n            <dd>{recaudadorEntity.cuotaRecuperoCapital}</dd>\n            <dt>\n              <span id=\"diaHoraEjecucion\">\n                <Translate contentKey=\"sicoApp.recaudador.diaHoraEjecucion\">Dia Hora Ejecucion</Translate>\n              </span>\n            </dt>\n            <dd>{recaudadorEntity.diaHoraEjecucion}</dd>\n            <dt>\n              <span id=\"esPersonal\">\n                <Translate contentKey=\"sicoApp.recaudador.esPersonal\">Es Personal</Translate>\n              </span>\n            </dt>\n            <dd>{recaudadorEntity.esPersonal ? 'true' : 'false'}</dd>\n            <dt>\n              <span id=\"excluirFindeSemanas\">\n                <Translate contentKey=\"sicoApp.recaudador.excluirFindeSemanas\">Excluir Finde Semanas</Translate>\n              </span>\n            </dt>\n            <dd>{recaudadorEntity.excluirFindeSemanas ? 'true' : 'false'}</dd>\n            <dt>\n              <span id=\"fechaCreacion\">\n                <Translate contentKey=\"sicoApp.recaudador.fechaCreacion\">Fecha Creacion</Translate>\n              </span>\n            </dt>\n            <dd>\n              <TextFormat value={recaudadorEntity.fechaCreacion} type=\"date\" format={APP_DATE_FORMAT} />\n            </dd>\n            <dt>\n              <span id=\"fechaInicio\">\n                <Translate contentKey=\"sicoApp.recaudador.fechaInicio\">Fecha Inicio</Translate>\n              </span>\n            </dt>\n            <dd>\n              <TextFormat value={recaudadorEntity.fechaInicio} type=\"date\" format={APP_DATE_FORMAT} />\n            </dd>\n            <dt>\n              <span id=\"fechaVencimiento\">\n                <Translate contentKey=\"sicoApp.recaudador.fechaVencimiento\">Fecha Vencimiento</Translate>\n              </span>\n            </dt>\n            <dd>\n              <TextFormat value={recaudadorEntity.fechaVencimiento} type=\"date\" format={APP_DATE_FORMAT} />\n            </dd>\n            <dt>\n              <span id=\"incobrable\">\n                <Translate contentKey=\"sicoApp.recaudador.incobrable\">Incobrable</Translate>\n              </span>\n            </dt>\n            <dd>{recaudadorEntity.incobrable ? 'true' : 'false'}</dd>\n            <dt>\n              <span id=\"interesesCuota\">\n                <Translate contentKey=\"sicoApp.recaudador.interesesCuota\">Intereses Cuota</Translate>\n              </span>\n            </dt>\n            <dd>{recaudadorEntity.interesesCuota}</dd>\n            <dt>\n              <span id=\"interesesPrestamos\">\n                <Translate contentKey=\"sicoApp.recaudador.interesesPrestamos\">Intereses Prestamos</Translate>\n              </span>\n            </dt>\n            <dd>{recaudadorEntity.interesesPrestamos}</dd>\n            <dt>\n              <span id=\"monto\">\n                <Translate contentKey=\"sicoApp.recaudador.monto\">Monto</Translate>\n              </span>\n            </dt>\n            <dd>{recaudadorEntity.monto}</dd>\n            <dt>\n              <span id=\"observaciones\">\n                <Translate contentKey=\"sicoApp.recaudador.observaciones\">Observaciones</Translate>\n              </span>\n            </dt>\n            <dd>{recaudadorEntity.observaciones}</dd>\n            <dt>\n              <span id=\"pagoManual\">\n                <Translate contentKey=\"sicoApp.recaudador.pagoManual\">Pago Manual</Translate>\n              </span>\n            </dt>\n            <dd>{recaudadorEntity.pagoManual}</dd>\n            <dt>\n              <span id=\"periodicidad\">\n                <Translate contentKey=\"sicoApp.recaudador.periodicidad\">Periodicidad</Translate>\n              </span>\n            </dt>\n            <dd>{recaudadorEntity.periodicidad}</dd>\n            <dt>\n              <span id=\"porcParticipacion\">\n                <Translate contentKey=\"sicoApp.recaudador.porcParticipacion\">Porc Participacion</Translate>\n              </span>\n            </dt>\n            <dd>{recaudadorEntity.porcParticipacion}</dd>\n            <dt>\n              <span id=\"tipoCobro\">\n                <Translate contentKey=\"sicoApp.recaudador.tipoCobro\">Tipo Cobro</Translate>\n              </span>\n            </dt>\n            <dd>{recaudadorEntity.tipoCobro}</dd>\n            <dt>\n              <span id=\"idCliente\">\n                <Translate contentKey=\"sicoApp.recaudador.idCliente\">Id Cliente</Translate>\n              </span>\n            </dt>\n            <dd>{recaudadorEntity.idCliente}</dd>\n          </dl>\n          <Button tag={Link} to=\"/entity/recaudador\" replace color=\"info\">\n            <FontAwesomeIcon icon=\"arrow-left\" />{' '}\n            <span className=\"d-none d-md-inline\">\n              <Translate contentKey=\"entity.action.back\">Back</Translate>\n            </span>\n          </Button>&nbsp;\n          <Button tag={Link} to={`/entity/recaudador/${recaudadorEntity.id}/edit`} replace color=\"primary\">\n            <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\n            <span className=\"d-none d-md-inline\">\n              <Translate contentKey=\"entity.action.edit\">Edit</Translate>\n            </span>\n          </Button>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nconst mapStateToProps = ({ recaudador }: IRootState) => ({\n  recaudadorEntity: recaudador.entity\n});\n\nconst mapDispatchToProps = { getEntity };\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RecaudadorDetail);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, RouteComponentProps } from 'react-router-dom';\nimport { Button, Row, Col, Label } from 'reactstrap';\nimport { AvForm, AvGroup, AvInput, AvField } from 'availity-reactstrap-validation';\n// tslint:disable-next-line:no-unused-variable\nimport { Translate, translate, ICrudGetAction, ICrudGetAllAction, ICrudPutAction } from 'react-jhipster';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { IRootState } from 'app/shared/reducers';\n\nimport { getEntity, updateEntity, createEntity, reset } from './recaudador.reducer';\nimport { IRecaudador } from 'app/shared/model/recaudador.model';\n// tslint:disable-next-line:no-unused-variable\nimport { convertDateTimeFromServer, convertDateTimeToServer } from 'app/shared/util/date-utils';\nimport { mapIdList } from 'app/shared/util/entity-utils';\n\nexport interface IRecaudadorUpdateProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\n\nexport interface IRecaudadorUpdateState {\n  isNew: boolean;\n}\n\nexport class RecaudadorUpdate extends React.Component<IRecaudadorUpdateProps, IRecaudadorUpdateState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isNew: !this.props.match.params || !this.props.match.params.id\n    };\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    if (nextProps.updateSuccess !== this.props.updateSuccess && nextProps.updateSuccess) {\n      this.handleClose();\n    }\n  }\n\n  componentDidMount() {\n    if (this.state.isNew) {\n      this.props.reset();\n    } else {\n      this.props.getEntity(this.props.match.params.id);\n    }\n  }\n\n  saveEntity = (event, errors, values) => {\n    values.fechaCreacion = convertDateTimeToServer(values.fechaCreacion);\n    values.fechaInicio = convertDateTimeToServer(values.fechaInicio);\n    values.fechaVencimiento = convertDateTimeToServer(values.fechaVencimiento);\n\n    if (errors.length === 0) {\n      const { recaudadorEntity } = this.props;\n      const entity = {\n        ...recaudadorEntity,\n        ...values\n      };\n\n      if (this.state.isNew) {\n        this.props.createEntity(entity);\n      } else {\n        this.props.updateEntity(entity);\n      }\n    }\n  };\n\n  handleClose = () => {\n    this.props.history.push('/entity/recaudador');\n  };\n\n  render() {\n    const { recaudadorEntity, loading, updating } = this.props;\n    const { isNew } = this.state;\n\n    return (\n      <div>\n        <Row className=\"justify-content-center\">\n          <Col md=\"8\">\n            <h2 id=\"sicoApp.recaudador.home.createOrEditLabel\">\n              <Translate contentKey=\"sicoApp.recaudador.home.createOrEditLabel\">Create or edit a Recaudador</Translate>\n            </h2>\n          </Col>\n        </Row>\n        <Row className=\"justify-content-center\">\n          <Col md=\"8\">\n            {loading ? (\n              <p>Loading...</p>\n            ) : (\n              <AvForm model={isNew ? {} : recaudadorEntity} onSubmit={this.saveEntity}>\n                {!isNew ? (\n                  <AvGroup>\n                    <Label for=\"id\">\n                      <Translate contentKey=\"global.field.id\">ID</Translate>\n                    </Label>\n                    <AvInput id=\"recaudador-id\" type=\"text\" className=\"form-control\" name=\"id\" required readOnly />\n                  </AvGroup>\n                ) : null}\n                <AvGroup>\n                  <Label id=\"activoLabel\" check>\n                    <AvInput id=\"recaudador-activo\" type=\"checkbox\" className=\"form-control\" name=\"activo\" />\n                    <Translate contentKey=\"sicoApp.recaudador.activo\">Activo</Translate>\n                  </Label>\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"cantCuotasLabel\" for=\"cantCuotas\">\n                    <Translate contentKey=\"sicoApp.recaudador.cantCuotas\">Cant Cuotas</Translate>\n                  </Label>\n                  <AvField id=\"recaudador-cantCuotas\" type=\"string\" className=\"form-control\" name=\"cantCuotas\" />\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"cantidadRenegociadoLabel\" for=\"cantidadRenegociado\">\n                    <Translate contentKey=\"sicoApp.recaudador.cantidadRenegociado\">Cantidad Renegociado</Translate>\n                  </Label>\n                  <AvField id=\"recaudador-cantidadRenegociado\" type=\"string\" className=\"form-control\" name=\"cantidadRenegociado\" />\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"capitalPrestamoLabel\" for=\"capitalPrestamo\">\n                    <Translate contentKey=\"sicoApp.recaudador.capitalPrestamo\">Capital Prestamo</Translate>\n                  </Label>\n                  <AvField id=\"recaudador-capitalPrestamo\" type=\"string\" className=\"form-control\" name=\"capitalPrestamo\" />\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"cuotaCobradaLabel\" for=\"cuotaCobrada\">\n                    <Translate contentKey=\"sicoApp.recaudador.cuotaCobrada\">Cuota Cobrada</Translate>\n                  </Label>\n                  <AvField id=\"recaudador-cuotaCobrada\" type=\"string\" className=\"form-control\" name=\"cuotaCobrada\" />\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"cuotaPuraLabel\" for=\"cuotaPura\">\n                    <Translate contentKey=\"sicoApp.recaudador.cuotaPura\">Cuota Pura</Translate>\n                  </Label>\n                  <AvField id=\"recaudador-cuotaPura\" type=\"string\" className=\"form-control\" name=\"cuotaPura\" />\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"cuotaRecuperoCapitalLabel\" for=\"cuotaRecuperoCapital\">\n                    <Translate contentKey=\"sicoApp.recaudador.cuotaRecuperoCapital\">Cuota Recupero Capital</Translate>\n                  </Label>\n                  <AvField id=\"recaudador-cuotaRecuperoCapital\" type=\"string\" className=\"form-control\" name=\"cuotaRecuperoCapital\" />\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"diaHoraEjecucionLabel\" for=\"diaHoraEjecucion\">\n                    <Translate contentKey=\"sicoApp.recaudador.diaHoraEjecucion\">Dia Hora Ejecucion</Translate>\n                  </Label>\n                  <AvField id=\"recaudador-diaHoraEjecucion\" type=\"string\" className=\"form-control\" name=\"diaHoraEjecucion\" />\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"esPersonalLabel\" check>\n                    <AvInput id=\"recaudador-esPersonal\" type=\"checkbox\" className=\"form-control\" name=\"esPersonal\" />\n                    <Translate contentKey=\"sicoApp.recaudador.esPersonal\">Es Personal</Translate>\n                  </Label>\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"excluirFindeSemanasLabel\" check>\n                    <AvInput id=\"recaudador-excluirFindeSemanas\" type=\"checkbox\" className=\"form-control\" name=\"excluirFindeSemanas\" />\n                    <Translate contentKey=\"sicoApp.recaudador.excluirFindeSemanas\">Excluir Finde Semanas</Translate>\n                  </Label>\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"fechaCreacionLabel\" for=\"fechaCreacion\">\n                    <Translate contentKey=\"sicoApp.recaudador.fechaCreacion\">Fecha Creacion</Translate>\n                  </Label>\n                  <AvInput\n                    id=\"recaudador-fechaCreacion\"\n                    type=\"datetime-local\"\n                    className=\"form-control\"\n                    name=\"fechaCreacion\"\n                    placeholder={'YYYY-MM-DD HH:mm'}\n                    value={isNew ? null : convertDateTimeFromServer(this.props.recaudadorEntity.fechaCreacion)}\n                  />\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"fechaInicioLabel\" for=\"fechaInicio\">\n                    <Translate contentKey=\"sicoApp.recaudador.fechaInicio\">Fecha Inicio</Translate>\n                  </Label>\n                  <AvInput\n                    id=\"recaudador-fechaInicio\"\n                    type=\"datetime-local\"\n                    className=\"form-control\"\n                    name=\"fechaInicio\"\n                    placeholder={'YYYY-MM-DD HH:mm'}\n                    value={isNew ? null : convertDateTimeFromServer(this.props.recaudadorEntity.fechaInicio)}\n                  />\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"fechaVencimientoLabel\" for=\"fechaVencimiento\">\n                    <Translate contentKey=\"sicoApp.recaudador.fechaVencimiento\">Fecha Vencimiento</Translate>\n                  </Label>\n                  <AvInput\n                    id=\"recaudador-fechaVencimiento\"\n                    type=\"datetime-local\"\n                    className=\"form-control\"\n                    name=\"fechaVencimiento\"\n                    placeholder={'YYYY-MM-DD HH:mm'}\n                    value={isNew ? null : convertDateTimeFromServer(this.props.recaudadorEntity.fechaVencimiento)}\n                  />\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"incobrableLabel\" check>\n                    <AvInput id=\"recaudador-incobrable\" type=\"checkbox\" className=\"form-control\" name=\"incobrable\" />\n                    <Translate contentKey=\"sicoApp.recaudador.incobrable\">Incobrable</Translate>\n                  </Label>\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"interesesCuotaLabel\" for=\"interesesCuota\">\n                    <Translate contentKey=\"sicoApp.recaudador.interesesCuota\">Intereses Cuota</Translate>\n                  </Label>\n                  <AvField id=\"recaudador-interesesCuota\" type=\"string\" className=\"form-control\" name=\"interesesCuota\" />\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"interesesPrestamosLabel\" for=\"interesesPrestamos\">\n                    <Translate contentKey=\"sicoApp.recaudador.interesesPrestamos\">Intereses Prestamos</Translate>\n                  </Label>\n                  <AvField id=\"recaudador-interesesPrestamos\" type=\"string\" className=\"form-control\" name=\"interesesPrestamos\" />\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"montoLabel\" for=\"monto\">\n                    <Translate contentKey=\"sicoApp.recaudador.monto\">Monto</Translate>\n                  </Label>\n                  <AvField id=\"recaudador-monto\" type=\"string\" className=\"form-control\" name=\"monto\" />\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"observacionesLabel\" for=\"observaciones\">\n                    <Translate contentKey=\"sicoApp.recaudador.observaciones\">Observaciones</Translate>\n                  </Label>\n                  <AvField id=\"recaudador-observaciones\" type=\"text\" name=\"observaciones\" />\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"pagoManualLabel\" for=\"pagoManual\">\n                    <Translate contentKey=\"sicoApp.recaudador.pagoManual\">Pago Manual</Translate>\n                  </Label>\n                  <AvField id=\"recaudador-pagoManual\" type=\"string\" className=\"form-control\" name=\"pagoManual\" />\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"periodicidadLabel\">\n                    <Translate contentKey=\"sicoApp.recaudador.periodicidad\">Periodicidad</Translate>\n                  </Label>\n                  <AvInput\n                    id=\"recaudador-periodicidad\"\n                    type=\"select\"\n                    className=\"form-control\"\n                    name=\"periodicidad\"\n                    value={(!isNew && recaudadorEntity.periodicidad) || 'DIARIO'}\n                  >\n                    <option value=\"DIARIO\">\n                      <Translate contentKey=\"sicoApp.Periodicidad.DIARIO\" />\n                    </option>\n                    <option value=\"SEMANAL\">\n                      <Translate contentKey=\"sicoApp.Periodicidad.SEMANAL\" />\n                    </option>\n                    <option value=\"MENSUAL\">\n                      <Translate contentKey=\"sicoApp.Periodicidad.MENSUAL\" />\n                    </option>\n                    <option value=\"BIMENSUAL\">\n                      <Translate contentKey=\"sicoApp.Periodicidad.BIMENSUAL\" />\n                    </option>\n                    <option value=\"SEMESTRAL\">\n                      <Translate contentKey=\"sicoApp.Periodicidad.SEMESTRAL\" />\n                    </option>\n                  </AvInput>\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"porcParticipacionLabel\" for=\"porcParticipacion\">\n                    <Translate contentKey=\"sicoApp.recaudador.porcParticipacion\">Porc Participacion</Translate>\n                  </Label>\n                  <AvField id=\"recaudador-porcParticipacion\" type=\"string\" className=\"form-control\" name=\"porcParticipacion\" />\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"tipoCobroLabel\">\n                    <Translate contentKey=\"sicoApp.recaudador.tipoCobro\">Tipo Cobro</Translate>\n                  </Label>\n                  <AvInput\n                    id=\"recaudador-tipoCobro\"\n                    type=\"select\"\n                    className=\"form-control\"\n                    name=\"tipoCobro\"\n                    value={(!isNew && recaudadorEntity.tipoCobro) || 'PRESTAMO'}\n                  >\n                    <option value=\"PRESTAMO\">\n                      <Translate contentKey=\"sicoApp.TipoCobro.PRESTAMO\" />\n                    </option>\n                    <option value=\"INSUMOINFORMATICO\">\n                      <Translate contentKey=\"sicoApp.TipoCobro.INSUMOINFORMATICO\" />\n                    </option>\n                  </AvInput>\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"idClienteLabel\" for=\"idCliente\">\n                    <Translate contentKey=\"sicoApp.recaudador.idCliente\">Id Cliente</Translate>\n                  </Label>\n                  <AvField id=\"recaudador-idCliente\" type=\"string\" className=\"form-control\" name=\"idCliente\" />\n                </AvGroup>\n                <Button tag={Link} id=\"cancel-save\" to=\"/entity/recaudador\" replace color=\"info\">\n                  <FontAwesomeIcon icon=\"arrow-left\" />&nbsp;\n                  <span className=\"d-none d-md-inline\">\n                    <Translate contentKey=\"entity.action.back\">Back</Translate>\n                  </span>\n                </Button>\n                &nbsp;\n                <Button color=\"primary\" id=\"save-entity\" type=\"submit\" disabled={updating}>\n                  <FontAwesomeIcon icon=\"save\" />&nbsp;\n                  <Translate contentKey=\"entity.action.save\">Save</Translate>\n                </Button>\n              </AvForm>\n            )}\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (storeState: IRootState) => ({\n  recaudadorEntity: storeState.recaudador.entity,\n  loading: storeState.recaudador.loading,\n  updating: storeState.recaudador.updating,\n  updateSuccess: storeState.recaudador.updateSuccess\n});\n\nconst mapDispatchToProps = {\n  getEntity,\n  updateEntity,\n  createEntity,\n  reset\n};\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RecaudadorUpdate);\n","import axios from 'axios';\nimport { ICrudGetAction, ICrudGetAllAction, ICrudPutAction, ICrudDeleteAction, translate } from 'react-jhipster';\n\nimport { cleanEntity } from 'app/shared/util/entity-utils';\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\n\nimport { IRecaudador, defaultValue } from 'app/shared/model/recaudador.model';\n\nexport const ACTION_TYPES = {\n  FETCH_RECAUDADOR_LIST: 'recaudador/FETCH_RECAUDADOR_LIST',\n  FETCH_RECAUDADOR: 'recaudador/FETCH_RECAUDADOR',\n  CREATE_RECAUDADOR: 'recaudador/CREATE_RECAUDADOR',\n  UPDATE_RECAUDADOR: 'recaudador/UPDATE_RECAUDADOR',\n  DELETE_RECAUDADOR: 'recaudador/DELETE_RECAUDADOR',\n  RESET: 'recaudador/RESET'\n};\n\nconst initialState = {\n  loading: false,\n  errorMessage: null,\n  entities: [] as ReadonlyArray<IRecaudador>,\n  entity: defaultValue,\n  updating: false,\n  totalItems: 0,\n  updateSuccess: false\n};\n\nexport type RecaudadorState = Readonly<typeof initialState>;\n\n// Reducer\n\nexport default (state: RecaudadorState = initialState, action): RecaudadorState => {\n  switch (action.type) {\n    case REQUEST(ACTION_TYPES.FETCH_RECAUDADOR_LIST):\n    case REQUEST(ACTION_TYPES.FETCH_RECAUDADOR):\n      return {\n        ...state,\n        errorMessage: null,\n        updateSuccess: false,\n        loading: true\n      };\n    case REQUEST(ACTION_TYPES.CREATE_RECAUDADOR):\n    case REQUEST(ACTION_TYPES.UPDATE_RECAUDADOR):\n    case REQUEST(ACTION_TYPES.DELETE_RECAUDADOR):\n      return {\n        ...state,\n        errorMessage: null,\n        updateSuccess: false,\n        updating: true\n      };\n    case FAILURE(ACTION_TYPES.FETCH_RECAUDADOR_LIST):\n    case FAILURE(ACTION_TYPES.FETCH_RECAUDADOR):\n    case FAILURE(ACTION_TYPES.CREATE_RECAUDADOR):\n    case FAILURE(ACTION_TYPES.UPDATE_RECAUDADOR):\n    case FAILURE(ACTION_TYPES.DELETE_RECAUDADOR):\n      return {\n        ...state,\n        loading: false,\n        updating: false,\n        updateSuccess: false,\n        errorMessage: action.payload\n      };\n    case SUCCESS(ACTION_TYPES.FETCH_RECAUDADOR_LIST):\n      return {\n        ...state,\n        loading: false,\n        totalItems: action.payload.headers['x-total-count'],\n        entities: action.payload.data\n      };\n    case SUCCESS(ACTION_TYPES.FETCH_RECAUDADOR):\n      return {\n        ...state,\n        loading: false,\n        entity: action.payload.data\n      };\n    case SUCCESS(ACTION_TYPES.CREATE_RECAUDADOR):\n    case SUCCESS(ACTION_TYPES.UPDATE_RECAUDADOR):\n      return {\n        ...state,\n        updating: false,\n        updateSuccess: true,\n        entity: action.payload.data\n      };\n    case SUCCESS(ACTION_TYPES.DELETE_RECAUDADOR):\n      return {\n        ...state,\n        updating: false,\n        updateSuccess: true,\n        entity: {}\n      };\n    case ACTION_TYPES.RESET:\n      return {\n        ...initialState\n      };\n    default:\n      return state;\n  }\n};\n\nconst apiUrl = 'api/recaudadors';\n\n// Actions\n\nexport const getEntities: ICrudGetAllAction<IRecaudador> = (page, size, sort) => {\n  const requestUrl = `${apiUrl}${sort ? `?page=${page}&size=${size}&sort=${sort}` : ''}`;\n  return {\n    type: ACTION_TYPES.FETCH_RECAUDADOR_LIST,\n    payload: axios.get<IRecaudador>(`${requestUrl}${sort ? '&' : '?'}cacheBuster=${new Date().getTime()}`)\n  };\n};\n\nexport const getEntity: ICrudGetAction<IRecaudador> = id => {\n  const requestUrl = `${apiUrl}/${id}`;\n  return {\n    type: ACTION_TYPES.FETCH_RECAUDADOR,\n    payload: axios.get<IRecaudador>(requestUrl)\n  };\n};\n\nexport const createEntity: ICrudPutAction<IRecaudador> = entity => async dispatch => {\n  const result = await dispatch({\n    type: ACTION_TYPES.CREATE_RECAUDADOR,\n    payload: axios.post(apiUrl, cleanEntity(entity))\n  });\n  dispatch(getEntities());\n  return result;\n};\n\nexport const updateEntity: ICrudPutAction<IRecaudador> = entity => async dispatch => {\n  const result = await dispatch({\n    type: ACTION_TYPES.UPDATE_RECAUDADOR,\n    payload: axios.put(apiUrl, cleanEntity(entity))\n  });\n  dispatch(getEntities());\n  return result;\n};\n\nexport const updateEntityWithTranferencia: ICrudPutAction<IRecaudador> = entity => async dispatch => {\n    const requestUrl = `${apiUrl + '/update'}/${ entity.id}`;\n    const result = await dispatch({\n        type: ACTION_TYPES.UPDATE_RECAUDADOR,\n        payload: axios.put(requestUrl)\n    });\n    dispatch(getEntities());\n    return result;\n};\n\nexport const deleteEntity: ICrudDeleteAction<IRecaudador> = id => async dispatch => {\n  const requestUrl = `${apiUrl}/${id}`;\n  const result = await dispatch({\n    type: ACTION_TYPES.DELETE_RECAUDADOR,\n    payload: axios.delete(requestUrl)\n  });\n  dispatch(getEntities());\n  return result;\n};\n\nexport const reset = () => ({\n  type: ACTION_TYPES.RESET\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, RouteComponentProps } from 'react-router-dom';\nimport { Button, Table, Row, Badge, Col } from 'reactstrap';\n// tslint:disable-next-line:no-unused-variable\nimport {\n  Translate,\n  ICrudGetAllAction,\n  TextFormat,\n  getSortState,\n  IPaginationBaseState,\n  getPaginationItemsNumber,\n  JhiPagination\n} from 'react-jhipster';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { IRootState } from 'app/shared/reducers';\nimport { getEntities, updateEntityWithTranferencia } from './recaudador.reducer';\nimport { IRecaudador } from 'app/shared/model/recaudador.model';\n// tslint:disable-next-line:no-unused-variable\n\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\nimport { ITEMS_PER_PAGE } from 'app/shared/util/pagination.constants';\n\nexport interface IRecaudadorProps extends StateProps, DispatchProps, RouteComponentProps<{ url: string }> {}\n\nexport type IRecaudadorState = IPaginationBaseState;\n\nexport class Recaudador extends React.Component<IRecaudadorProps, IRecaudadorState> {\n  state: IRecaudadorState = {\n    ...getSortState(this.props.location, ITEMS_PER_PAGE)\n  };\n\n  componentDidMount() {\n    this.getEntities();\n  }\n\n  sort = prop => () => {\n    this.setState(\n      {\n        order: this.state.order === 'asc' ? 'desc' : 'asc',\n        sort: prop\n      },\n      () => this.sortEntities()\n    );\n  };\n\n  sortEntities() {\n    this.getEntities();\n    this.props.history.push(`${this.props.location.pathname}?page=${this.state.activePage}&sort=${this.state.sort},${this.state.order}`);\n  }\n\n  handlePagination = activePage => this.setState({ activePage }, () => this.sortEntities());\n\n  getEntities = () => {\n    const { activePage, itemsPerPage, sort, order } = this.state;\n    this.props.getEntities(activePage - 1, itemsPerPage, `${sort},${order}`);\n  };\n\n    toggleTransferido = recaudador => () => {\n        this.props.updateEntityWithTranferencia({\n            ...recaudador,\n            transferido: !recaudador.transferido\n        });\n    };\n  render() {\n    const { recaudadorList, match, totalItems } = this.props;\n    return (\n      <div>\n        <h2 id=\"recaudador-heading\">\n          <Translate contentKey=\"sicoApp.recaudador.home.title\">Recaudadors</Translate>\n          <Link to={`${match.url}/new`} className=\"btn btn-primary float-right jh-create-entity\" id=\"jh-create-entity\">\n            <FontAwesomeIcon icon=\"plus\" />&nbsp;\n            <Translate contentKey=\"sicoApp.recaudador.home.createLabel\">Create new Recaudador</Translate>\n          </Link>\n        </h2>\n        <div className=\"table-responsive\">\n          <Table responsive>\n            <thead>\n              <tr>\n                <th className=\"hand\" onClick={this.sort('id')}>\n                  <Translate contentKey=\"global.field.id\">ID</Translate> <FontAwesomeIcon icon=\"sort\" />\n                </th>\n                <th className=\"hand\" onClick={this.sort('activo')}>\n                  <Translate contentKey=\"sicoApp.recaudador.activo\">Activo</Translate> <FontAwesomeIcon icon=\"sort\" />\n                </th>\n                  <th className=\"hand\" onClick={this.sort('transferido')}>\n                      <Translate contentKey=\"sicoApp.recaudador.transferido\">Transferido</Translate> <FontAwesomeIcon icon=\"sort\" />\n                  </th>\n                <th className=\"hand\" onClick={this.sort('cantCuotas')}>\n                  <Translate contentKey=\"sicoApp.recaudador.cantCuotas\">Cant Cuotas</Translate> <FontAwesomeIcon icon=\"sort\" />\n                </th>\n                {/*<th className=\"hand\" onClick={this.sort('cantidadRenegociado')}>\n                  <Translate contentKey=\"sicoApp.recaudador.cantidadRenegociado\">Cantidad Renegociado</Translate>{' '}\n                  <FontAwesomeIcon icon=\"sort\" />\n                </th>*/}\n                <th className=\"hand\" onClick={this.sort('capitalPrestamo')}>\n                  <Translate contentKey=\"sicoApp.recaudador.capitalPrestamo\">Capital Prestamo</Translate> <FontAwesomeIcon icon=\"sort\" />\n                </th>\n                <th className=\"hand\" onClick={this.sort('cuotaCobrada')}>\n                  <Translate contentKey=\"sicoApp.recaudador.cuotaCobrada\">Cuota Cobrada</Translate> <FontAwesomeIcon icon=\"sort\" />\n                </th>\n                <th className=\"hand\" onClick={this.sort('cuotaPura')}>\n                  <Translate contentKey=\"sicoApp.recaudador.cuotaPura\">Cuota Pura</Translate> <FontAwesomeIcon icon=\"sort\" />\n                </th>\n                {/*<th className=\"hand\" onClick={this.sort('cuotaRecuperoCapital')}>\n                  <Translate contentKey=\"sicoApp.recaudador.cuotaRecuperoCapital\">Cuota Recupero Capital</Translate>{' '}\n                  <FontAwesomeIcon icon=\"sort\" />\n                </th>*/}\n                <th className=\"hand\" onClick={this.sort('diaHoraEjecucion')}>\n                  <Translate contentKey=\"sicoApp.recaudador.diaHoraEjecucion\">Dia Hora Ejecucion</Translate> <FontAwesomeIcon icon=\"sort\" />\n                </th>\n                {/*<th className=\"hand\" onClick={this.sort('esPersonal')}>\n                  <Translate contentKey=\"sicoApp.recaudador.esPersonal\">Es Personal</Translate> <FontAwesomeIcon icon=\"sort\" />\n                </th>\n                <th className=\"hand\" onClick={this.sort('excluirFindeSemanas')}>\n                  <Translate contentKey=\"sicoApp.recaudador.excluirFindeSemanas\">Excluir Finde Semanas</Translate>{' '}\n                  <FontAwesomeIcon icon=\"sort\" />\n                </th>*/}\n               {/* <th className=\"hand\" onClick={this.sort('fechaCreacion')}>\n                  <Translate contentKey=\"sicoApp.recaudador.fechaCreacion\">Fecha Creacion</Translate> <FontAwesomeIcon icon=\"sort\" />\n                </th>*/}\n                <th className=\"hand\" onClick={this.sort('fechaInicio')}>\n                  <Translate contentKey=\"sicoApp.recaudador.fechaInicio\">Fecha Inicio</Translate> <FontAwesomeIcon icon=\"sort\" />\n                </th>\n              {/*  <th className=\"hand\" onClick={this.sort('fechaVencimiento')}>\n                  <Translate contentKey=\"sicoApp.recaudador.fechaVencimiento\">Fecha Vencimiento</Translate> <FontAwesomeIcon icon=\"sort\" />\n                </th>*/}\n               {/* <th className=\"hand\" onClick={this.sort('incobrable')}>\n                  <Translate contentKey=\"sicoApp.recaudador.incobrable\">Incobrable</Translate> <FontAwesomeIcon icon=\"sort\" />\n                </th>*/}\n                <th className=\"hand\" onClick={this.sort('interesesCuota')}>\n                  <Translate contentKey=\"sicoApp.recaudador.interesesCuota\">Intereses Cuota</Translate> <FontAwesomeIcon icon=\"sort\" />\n                </th>\n                <th className=\"hand\" onClick={this.sort('interesesPrestamos')}>\n                  <Translate contentKey=\"sicoApp.recaudador.interesesPrestamos\">Intereses Prestamos</Translate>{' '}\n                  <FontAwesomeIcon icon=\"sort\" />\n                </th>\n                <th className=\"hand\" onClick={this.sort('monto')}>\n                  <Translate contentKey=\"sicoApp.recaudador.monto\">Monto</Translate> <FontAwesomeIcon icon=\"sort\" />\n                </th>\n               {/* <th className=\"hand\" onClick={this.sort('observaciones')}>\n                  <Translate contentKey=\"sicoApp.recaudador.observaciones\">Observaciones</Translate> <FontAwesomeIcon icon=\"sort\" />\n                </th>*/}\n               {/* <th className=\"hand\" onClick={this.sort('pagoManual')}>\n                  <Translate contentKey=\"sicoApp.recaudador.pagoManual\">Pago Manual</Translate> <FontAwesomeIcon icon=\"sort\" />\n                </th>*/}\n                <th className=\"hand\" onClick={this.sort('periodicidad')}>\n                  <Translate contentKey=\"sicoApp.recaudador.periodicidad\">Periodicidad</Translate> <FontAwesomeIcon icon=\"sort\" />\n                </th>\n               {/* <th className=\"hand\" onClick={this.sort('porcParticipacion')}>\n                  <Translate contentKey=\"sicoApp.recaudador.porcParticipacion\">Porc Participacion</Translate>{' '}\n                  <FontAwesomeIcon icon=\"sort\" />\n                </th>*/}\n               {/* <th className=\"hand\" onClick={this.sort('tipoCobro')}>\n                  <Translate contentKey=\"sicoApp.recaudador.tipoCobro\">Tipo Cobro</Translate> <FontAwesomeIcon icon=\"sort\" />\n                </th>*/}\n               {/* <th className=\"hand\" onClick={this.sort('idCliente')}>\n                  <Translate contentKey=\"sicoApp.recaudador.idCliente\">Id Cliente</Translate> <FontAwesomeIcon icon=\"sort\" />\n                </th>*/}\n                <th />\n              </tr>\n            </thead>\n            <tbody>\n              {recaudadorList.map((recaudador, i) => (\n                <tr key={`entity-${i}`}>\n                  <td>\n                    <Button tag={Link} to={`${match.url}/${recaudador.id}`} color=\"link\" size=\"sm\">\n                      {recaudador.id}\n                    </Button>\n                  </td>\n                {/*  <td>{recaudador.activo ? 'true' : 'false'}</td>*/}\n                <td>\n                    {recaudador.activo ? (\n                        <div>\n                            <Badge color=\"success\">SI</Badge>\n                        </div>\n\n                    ) : (\n                        <div>\n                            <Badge color=\"danger\">NO</Badge>\n                        </div>\n\n                    )}\n                </td>\n                    <td>\n                        {recaudador.transferido ? (\n                            <Button color=\"success\" disabled={false}>\n                                Transferido\n                            </Button>\n                        ) : (\n                            <Button color=\"info\" onClick={this.toggleTransferido(recaudador)}>\n                                Pendiente\n                            </Button>\n                        )}\n                    </td>\n                  <td>{recaudador.cantCuotas}</td>\n                  {/*<td>{recaudador.cantidadRenegociado}</td>*/}\n                  <td>{recaudador.capitalPrestamo}</td>\n                  <td>{recaudador.cuotaCobrada}</td>\n                  <td>{recaudador.cuotaPura}</td>\n                 {/* <td>{recaudador.cuotaRecuperoCapital}</td>*/}\n                  <td>{recaudador.diaHoraEjecucion}</td>\n                 {/* <td>{recaudador.esPersonal ? 'true' : 'false'}</td>\n                  <td>{recaudador.excluirFindeSemanas ? 'true' : 'false'}</td>*/}\n                 {/* <td>\n                    <TextFormat type=\"date\" value={recaudador.fechaCreacion} format={APP_DATE_FORMAT} />\n                  </td>*/}\n                  <td>\n                    <TextFormat type=\"date\" value={recaudador.fechaInicio} format={APP_DATE_FORMAT} />\n                  </td>\n                  {/*<td>\n                    <TextFormat type=\"date\" value={recaudador.fechaVencimiento} format={APP_DATE_FORMAT} />\n                  </td>*/}\n                 {/* <td>{recaudador.incobrable ? 'true' : 'false'}</td>*/}\n                  <td>{recaudador.interesesCuota}</td>\n                  <td>{recaudador.interesesPrestamos}</td>\n                  <td>{recaudador.monto}</td>\n                  {/*<td>{recaudador.observaciones}</td>*/}\n                 {/* <td>{recaudador.pagoManual}</td>*/}\n                  <td>\n                    <Translate contentKey={`sicoApp.Periodicidad.${recaudador.periodicidad}`} />\n                  </td>\n                  {/*<td>{recaudador.porcParticipacion}</td>*/}\n                 {/* <td>\n                    <Translate contentKey={`sicoApp.TipoCobro.${recaudador.tipoCobro}`} />\n                  </td>*/}\n                  {/*<td>{recaudador.idCliente}</td>*/}\n                  <td className=\"text-right\">\n                    <div className=\"btn-group flex-btn-group-container\">\n                      <Button tag={Link} to={`${match.url}/${recaudador.id}`} color=\"info\" size=\"sm\">\n                        <FontAwesomeIcon icon=\"eye\" />{' '}\n                        <span className=\"d-none d-md-inline\">\n                          <Translate contentKey=\"entity.action.view\">View</Translate>\n                        </span>\n                      </Button>\n                      {/*<Button tag={Link} to={`${match.url}/${recaudador.id}/edit`} color=\"primary\" size=\"sm\">\n                        <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\n                        <span className=\"d-none d-md-inline\">\n                          <Translate contentKey=\"entity.action.edit\">Edit</Translate>\n                        </span>\n                      </Button>\n                      <Button tag={Link} to={`${match.url}/${recaudador.id}/delete`} color=\"danger\" size=\"sm\">\n                        <FontAwesomeIcon icon=\"trash\" />{' '}\n                        <span className=\"d-none d-md-inline\">\n                          <Translate contentKey=\"entity.action.delete\">Delete</Translate>\n                        </span>\n                      </Button>*/}\n                    </div>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </div>\n        <Row className=\"justify-content-center\">\n          <JhiPagination\n            items={getPaginationItemsNumber(totalItems, this.state.itemsPerPage)}\n            activePage={this.state.activePage}\n            onSelect={this.handlePagination}\n            maxButtons={5}\n          />\n        </Row>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ recaudador }: IRootState) => ({\n  recaudadorList: recaudador.entities,\n  totalItems: recaudador.totalItems\n});\n\nconst mapDispatchToProps = {\n  getEntities , updateEntityWithTranferencia\n};\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Recaudador);\n","import axios from 'axios';\nimport { ICrudGetAction, ICrudGetAllAction, ICrudPutAction, ICrudDeleteAction } from 'react-jhipster';\n\nimport { cleanEntity } from 'app/shared/util/entity-utils';\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\n\nimport { IRegion, defaultValue } from 'app/shared/model/region.model';\n\nexport const ACTION_TYPES = {\n  FETCH_REGION_LIST: 'region/FETCH_REGION_LIST',\n  FETCH_REGION: 'region/FETCH_REGION',\n  CREATE_REGION: 'region/CREATE_REGION',\n  UPDATE_REGION: 'region/UPDATE_REGION',\n  DELETE_REGION: 'region/DELETE_REGION',\n  RESET: 'region/RESET'\n};\n\nconst initialState = {\n  loading: false,\n  errorMessage: null,\n  entities: [] as ReadonlyArray<IRegion>,\n  entity: defaultValue,\n  updating: false,\n  updateSuccess: false\n};\n\nexport type RegionState = Readonly<typeof initialState>;\n\n// Reducer\n\nexport default (state: RegionState = initialState, action): RegionState => {\n  switch (action.type) {\n    case REQUEST(ACTION_TYPES.FETCH_REGION_LIST):\n    case REQUEST(ACTION_TYPES.FETCH_REGION):\n      return {\n        ...state,\n        errorMessage: null,\n        updateSuccess: false,\n        loading: true\n      };\n    case REQUEST(ACTION_TYPES.CREATE_REGION):\n    case REQUEST(ACTION_TYPES.UPDATE_REGION):\n    case REQUEST(ACTION_TYPES.DELETE_REGION):\n      return {\n        ...state,\n        errorMessage: null,\n        updateSuccess: false,\n        updating: true\n      };\n    case FAILURE(ACTION_TYPES.FETCH_REGION_LIST):\n    case FAILURE(ACTION_TYPES.FETCH_REGION):\n    case FAILURE(ACTION_TYPES.CREATE_REGION):\n    case FAILURE(ACTION_TYPES.UPDATE_REGION):\n    case FAILURE(ACTION_TYPES.DELETE_REGION):\n      return {\n        ...state,\n        loading: false,\n        updating: false,\n        updateSuccess: false,\n        errorMessage: action.payload\n      };\n    case SUCCESS(ACTION_TYPES.FETCH_REGION_LIST):\n      return {\n        ...state,\n        loading: false,\n        entities: action.payload.data\n      };\n    case SUCCESS(ACTION_TYPES.FETCH_REGION):\n      return {\n        ...state,\n        loading: false,\n        entity: action.payload.data\n      };\n    case SUCCESS(ACTION_TYPES.CREATE_REGION):\n    case SUCCESS(ACTION_TYPES.UPDATE_REGION):\n      return {\n        ...state,\n        updating: false,\n        updateSuccess: true,\n        entity: action.payload.data\n      };\n    case SUCCESS(ACTION_TYPES.DELETE_REGION):\n      return {\n        ...state,\n        updating: false,\n        updateSuccess: true,\n        entity: {}\n      };\n    case ACTION_TYPES.RESET:\n      return {\n        ...initialState\n      };\n    default:\n      return state;\n  }\n};\n\nconst apiUrl = 'api/regions';\n\n// Actions\n\nexport const getEntities: ICrudGetAllAction<IRegion> = (page, size, sort) => ({\n  type: ACTION_TYPES.FETCH_REGION_LIST,\n  payload: axios.get<IRegion>(`${apiUrl}?cacheBuster=${new Date().getTime()}`)\n});\n\nexport const getEntity: ICrudGetAction<IRegion> = id => {\n  const requestUrl = `${apiUrl}/${id}`;\n  return {\n    type: ACTION_TYPES.FETCH_REGION,\n    payload: axios.get<IRegion>(requestUrl)\n  };\n};\n\nexport const createEntity: ICrudPutAction<IRegion> = entity => async dispatch => {\n  const result = await dispatch({\n    type: ACTION_TYPES.CREATE_REGION,\n    payload: axios.post(apiUrl, cleanEntity(entity))\n  });\n  dispatch(getEntities());\n  return result;\n};\n\nexport const updateEntity: ICrudPutAction<IRegion> = entity => async dispatch => {\n  const result = await dispatch({\n    type: ACTION_TYPES.UPDATE_REGION,\n    payload: axios.put(apiUrl, cleanEntity(entity))\n  });\n  dispatch(getEntities());\n  return result;\n};\n\nexport const deleteEntity: ICrudDeleteAction<IRegion> = id => async dispatch => {\n  const requestUrl = `${apiUrl}/${id}`;\n  const result = await dispatch({\n    type: ACTION_TYPES.DELETE_REGION,\n    payload: axios.delete(requestUrl)\n  });\n  dispatch(getEntities());\n  return result;\n};\n\nexport const reset = () => ({\n  type: ACTION_TYPES.RESET\n});\n","import React from 'react';\nimport { Switch } from 'react-router-dom';\n\nimport ErrorBoundaryRoute from 'app/shared/error/error-boundary-route';\n\nimport Token from './token';\nimport TokenDetail from './token-detail';\nimport TokenUpdate from './token-update';\nimport TokenDeleteDialog from './token-delete-dialog';\n\nconst Routes = ({ match }) => (\n  <>\n    <Switch>\n      <ErrorBoundaryRoute exact path={`${match.url}/new`} component={TokenUpdate} />\n      <ErrorBoundaryRoute exact path={`${match.url}/:id/edit`} component={TokenUpdate} />\n      <ErrorBoundaryRoute exact path={`${match.url}/:id`} component={TokenDetail} />\n      <ErrorBoundaryRoute path={match.url} component={Token} />\n    </Switch>\n    <ErrorBoundaryRoute path={`${match.url}/:id/delete`} component={TokenDeleteDialog} />\n  </>\n);\n\nexport default Routes;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\nimport { Translate, ICrudGetAction, ICrudDeleteAction } from 'react-jhipster';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { IToken } from 'app/shared/model/token.model';\nimport { IRootState } from 'app/shared/reducers';\nimport { getEntity, deleteEntity } from './token.reducer';\n\nexport interface ITokenDeleteDialogProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\n\nexport class TokenDeleteDialog extends React.Component<ITokenDeleteDialogProps> {\n  componentDidMount() {\n    this.props.getEntity(this.props.match.params.id);\n  }\n\n  confirmDelete = event => {\n    this.props.deleteEntity(this.props.tokenEntity.id);\n    this.handleClose(event);\n  };\n\n  handleClose = event => {\n    event.stopPropagation();\n    this.props.history.goBack();\n  };\n\n  render() {\n    const { tokenEntity } = this.props;\n    return (\n      <Modal isOpen toggle={this.handleClose}>\n        <ModalHeader toggle={this.handleClose}>\n          <Translate contentKey=\"entity.delete.title\">Confirm delete operation</Translate>\n        </ModalHeader>\n        <ModalBody id=\"sicoApp.token.delete.question\">\n          <Translate contentKey=\"sicoApp.token.delete.question\" interpolate={{ id: tokenEntity.id }}>\n            Are you sure you want to delete this Token?\n          </Translate>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={this.handleClose}>\n            <FontAwesomeIcon icon=\"ban\" />\n            &nbsp;\n            <Translate contentKey=\"entity.action.cancel\">Cancel</Translate>\n          </Button>\n          <Button id=\"jhi-confirm-delete-token\" color=\"danger\" onClick={this.confirmDelete}>\n            <FontAwesomeIcon icon=\"trash\" />\n            &nbsp;\n            <Translate contentKey=\"entity.action.delete\">Delete</Translate>\n          </Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nconst mapStateToProps = ({ token }: IRootState) => ({\n  tokenEntity: token.entity\n});\n\nconst mapDispatchToProps = { getEntity, deleteEntity };\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TokenDeleteDialog);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, RouteComponentProps } from 'react-router-dom';\nimport { Button, Row, Col } from 'reactstrap';\n// tslint:disable-next-line:no-unused-variable\nimport { Translate, ICrudGetAction } from 'react-jhipster';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { IRootState } from 'app/shared/reducers';\nimport { getEntity } from './token.reducer';\nimport { IToken } from 'app/shared/model/token.model';\n// tslint:disable-next-line:no-unused-variable\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\n\nexport interface ITokenDetailProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\n\nexport class TokenDetail extends React.Component<ITokenDetailProps> {\n  componentDidMount() {\n    this.props.getEntity(this.props.match.params.id);\n  }\n\n  render() {\n    const { tokenEntity } = this.props;\n    return (\n      <Row>\n        <Col md=\"8\">\n          <h2>\n            <Translate contentKey=\"sicoApp.token.detail.title\">Token</Translate> [<b>{tokenEntity.id}</b>]\n          </h2>\n          <dl className=\"jh-entity-details\">\n            <dt>\n              <span id=\"tokenName\">\n                <Translate contentKey=\"sicoApp.token.token\">Token</Translate>\n              </span>\n            </dt>\n            <dd>{tokenEntity.token}</dd>\n          </dl>\n          <Button tag={Link} to=\"/entity/token\" replace color=\"info\">\n            <FontAwesomeIcon icon=\"arrow-left\" />{' '}\n            <span className=\"d-none d-md-inline\">\n              <Translate contentKey=\"entity.action.back\">Back</Translate>\n            </span>\n          </Button>\n          &nbsp;\n          <Button tag={Link} to={`/entity/token/${tokenEntity.id}/edit`} replace color=\"primary\">\n            <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\n            <span className=\"d-none d-md-inline\">\n              <Translate contentKey=\"entity.action.edit\">Edit</Translate>\n            </span>\n          </Button>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nconst mapStateToProps = ({ token }: IRootState) => ({\n  tokenEntity: token.entity\n});\n\nconst mapDispatchToProps = { getEntity };\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TokenDetail);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, RouteComponentProps } from 'react-router-dom';\nimport { Button, Row, Col, Label } from 'reactstrap';\nimport { AvForm, AvGroup, AvInput, AvField } from 'availity-reactstrap-validation';\n// tslint:disable-next-line:no-unused-variable\nimport { Translate, translate, ICrudGetAction, ICrudGetAllAction, ICrudPutAction } from 'react-jhipster';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { IRootState } from 'app/shared/reducers';\n\nimport { getEntity, updateEntity, createEntity, reset } from './token.reducer';\nimport { IToken } from 'app/shared/model/token.model';\n// tslint:disable-next-line:no-unused-variable\nimport { convertDateTimeFromServer, convertDateTimeToServer } from 'app/shared/util/date-utils';\nimport { mapIdList } from 'app/shared/util/entity-utils';\n\nexport interface ITokenUpdateProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\n\nexport interface ITokenUpdateState {\n  isNew: boolean;\n}\n\nexport class TokenUpdate extends React.Component<ITokenUpdateProps, ITokenUpdateState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isNew: !this.props.match.params || !this.props.match.params.id\n    };\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    if (nextProps.updateSuccess !== this.props.updateSuccess && nextProps.updateSuccess) {\n      this.handleClose();\n    }\n  }\n\n  componentDidMount() {\n    if (this.state.isNew) {\n      this.props.reset();\n    } else {\n      this.props.getEntity(this.props.match.params.id);\n    }\n  }\n\n  saveEntity = (event, errors, values) => {\n    if (errors.length === 0) {\n      const { tokenEntity } = this.props;\n      const entity = {\n        ...tokenEntity,\n        ...values\n      };\n\n      if (this.state.isNew) {\n        this.props.createEntity(entity);\n      } else {\n        this.props.updateEntity(entity);\n      }\n    }\n  };\n\n  handleClose = () => {\n    this.props.history.push('/entity/token');\n  };\n\n  render() {\n    const { tokenEntity, loading, updating } = this.props;\n    const { isNew } = this.state;\n\n    return (\n      <div>\n        <Row className=\"justify-content-center\">\n          <Col md=\"8\">\n            <h2 id=\"sicoApp.token.home.createOrEditLabel\">\n              <Translate contentKey=\"sicoApp.token.home.createOrEditLabel\">Create or edit a Token</Translate>\n            </h2>\n          </Col>\n        </Row>\n        <Row className=\"justify-content-center\">\n          <Col md=\"8\">\n            {loading ? (\n              <p>Loading...</p>\n            ) : (\n              <AvForm model={isNew ? {} : tokenEntity} onSubmit={this.saveEntity}>\n                {!isNew ? (\n                  <AvGroup>\n                    <Label for=\"id\">\n                      <Translate contentKey=\"global.field.id\">ID</Translate>\n                    </Label>\n                    <AvInput id=\"token-id\" type=\"text\" className=\"form-control\" name=\"id\" required readOnly />\n                  </AvGroup>\n                ) : null}\n                <AvGroup>\n                  <Label id=\"tokenNameLabel\" for=\"token\">\n                    <Translate contentKey=\"sicoApp.token.token\">Token</Translate>\n                  </Label>\n                  <AvField id=\"token-token\" type=\"text\" name=\"token\" />\n                </AvGroup>\n                <Button tag={Link} id=\"cancel-save\" to=\"/entity/token\" replace color=\"info\">\n                  <FontAwesomeIcon icon=\"arrow-left\" />\n                  &nbsp;\n                  <span className=\"d-none d-md-inline\">\n                    <Translate contentKey=\"entity.action.back\">Back</Translate>\n                  </span>\n                </Button>\n                &nbsp;\n                <Button color=\"primary\" id=\"save-entity\" type=\"submit\" disabled={updating}>\n                  <FontAwesomeIcon icon=\"save\" />\n                  &nbsp;\n                  <Translate contentKey=\"entity.action.save\">Save</Translate>\n                </Button>\n              </AvForm>\n            )}\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (storeState: IRootState) => ({\n  tokenEntity: storeState.token.entity,\n  loading: storeState.token.loading,\n  updating: storeState.token.updating,\n  updateSuccess: storeState.token.updateSuccess\n});\n\nconst mapDispatchToProps = {\n  getEntity,\n  updateEntity,\n  createEntity,\n  reset\n};\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TokenUpdate);\n","import axios from 'axios';\nimport { ICrudGetAction, ICrudGetAllAction, ICrudPutAction, ICrudDeleteAction } from 'react-jhipster';\n\nimport { cleanEntity } from 'app/shared/util/entity-utils';\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\n\nimport { IToken, defaultValue } from 'app/shared/model/token.model';\n\nexport const ACTION_TYPES = {\n  FETCH_TOKEN_LIST: 'token/FETCH_TOKEN_LIST',\n  FETCH_TOKEN: 'token/FETCH_TOKEN',\n  CREATE_TOKEN: 'token/CREATE_TOKEN',\n  UPDATE_TOKEN: 'token/UPDATE_TOKEN',\n  DELETE_TOKEN: 'token/DELETE_TOKEN',\n  RESET: 'token/RESET'\n};\n\nconst initialState = {\n  loading: false,\n  errorMessage: null,\n  entities: [] as ReadonlyArray<IToken>,\n  entity: defaultValue,\n  updating: false,\n  updateSuccess: false\n};\n\nexport type TokenState = Readonly<typeof initialState>;\n\n// Reducer\n\nexport default (state: TokenState = initialState, action): TokenState => {\n  switch (action.type) {\n    case REQUEST(ACTION_TYPES.FETCH_TOKEN_LIST):\n    case REQUEST(ACTION_TYPES.FETCH_TOKEN):\n      return {\n        ...state,\n        errorMessage: null,\n        updateSuccess: false,\n        loading: true\n      };\n    case REQUEST(ACTION_TYPES.CREATE_TOKEN):\n    case REQUEST(ACTION_TYPES.UPDATE_TOKEN):\n    case REQUEST(ACTION_TYPES.DELETE_TOKEN):\n      return {\n        ...state,\n        errorMessage: null,\n        updateSuccess: false,\n        updating: true\n      };\n    case FAILURE(ACTION_TYPES.FETCH_TOKEN_LIST):\n    case FAILURE(ACTION_TYPES.FETCH_TOKEN):\n    case FAILURE(ACTION_TYPES.CREATE_TOKEN):\n    case FAILURE(ACTION_TYPES.UPDATE_TOKEN):\n    case FAILURE(ACTION_TYPES.DELETE_TOKEN):\n      return {\n        ...state,\n        loading: false,\n        updating: false,\n        updateSuccess: false,\n        errorMessage: action.payload\n      };\n    case SUCCESS(ACTION_TYPES.FETCH_TOKEN_LIST):\n      return {\n        ...state,\n        loading: false,\n        entities: action.payload.data\n      };\n    case SUCCESS(ACTION_TYPES.FETCH_TOKEN):\n      return {\n        ...state,\n        loading: false,\n        entity: action.payload.data\n      };\n    case SUCCESS(ACTION_TYPES.CREATE_TOKEN):\n    case SUCCESS(ACTION_TYPES.UPDATE_TOKEN):\n      return {\n        ...state,\n        updating: false,\n        updateSuccess: true,\n        entity: action.payload.data\n      };\n    case SUCCESS(ACTION_TYPES.DELETE_TOKEN):\n      return {\n        ...state,\n        updating: false,\n        updateSuccess: true,\n        entity: {}\n      };\n    case ACTION_TYPES.RESET:\n      return {\n        ...initialState\n      };\n    default:\n      return state;\n  }\n};\n\nconst apiUrl = 'api/tokens';\n\n// Actions\n\nexport const getEntities: ICrudGetAllAction<IToken> = (page, size, sort) => ({\n  type: ACTION_TYPES.FETCH_TOKEN_LIST,\n  payload: axios.get<IToken>(`${apiUrl}?cacheBuster=${new Date().getTime()}`)\n});\n\nexport const getEntity: ICrudGetAction<IToken> = id => {\n  const requestUrl = `${apiUrl}/${id}`;\n  return {\n    type: ACTION_TYPES.FETCH_TOKEN,\n    payload: axios.get<IToken>(requestUrl)\n  };\n};\n\nexport const createEntity: ICrudPutAction<IToken> = entity => async dispatch => {\n  const result = await dispatch({\n    type: ACTION_TYPES.CREATE_TOKEN,\n    payload: axios.post(apiUrl, cleanEntity(entity))\n  });\n  dispatch(getEntities());\n  return result;\n};\n\nexport const updateEntity: ICrudPutAction<IToken> = entity => async dispatch => {\n  const result = await dispatch({\n    type: ACTION_TYPES.UPDATE_TOKEN,\n    payload: axios.put(apiUrl, cleanEntity(entity))\n  });\n  dispatch(getEntities());\n  return result;\n};\n\nexport const deleteEntity: ICrudDeleteAction<IToken> = id => async dispatch => {\n  const requestUrl = `${apiUrl}/${id}`;\n  const result = await dispatch({\n    type: ACTION_TYPES.DELETE_TOKEN,\n    payload: axios.delete(requestUrl)\n  });\n  dispatch(getEntities());\n  return result;\n};\n\nexport const reset = () => ({\n  type: ACTION_TYPES.RESET\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, RouteComponentProps } from 'react-router-dom';\nimport { Button, Col, Row, Table } from 'reactstrap';\n// tslint:disable-next-line:no-unused-variable\nimport { Translate, ICrudGetAllAction } from 'react-jhipster';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { IRootState } from 'app/shared/reducers';\nimport { getEntities } from './token.reducer';\nimport { IToken } from 'app/shared/model/token.model';\n// tslint:disable-next-line:no-unused-variable\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\n\nexport interface ITokenProps extends StateProps, DispatchProps, RouteComponentProps<{ url: string }> {}\n\nexport class Token extends React.Component<ITokenProps> {\n  componentDidMount() {\n    this.props.getEntities();\n  }\n\n  render() {\n    const { tokenList, match } = this.props;\n    return (\n      <div>\n        <h2 id=\"token-heading\">\n          <Translate contentKey=\"sicoApp.token.home.title\">Tokens</Translate>\n          <Link to={`${match.url}/new`} className=\"btn btn-primary float-right jh-create-entity\" id=\"jh-create-entity\">\n            <FontAwesomeIcon icon=\"plus\" />\n            &nbsp;\n            <Translate contentKey=\"sicoApp.token.home.createLabel\">Create new Token</Translate>\n          </Link>\n        </h2>\n        <div className=\"table-responsive\">\n          <Table responsive>\n            <thead>\n              <tr>\n                <th>\n                  <Translate contentKey=\"global.field.id\">ID</Translate>\n                </th>\n                <th>\n                  <Translate contentKey=\"sicoApp.token.token\">Token</Translate>\n                </th>\n                <th />\n              </tr>\n            </thead>\n            <tbody>\n              {tokenList.map((token, i) => (\n                <tr key={`entity-${i}`}>\n                  <td>\n                    <Button tag={Link} to={`${match.url}/${token.id}`} color=\"link\" size=\"sm\">\n                      {token.id}\n                    </Button>\n                  </td>\n                  <td>{token.token}</td>\n                  <td className=\"text-right\">\n                    <div className=\"btn-group flex-btn-group-container\">\n                      <Button tag={Link} to={`${match.url}/${token.id}`} color=\"info\" size=\"sm\">\n                        <FontAwesomeIcon icon=\"eye\" />{' '}\n                        <span className=\"d-none d-md-inline\">\n                          <Translate contentKey=\"entity.action.view\">View</Translate>\n                        </span>\n                      </Button>\n                     {/* <Button tag={Link} to={`${match.url}/${token.id}/edit`} color=\"primary\" size=\"sm\">\n                        <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\n                        <span className=\"d-none d-md-inline\">\n                          <Translate contentKey=\"entity.action.edit\">Edit</Translate>\n                        </span>\n                      </Button>*/}\n                      <Button tag={Link} to={`${match.url}/${token.id}/delete`} color=\"danger\" size=\"sm\">\n                        <FontAwesomeIcon icon=\"trash\" />{' '}\n                        <span className=\"d-none d-md-inline\">\n                          <Translate contentKey=\"entity.action.delete\">Delete</Translate>\n                        </span>\n                      </Button>\n                    </div>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ token }: IRootState) => ({\n  tokenList: token.entities\n});\n\nconst mapDispatchToProps = {\n  getEntities\n};\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Token);\n","import axios from 'axios';\nimport { ICrudGetAction, ICrudGetAllAction, ICrudPutAction, ICrudDeleteAction } from 'react-jhipster';\n\nimport { cleanEntity } from 'app/shared/util/entity-utils';\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\n\nimport { ITransferencia, defaultValue } from 'app/shared/model/transferencia.model';\n\nexport const ACTION_TYPES = {\n  FETCH_TOKEN_LIST: 'transferencia/FETCH_TOKEN_LIST',\n  FETCH_TOKEN: 'transferencia/FETCH_TOKEN',\n  CREATE_TOKEN: 'transferencia/CREATE_TOKEN',\n  UPDATE_TOKEN: 'transferencia/UPDATE_TOKEN',\n  DELETE_TOKEN: 'transferencia/DELETE_TOKEN',\n  RESET: 'transferencia/RESET'\n};\n\nconst initialState = {\n  loading: false,\n  errorMessage: null,\n  entities: [] as ReadonlyArray<ITransferencia>,\n  entity: defaultValue,\n  updating: false,\n  updateSuccess: false\n};\n\nexport type TransferenciaState = Readonly<typeof initialState>;\n\n// Reducer\n\nexport default (state: TransferenciaState = initialState, action): TransferenciaState => {\n  switch (action.type) {\n    case REQUEST(ACTION_TYPES.FETCH_TOKEN_LIST):\n    case REQUEST(ACTION_TYPES.FETCH_TOKEN):\n      return {\n        ...state,\n        errorMessage: null,\n        updateSuccess: false,\n        loading: true\n      };\n    case REQUEST(ACTION_TYPES.CREATE_TOKEN):\n    case REQUEST(ACTION_TYPES.UPDATE_TOKEN):\n    case REQUEST(ACTION_TYPES.DELETE_TOKEN):\n      return {\n        ...state,\n        errorMessage: null,\n        updateSuccess: false,\n        updating: true\n      };\n    case FAILURE(ACTION_TYPES.FETCH_TOKEN_LIST):\n    case FAILURE(ACTION_TYPES.FETCH_TOKEN):\n    case FAILURE(ACTION_TYPES.CREATE_TOKEN):\n    case FAILURE(ACTION_TYPES.UPDATE_TOKEN):\n    case FAILURE(ACTION_TYPES.DELETE_TOKEN):\n      return {\n        ...state,\n        loading: false,\n        updating: false,\n        updateSuccess: false,\n        errorMessage: action.payload\n      };\n    case SUCCESS(ACTION_TYPES.FETCH_TOKEN_LIST):\n      return {\n        ...state,\n        loading: false,\n        entities: action.payload.data\n      };\n    case SUCCESS(ACTION_TYPES.FETCH_TOKEN):\n      return {\n        ...state,\n        loading: false,\n        entity: action.payload.data\n      };\n    case SUCCESS(ACTION_TYPES.CREATE_TOKEN):\n    case SUCCESS(ACTION_TYPES.UPDATE_TOKEN):\n      return {\n        ...state,\n        updating: false,\n        updateSuccess: true,\n        entity: action.payload.data\n      };\n    case SUCCESS(ACTION_TYPES.DELETE_TOKEN):\n      return {\n        ...state,\n        updating: false,\n        updateSuccess: true,\n        entity: {}\n      };\n    case ACTION_TYPES.RESET:\n      return {\n        ...initialState\n      };\n    default:\n      return state;\n  }\n};\n\nconst apiUrl = 'api/transferencias';\n\n// Actions\n\nexport const getEntities: ICrudGetAllAction<ITransferencia> = (page, size, sort) => ({\n  type: ACTION_TYPES.FETCH_TOKEN_LIST,\n  payload: axios.get<ITransferencia>(`${apiUrl}?cacheBuster=${new Date().getTime()}`)\n});\n\nexport const getEntity: ICrudGetAction<ITransferencia> = id => {\n  const requestUrl = `${apiUrl}/${id}`;\n  return {\n    type: ACTION_TYPES.FETCH_TOKEN,\n    payload: axios.get<ITransferencia>(requestUrl)\n  };\n};\n\nexport const createEntity: ICrudPutAction<ITransferencia> = entity => async dispatch => {\n  const result = await dispatch({\n    type: ACTION_TYPES.CREATE_TOKEN,\n    payload: axios.post(apiUrl, cleanEntity(entity))\n  });\n  dispatch(getEntities());\n  return result;\n};\n\nexport const updateEntity: ICrudPutAction<ITransferencia> = entity => async dispatch => {\n  const result = await dispatch({\n    type: ACTION_TYPES.UPDATE_TOKEN,\n    payload: axios.put(apiUrl, cleanEntity(entity))\n  });\n  dispatch(getEntities());\n  return result;\n};\n\nexport const deleteEntity: ICrudDeleteAction<ITransferencia> = id => async dispatch => {\n  const requestUrl = `${apiUrl}/${id}`;\n  const result = await dispatch({\n    type: ACTION_TYPES.DELETE_TOKEN,\n    payload: axios.delete(requestUrl)\n  });\n  dispatch(getEntities());\n  return result;\n};\n\nexport const reset = () => ({\n  type: ACTION_TYPES.RESET\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { AppContainer } from 'react-hot-loader';\n\nimport DevTools from './config/devtools';\nimport initStore from './config/store';\nimport { registerLocale } from './config/translation';\nimport setupAxiosInterceptors from './config/axios-interceptor';\nimport { clearAuthentication } from './shared/reducers/authentication';\nimport ErrorBoundary from './shared/error/error-boundary';\nimport AppComponent from './app';\nimport { loadIcons } from './config/icon-loader';\n\nconst devTools = process.env.NODE_ENV === 'development' ? <DevTools /> : null;\n\nconst store = initStore();\nregisterLocale(store);\n\nconst actions = bindActionCreators({ clearAuthentication }, store.dispatch);\nsetupAxiosInterceptors(() => actions.clearAuthentication('login.error.unauthorized'));\n\nloadIcons();\n\nconst rootEl = document.getElementById('root');\n\nconst render = Component =>\n  ReactDOM.render(\n    <ErrorBoundary>\n      <AppContainer>\n        <Provider store={store}>\n          <div>\n            {/* If this slows down the app in dev disable it and enable when required  */}\n            {devTools}\n            <Component />\n          </div>\n        </Provider>\n      </AppContainer>\n    </ErrorBoundary>,\n    rootEl\n  );\n\nrender(AppComponent);\n\n// This is quite unstable\n// if (module.hot) {\n//   module.hot.accept('./app', () => {\n//     const NextApp = require<{ default: typeof AppComponent }>('./app').default;\n//     render(NextApp);\n//   });\n// }\n","import axios from 'axios';\n\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\n\nexport const ACTION_TYPES = {\n  ACTIVATE_ACCOUNT: 'activate/ACTIVATE_ACCOUNT',\n  RESET: 'activate/RESET'\n};\n\nconst initialState = {\n  activationSuccess: false,\n  activationFailure: false\n};\n\nexport type ActivateState = Readonly<typeof initialState>;\n\n// Reducer\nexport default (state: ActivateState = initialState, action): ActivateState => {\n  switch (action.type) {\n    case REQUEST(ACTION_TYPES.ACTIVATE_ACCOUNT):\n      return {\n        ...state\n      };\n    case FAILURE(ACTION_TYPES.ACTIVATE_ACCOUNT):\n      return {\n        ...state,\n        activationFailure: true\n      };\n    case SUCCESS(ACTION_TYPES.ACTIVATE_ACCOUNT):\n      return {\n        ...state,\n        activationSuccess: true\n      };\n    case ACTION_TYPES.RESET:\n      return {\n        ...initialState\n      };\n    default:\n      return state;\n  }\n};\n\n// Actions\nexport const activateAction = key => ({\n  type: ACTION_TYPES.ACTIVATE_ACCOUNT,\n  payload: axios.get('api/activate?key=' + key)\n});\n\nexport const reset = () => ({\n  type: ACTION_TYPES.RESET\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, RouteComponentProps } from 'react-router-dom';\nimport { Row, Col, Alert } from 'reactstrap';\nimport { Translate, getUrlParameter } from 'react-jhipster';\n\nimport { IRootState } from 'app/shared/reducers';\nimport { activateAction, reset } from './activate.reducer';\n\nconst successAlert = (\n  <Alert color=\"success\">\n    <Translate contentKey=\"activate.messages.success\">\n      <strong>Your user account has been activated.</strong> Please\n    </Translate>\n    <Link to=\"/login\" className=\"alert-link\">\n      <Translate contentKey=\"global.messages.info.authenticated.link\">sign in</Translate>\n    </Link>\n    .\n  </Alert>\n);\n\nconst failureAlert = (\n  <Alert color=\"danger\">\n    <Translate contentKey=\"activate.messages.error\">\n      <strong>Your user could not be activated.</strong> Please use the registration form to sign up.\n    </Translate>\n  </Alert>\n);\n\nexport interface IActivateProps extends StateProps, DispatchProps, RouteComponentProps<{ key: any }> {}\n\nexport class ActivatePage extends React.Component<IActivateProps> {\n  componentWillUnmount() {\n    this.props.reset();\n  }\n\n  componentDidMount() {\n    const key = getUrlParameter('key', this.props.location.search);\n    this.props.activateAction(key);\n  }\n\n  render() {\n    const { activationSuccess, activationFailure } = this.props;\n\n    return (\n      <div>\n        <Row className=\"justify-content-center\">\n          <Col md=\"8\">\n            <h1>\n              <Translate contentKey=\"activate.title\">Activation</Translate>\n            </h1>\n            {activationSuccess ? successAlert : undefined}\n            {activationFailure ? failureAlert : undefined}\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ activate }: IRootState) => ({\n  activationSuccess: activate.activationSuccess,\n  activationFailure: activate.activationFailure\n});\n\nconst mapDispatchToProps = { activateAction, reset };\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ActivatePage);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Alert, Col, Row, Button } from 'reactstrap';\nimport { AvForm, AvField } from 'availity-reactstrap-validation';\nimport { Translate, translate, getUrlParameter } from 'react-jhipster';\nimport { RouteComponentProps } from 'react-router-dom';\n\nimport { IRootState } from 'app/shared/reducers';\nimport { handlePasswordResetFinish, reset } from '../password-reset.reducer';\nimport PasswordStrengthBar from 'app/shared/layout/password/password-strength-bar';\n\nexport interface IPasswordResetFinishProps extends DispatchProps, RouteComponentProps<{ key: string }> {}\n\nexport interface IPasswordResetFinishState {\n  password: string;\n  key: string;\n}\n\nexport class PasswordResetFinishPage extends React.Component<IPasswordResetFinishProps, IPasswordResetFinishState> {\n  state: IPasswordResetFinishState = {\n    password: '',\n    key: getUrlParameter('key', this.props.location.search)\n  };\n\n  componentWillUnmount() {\n    this.props.reset();\n  }\n\n  handleValidSubmit = (event, values) => {\n    this.props.handlePasswordResetFinish(this.state.key, values.newPassword);\n  };\n\n  updatePassword = event => {\n    this.setState({ password: event.target.value });\n  };\n\n  getResetForm() {\n    return (\n      <AvForm onValidSubmit={this.handleValidSubmit}>\n        <AvField\n          name=\"newPassword\"\n          label={translate('global.form.newpassword')}\n          placeholder={translate('global.form.newpassword.placeholder')}\n          type=\"password\"\n          validate={{\n            required: { value: true, errorMessage: translate('global.messages.validate.newpassword.required') },\n            minLength: { value: 4, errorMessage: translate('global.messages.validate.newpassword.minlength') },\n            maxLength: { value: 50, errorMessage: translate('global.messages.validate.newpassword.maxlength') }\n          }}\n          onChange={this.updatePassword}\n        />\n        <PasswordStrengthBar password={this.state.password} />\n        <AvField\n          name=\"confirmPassword\"\n          label={translate('global.form.confirmpassword')}\n          placeholder={translate('global.form.confirmpassword.placeholder')}\n          type=\"password\"\n          validate={{\n            required: { value: true, errorMessage: translate('global.messages.validate.confirmpassword.required') },\n            minLength: { value: 4, errorMessage: translate('global.messages.validate.confirmpassword.minlength') },\n            maxLength: { value: 50, errorMessage: translate('global.messages.validate.confirmpassword.maxlength') },\n            match: { value: 'newPassword', errorMessage: translate('global.messages.error.dontmatch') }\n          }}\n        />\n        <Button color=\"success\" type=\"submit\">\n          <Translate contentKey=\"reset.finish.form.button\">Validate new password</Translate>\n        </Button>\n      </AvForm>\n    );\n  }\n\n  render() {\n    const { key } = this.state;\n\n    return (\n      <div>\n        <Row className=\"justify-content-center\">\n          <Col md=\"4\">\n            <h1>\n              <Translate contentKey=\"reset.finish.title\">Reset password</Translate>\n            </h1>\n            <div>{key ? this.getResetForm() : null}</div>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = { handlePasswordResetFinish, reset };\n\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(PasswordResetFinishPage);\n","import React from 'react';\nimport { Translate, translate } from 'react-jhipster';\nimport { connect } from 'react-redux';\nimport { AvForm, AvField } from 'availity-reactstrap-validation';\nimport { Button, Alert, Col, Row } from 'reactstrap';\n\nimport { IRootState } from 'app/shared/reducers';\nimport { handlePasswordResetInit, reset } from '../password-reset.reducer';\n\nexport type IPasswordResetInitProps = DispatchProps;\n\nexport class PasswordResetInit extends React.Component<IPasswordResetInitProps> {\n  componentWillUnmount() {\n    this.props.reset();\n  }\n\n  handleValidSubmit = (event, values) => {\n    this.props.handlePasswordResetInit(values.email);\n    event.preventDefault();\n  };\n\n  render() {\n    return (\n      <div>\n        <Row className=\"justify-content-center\">\n          <Col md=\"8\">\n            <h1>\n              <Translate contentKey=\"reset.request.title\">Reset your password</Translate>\n            </h1>\n            <Alert color=\"warning\">\n              <p>\n                <Translate contentKey=\"reset.request.messages.info\">Enter the email address you used to register</Translate>\n              </p>\n            </Alert>\n            <AvForm onValidSubmit={this.handleValidSubmit}>\n              <AvField\n                name=\"email\"\n                label={translate('global.form.email')}\n                placeholder={translate('global.form.email.placeholder')}\n                type=\"email\"\n                validate={{\n                  required: { value: true, errorMessage: translate('global.messages.validate.email.required') },\n                  minLength: { value: 5, errorMessage: translate('global.messages.validate.email.minlength') },\n                  maxLength: { value: 254, errorMessage: translate('global.messages.validate.email.maxlength') }\n                }}\n              />\n              <Button color=\"primary\" type=\"submit\">\n                <Translate contentKey=\"reset.request.form.button\">Reset password</Translate>\n              </Button>\n            </AvForm>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = { handlePasswordResetInit, reset };\n\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(PasswordResetInit);\n","import axios from 'axios';\nimport { translate } from 'react-jhipster';\n\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\n\nexport const ACTION_TYPES = {\n  RESET_PASSWORD_INIT: 'passwordReset/RESET_PASSWORD_INIT',\n  RESET_PASSWORD_FINISH: 'passwordReset/RESET_PASSWORD_FINISH',\n  RESET: 'passwordReset/RESET'\n};\n\nconst initialState = {\n  loading: false,\n  resetPasswordSuccess: false,\n  resetPasswordFailure: false\n};\n\nexport type PasswordResetState = Readonly<typeof initialState>;\n\n// Reducer\nexport default (state: PasswordResetState = initialState, action): PasswordResetState => {\n  switch (action.type) {\n    case REQUEST(ACTION_TYPES.RESET_PASSWORD_FINISH):\n    case REQUEST(ACTION_TYPES.RESET_PASSWORD_INIT):\n      return {\n        ...state,\n        loading: true\n      };\n    case FAILURE(ACTION_TYPES.RESET_PASSWORD_FINISH):\n    case FAILURE(ACTION_TYPES.RESET_PASSWORD_INIT):\n      return {\n        ...initialState,\n        loading: false,\n        resetPasswordFailure: true\n      };\n    case SUCCESS(ACTION_TYPES.RESET_PASSWORD_FINISH):\n    case SUCCESS(ACTION_TYPES.RESET_PASSWORD_INIT):\n      return {\n        ...initialState,\n        loading: false,\n        resetPasswordSuccess: true\n      };\n    case ACTION_TYPES.RESET:\n      return {\n        ...initialState\n      };\n    default:\n      return state;\n  }\n};\n\nconst apiUrl = 'api/account/reset-password';\n\n// Actions\nexport const handlePasswordResetInit = mail => ({\n  type: ACTION_TYPES.RESET_PASSWORD_INIT,\n  // If the content-type isn't set that way, axios will try to encode the body and thus modify the data sent to the server.\n  payload: axios.post(`${apiUrl}/init`, mail, { headers: { ['Content-Type']: 'text/plain' } }),\n  meta: {\n    successMessage: translate('reset.request.messages.success'),\n    errorMessage: translate('reset.request.messages.notfound')\n  }\n});\n\nexport const handlePasswordResetFinish = (key, newPassword) => ({\n  type: ACTION_TYPES.RESET_PASSWORD_FINISH,\n  payload: axios.post(`${apiUrl}/finish`, { key, newPassword }),\n  meta: {\n    successMessage: translate('reset.finish.messages.success')\n  }\n});\n\nexport const reset = () => ({\n  type: ACTION_TYPES.RESET\n});\n","import axios from 'axios';\nimport { translate } from 'react-jhipster';\n\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\n\nexport const ACTION_TYPES = {\n  UPDATE_PASSWORD: 'account/UPDATE_PASSWORD',\n  RESET: 'account/RESET'\n};\n\nconst initialState = {\n  loading: false,\n  errorMessage: null,\n  updateSuccess: false,\n  updateFailure: false\n};\n\nexport type PasswordState = Readonly<typeof initialState>;\n\n// Reducer\nexport default (state: PasswordState = initialState, action): PasswordState => {\n  switch (action.type) {\n    case REQUEST(ACTION_TYPES.UPDATE_PASSWORD):\n      return {\n        ...initialState,\n        errorMessage: null,\n        updateSuccess: false,\n        loading: true\n      };\n    case FAILURE(ACTION_TYPES.UPDATE_PASSWORD):\n      return {\n        ...initialState,\n        loading: false,\n        updateSuccess: false,\n        updateFailure: true\n      };\n    case SUCCESS(ACTION_TYPES.UPDATE_PASSWORD):\n      return {\n        ...initialState,\n        loading: false,\n        updateSuccess: true,\n        updateFailure: false\n      };\n    case ACTION_TYPES.RESET:\n      return {\n        ...initialState\n      };\n    default:\n      return state;\n  }\n};\n\n// Actions\nconst apiUrl = 'api/account';\n\nexport const savePassword = (currentPassword, newPassword) => ({\n  type: ACTION_TYPES.UPDATE_PASSWORD,\n  payload: axios.post(`${apiUrl}/change-password`, { currentPassword, newPassword }),\n  meta: {\n    successMessage: translate('password.messages.success'),\n    errorMessage: translate('password.messages.error')\n  }\n});\n\nexport const reset = () => ({\n  type: ACTION_TYPES.RESET\n});\n","import axios from 'axios';\nimport { translate } from 'react-jhipster';\n\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\n\nexport const ACTION_TYPES = {\n  CREATE_ACCOUNT: 'register/CREATE_ACCOUNT',\n  RESET: 'register/RESET'\n};\n\nconst initialState = {\n  loading: false,\n  registrationSuccess: false,\n  registrationFailure: false,\n  errorMessage: null\n};\n\nexport type RegisterState = Readonly<typeof initialState>;\n\n// Reducer\nexport default (state: RegisterState = initialState, action): RegisterState => {\n  switch (action.type) {\n    case REQUEST(ACTION_TYPES.CREATE_ACCOUNT):\n      return {\n        ...state,\n        loading: true\n      };\n    case FAILURE(ACTION_TYPES.CREATE_ACCOUNT):\n      return {\n        ...initialState,\n        registrationFailure: true,\n        errorMessage: action.payload.response.data.errorKey\n      };\n    case SUCCESS(ACTION_TYPES.CREATE_ACCOUNT):\n      return {\n        ...initialState,\n        registrationSuccess: true\n      };\n    case ACTION_TYPES.RESET:\n      return {\n        ...initialState\n      };\n    default:\n      return state;\n  }\n};\n\n// Actions\nexport const handleRegister = (login, email, password, langKey = 'es', firstName, lastName) => ({\n  type: ACTION_TYPES.CREATE_ACCOUNT,\n  payload: axios.post('api/register', { login, email, password, langKey, firstName, lastName }),\n  meta: {\n    successMessage: translate('register.messages.success')\n  }\n});\n\nexport const reset = () => ({\n  type: ACTION_TYPES.RESET\n});\n","import React from 'react';\nimport { Translate, translate } from 'react-jhipster';\nimport { connect } from 'react-redux';\nimport { AvForm, AvField } from 'availity-reactstrap-validation';\nimport { Row, Col, Alert, Button } from 'reactstrap';\n\nimport PasswordStrengthBar from 'app/shared/layout/password/password-strength-bar';\nimport { IRootState } from 'app/shared/reducers';\nimport { handleRegister, reset } from './register.reducer';\n\nexport interface IRegisterProps extends StateProps, DispatchProps {}\n\nexport interface IRegisterState {\n  password: string;\n}\n\nexport class RegisterPage extends React.Component<IRegisterProps, IRegisterState> {\n  state: IRegisterState = {\n    password: ''\n  };\n\n  componentWillUnmount() {\n    this.props.reset();\n  }\n\n  handleValidSubmit = (event, values) => {\n    this.props.handleRegister(\n      values.username,\n      values.email,\n      values.firstPassword,\n      this.props.currentLocale,\n      values.firstName,\n      values.lastName\n    );\n    event.preventDefault();\n  };\n\n  updatePassword = event => {\n    this.setState({ password: event.target.value });\n  };\n\n  render() {\n    return (\n      <div>\n        <Row className=\"justify-content-center\">\n          <Col md=\"8\">\n            <h1 id=\"register-title\">\n              <Translate contentKey=\"register.title\">Registration</Translate>\n            </h1>\n          </Col>\n        </Row>\n        <Row className=\"justify-content-center\">\n          <Col md=\"8\">\n            <AvForm id=\"register-form\" onValidSubmit={this.handleValidSubmit}>\n              <AvField\n                name=\"firstName\"\n                label={translate('global.form.name')}\n                placeholder={translate('global.form.name.placeholder')}\n                type=\"text\"\n                validate={{\n                  required: { value: true, errorMessage: translate('global.messages.validate.user.required') }\n                }}\n              />\n              <AvField\n                name=\"lastName\"\n                label={translate('global.form.lastname')}\n                placeholder={translate('global.form.lastname.placeholder')}\n                type=\"text\"\n                validate={{\n                  required: { value: true, errorMessage: translate('global.messages.validate.user.required') }\n                }}\n              />\n              <AvField\n                name=\"email\"\n                label={translate('global.form.email')}\n                placeholder={translate('global.form.email.placeholder')}\n                type=\"email\"\n                validate={{\n                  required: { value: true, errorMessage: translate('global.messages.validate.email.required') },\n                  minLength: { value: 5, errorMessage: translate('global.messages.validate.email.minlength') },\n                  maxLength: { value: 254, errorMessage: translate('global.messages.validate.email.maxlength') }\n                }}\n              />\n              <AvField\n                name=\"username\"\n                label={translate('global.form.username')}\n                placeholder={translate('global.form.username.placeholder')}\n                validate={{\n                  required: { value: true, errorMessage: translate('register.messages.validate.login.required') },\n                  pattern: { value: '^[_.@A-Za-z0-9-]*$', errorMessage: translate('register.messages.validate.login.pattern') },\n                  minLength: { value: 8, errorMessage: translate('register.messages.validate.login.minlength') },\n                  maxLength: { value: 50, errorMessage: translate('register.messages.validate.login.maxlength') }\n                }}\n              />\n              <AvField\n                name=\"firstPassword\"\n                label={translate('global.form.newpassword')}\n                placeholder={translate('global.form.newpassword.placeholder')}\n                type=\"password\"\n                onChange={this.updatePassword}\n                validate={{\n                  required: { value: true, errorMessage: translate('global.messages.validate.newpassword.required') },\n                  minLength: { value: 8, errorMessage: translate('global.messages.validate.newpassword.minlength') },\n                  maxLength: { value: 10, errorMessage: translate('global.messages.validate.newpassword.maxlength') }\n                }}\n              />\n              <PasswordStrengthBar password={this.state.password} />\n              <AvField\n                name=\"secondPassword\"\n                label={translate('global.form.confirmpassword')}\n                placeholder={translate('global.form.confirmpassword.placeholder')}\n                type=\"password\"\n                validate={{\n                  required: { value: true, errorMessage: translate('global.messages.validate.confirmpassword.required') },\n                  minLength: { value: 8, errorMessage: translate('global.messages.validate.confirmpassword.minlength') },\n                  maxLength: { value: 10, errorMessage: translate('global.messages.validate.confirmpassword.maxlength') },\n                  match: { value: 'firstPassword', errorMessage: translate('global.messages.error.dontmatch') }\n                }}\n              />\n              <Button id=\"register-submit\" color=\"primary\" type=\"submit\">\n                <Translate contentKey=\"register.form.button\">Register</Translate>\n              </Button>\n            </AvForm>\n            <p>&nbsp;</p>\n            {/* <Alert color=\"warning\">\n              <span>\n                <Translate contentKey=\"global.messages.info.authenticated.prefix\">If you want to </Translate>\n              </span>\n              <a className=\"alert-link\">\n                <Translate contentKey=\"global.messages.info.authenticated.link\"> sign in</Translate>\n              </a>\n              <span>\n                <Translate contentKey=\"global.messages.info.authenticated.suffix\">\n                  , you can try the default accounts:\n                  <br />- Administrator (login=\"admin\" and password=\"admin\")\n                  <br />- User (login=\"user\" and password=\"user\").\n                </Translate>\n              </span>\n            </Alert>*/}\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ locale }: IRootState) => ({\n  currentLocale: locale.currentLocale\n});\n\nconst mapDispatchToProps = { handleRegister, reset };\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RegisterPage);\n","import axios from 'axios';\nimport { translate, Storage } from 'react-jhipster';\n\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\nimport { getSession } from 'app/shared/reducers/authentication';\n\nexport const ACTION_TYPES = {\n  UPDATE_ACCOUNT: 'account/UPDATE_ACCOUNT',\n  RESET: 'account/RESET'\n};\n\nconst initialState = {\n  loading: false,\n  errorMessage: null,\n  updateSuccess: false,\n  updateFailure: false\n};\n\nexport type SettingsState = Readonly<typeof initialState>;\n\n// Reducer\nexport default (state: SettingsState = initialState, action): SettingsState => {\n  switch (action.type) {\n    case REQUEST(ACTION_TYPES.UPDATE_ACCOUNT):\n      return {\n        ...state,\n        errorMessage: null,\n        updateSuccess: false,\n        loading: true\n      };\n    case FAILURE(ACTION_TYPES.UPDATE_ACCOUNT):\n      return {\n        ...state,\n        loading: false,\n        updateSuccess: false,\n        updateFailure: true\n      };\n    case SUCCESS(ACTION_TYPES.UPDATE_ACCOUNT):\n      return {\n        ...state,\n        loading: false,\n        updateSuccess: true,\n        updateFailure: false\n      };\n    case ACTION_TYPES.RESET:\n      return {\n        ...initialState\n      };\n    default:\n      return state;\n  }\n};\n\n// Actions\nconst apiUrl = 'api/account';\n\nexport const saveAccountSettings = account => async (dispatch, getState) => {\n  await dispatch({\n    type: ACTION_TYPES.UPDATE_ACCOUNT,\n    payload: axios.post(apiUrl, account),\n    meta: {\n      successMessage: translate('settings.messages.success')\n    }\n  });\n\n  if (Storage.session.get(`locale`)) {\n    Storage.session.remove(`locale`);\n  }\n\n  await dispatch(getSession());\n};\n\nexport const reset = () => ({\n  type: ACTION_TYPES.RESET\n});\n","import axios from 'axios';\n\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\n\nexport const ACTION_TYPES = {\n  FETCH_LOGS: 'administration/FETCH_LOGS',\n  FETCH_LOGS_CHANGE_LEVEL: 'administration/FETCH_LOGS_CHANGE_LEVEL',\n  FETCH_HEALTH: 'administration/FETCH_HEALTH',\n  FETCH_METRICS: 'administration/FETCH_METRICS',\n  FETCH_THREAD_DUMP: 'administration/FETCH_THREAD_DUMP',\n  FETCH_CONFIGURATIONS: 'administration/FETCH_CONFIGURATIONS',\n  FETCH_ENV: 'administration/FETCH_ENV',\n  FETCH_AUDITS: 'administration/FETCH_AUDITS'\n};\n\nconst initialState = {\n  loading: false,\n  errorMessage: null,\n  logs: {\n    loggers: [] as any[]\n  },\n  health: {} as any,\n  metrics: {} as any,\n  threadDump: [],\n  configuration: {\n    configProps: {} as any,\n    env: {} as any\n  },\n  audits: [],\n  totalItems: 0\n};\n\nexport type AdministrationState = Readonly<typeof initialState>;\n\n// Reducer\n\nexport default (state: AdministrationState = initialState, action): AdministrationState => {\n  switch (action.type) {\n    case REQUEST(ACTION_TYPES.FETCH_METRICS):\n    case REQUEST(ACTION_TYPES.FETCH_THREAD_DUMP):\n    case REQUEST(ACTION_TYPES.FETCH_LOGS):\n    case REQUEST(ACTION_TYPES.FETCH_CONFIGURATIONS):\n    case REQUEST(ACTION_TYPES.FETCH_ENV):\n    case REQUEST(ACTION_TYPES.FETCH_AUDITS):\n    case REQUEST(ACTION_TYPES.FETCH_HEALTH):\n      return {\n        ...state,\n        errorMessage: null,\n        loading: true\n      };\n    case FAILURE(ACTION_TYPES.FETCH_METRICS):\n    case FAILURE(ACTION_TYPES.FETCH_THREAD_DUMP):\n    case FAILURE(ACTION_TYPES.FETCH_LOGS):\n    case FAILURE(ACTION_TYPES.FETCH_CONFIGURATIONS):\n    case FAILURE(ACTION_TYPES.FETCH_ENV):\n    case FAILURE(ACTION_TYPES.FETCH_AUDITS):\n    case FAILURE(ACTION_TYPES.FETCH_HEALTH):\n      return {\n        ...state,\n        loading: false,\n        errorMessage: action.payload\n      };\n    case SUCCESS(ACTION_TYPES.FETCH_METRICS):\n      return {\n        ...state,\n        loading: false,\n        metrics: action.payload.data\n      };\n    case SUCCESS(ACTION_TYPES.FETCH_THREAD_DUMP):\n      return {\n        ...state,\n        loading: false,\n        threadDump: action.payload.data\n      };\n    case SUCCESS(ACTION_TYPES.FETCH_LOGS):\n      return {\n        ...state,\n        loading: false,\n        logs: {\n          loggers: action.payload.data\n        }\n      };\n    case SUCCESS(ACTION_TYPES.FETCH_CONFIGURATIONS):\n      return {\n        ...state,\n        loading: false,\n        configuration: {\n          ...state.configuration,\n          configProps: action.payload.data\n        }\n      };\n    case SUCCESS(ACTION_TYPES.FETCH_ENV):\n      return {\n        ...state,\n        loading: false,\n        configuration: {\n          ...state.configuration,\n          env: action.payload.data\n        }\n      };\n    case SUCCESS(ACTION_TYPES.FETCH_AUDITS):\n      return {\n        ...state,\n        loading: false,\n        audits: action.payload.data,\n        totalItems: action.payload.headers['x-total-count']\n      };\n    case SUCCESS(ACTION_TYPES.FETCH_HEALTH):\n      return {\n        ...state,\n        loading: false,\n        health: action.payload.data\n      };\n    default:\n      return state;\n  }\n};\n\n// Actions\n\nexport const systemHealth = () => ({\n  type: ACTION_TYPES.FETCH_HEALTH,\n  payload: axios.get('management/health')\n});\n\nexport const systemMetrics = () => ({\n  type: ACTION_TYPES.FETCH_METRICS,\n  payload: axios.get('management/jhi-metrics')\n});\n\nexport const systemThreadDump = () => ({\n  type: ACTION_TYPES.FETCH_THREAD_DUMP,\n  payload: axios.get('management/threaddump')\n});\n\nexport const getLoggers = () => ({\n  type: ACTION_TYPES.FETCH_LOGS,\n  payload: axios.get('management/logs')\n});\n\nexport const changeLogLevel = (name, level) => {\n  const body = {\n    level,\n    name\n  };\n  return async dispatch => {\n    await dispatch({\n      type: ACTION_TYPES.FETCH_LOGS_CHANGE_LEVEL,\n      payload: axios.put('management/logs', body)\n    });\n    dispatch(getLoggers());\n  };\n};\n\nexport const getConfigurations = () => ({\n  type: ACTION_TYPES.FETCH_CONFIGURATIONS,\n  payload: axios.get('management/configprops')\n});\n\nexport const getEnv = () => ({\n  type: ACTION_TYPES.FETCH_ENV,\n  payload: axios.get('management/env')\n});\n\nexport const getAudits = (page, size, sort, fromDate, toDate) => {\n  let requestUrl = `management/audits${sort ? `?page=${page}&size=${size}&sort=${sort}` : ''}`;\n  if (fromDate) {\n    requestUrl += `&fromDate=${fromDate}`;\n  }\n  if (toDate) {\n    requestUrl += `&toDate=${toDate}`;\n  }\n  return {\n    type: ACTION_TYPES.FETCH_AUDITS,\n    payload: axios.get(requestUrl)\n  };\n};\n","import axios from 'axios';\nimport { ICrudGetAction, ICrudGetAllAction, ICrudPutAction, ICrudDeleteAction } from 'react-jhipster';\n\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\nimport { IUser, defaultValue } from 'app/shared/model/user.model';\n\nexport const ACTION_TYPES = {\n  FETCH_ROLES: 'userManagement/FETCH_ROLES',\n  FETCH_USERS: 'userManagement/FETCH_USERS',\n  FETCH_USER: 'userManagement/FETCH_USER',\n  CREATE_USER: 'userManagement/CREATE_USER',\n  UPDATE_USER: 'userManagement/UPDATE_USER',\n  DELETE_USER: 'userManagement/DELETE_USER',\n  RESET: 'userManagement/RESET'\n};\n\nconst initialState = {\n  loading: false,\n  errorMessage: null,\n  users: [] as ReadonlyArray<IUser>,\n  authorities: [] as any[],\n  user: defaultValue,\n  updating: false,\n  updateSuccess: false,\n  totalItems: 0\n};\n\nexport type UserManagementState = Readonly<typeof initialState>;\n\n// Reducer\nexport default (state: UserManagementState = initialState, action): UserManagementState => {\n  switch (action.type) {\n    case REQUEST(ACTION_TYPES.FETCH_ROLES):\n      return {\n        ...state\n      };\n    case REQUEST(ACTION_TYPES.FETCH_USERS):\n    case REQUEST(ACTION_TYPES.FETCH_USER):\n      return {\n        ...state,\n        errorMessage: null,\n        updateSuccess: false,\n        loading: true\n      };\n    case REQUEST(ACTION_TYPES.CREATE_USER):\n    case REQUEST(ACTION_TYPES.UPDATE_USER):\n    case REQUEST(ACTION_TYPES.DELETE_USER):\n      return {\n        ...state,\n        errorMessage: null,\n        updateSuccess: false,\n        updating: true\n      };\n    case FAILURE(ACTION_TYPES.FETCH_USERS):\n    case FAILURE(ACTION_TYPES.FETCH_USER):\n    case FAILURE(ACTION_TYPES.FETCH_ROLES):\n    case FAILURE(ACTION_TYPES.CREATE_USER):\n    case FAILURE(ACTION_TYPES.UPDATE_USER):\n    case FAILURE(ACTION_TYPES.DELETE_USER):\n      return {\n        ...state,\n        loading: false,\n        updating: false,\n        updateSuccess: false,\n        errorMessage: action.payload\n      };\n    case SUCCESS(ACTION_TYPES.FETCH_ROLES):\n      return {\n        ...state,\n        authorities: action.payload.data\n      };\n    case SUCCESS(ACTION_TYPES.FETCH_USERS):\n      return {\n        ...state,\n        loading: false,\n        users: action.payload.data,\n        totalItems: action.payload.headers['x-total-count']\n      };\n    case SUCCESS(ACTION_TYPES.FETCH_USER):\n      return {\n        ...state,\n        loading: false,\n        user: action.payload.data\n      };\n    case SUCCESS(ACTION_TYPES.CREATE_USER):\n    case SUCCESS(ACTION_TYPES.UPDATE_USER):\n      return {\n        ...state,\n        updating: false,\n        updateSuccess: true,\n        user: action.payload.data\n      };\n    case SUCCESS(ACTION_TYPES.DELETE_USER):\n      return {\n        ...state,\n        updating: false,\n        updateSuccess: true,\n        user: defaultValue\n      };\n    case ACTION_TYPES.RESET:\n      return {\n        ...initialState\n      };\n    default:\n      return state;\n  }\n};\n\nconst apiUrl = 'api/users';\n// Actions\nexport const getUsers: ICrudGetAllAction<IUser> = (page, size, sort) => {\n  const requestUrl = `${apiUrl}${sort ? `?page=${page}&size=${size}&sort=${sort}` : ''}`;\n  return {\n    type: ACTION_TYPES.FETCH_USERS,\n    payload: axios.get<IUser>(requestUrl)\n  };\n};\n\nexport const getRoles = () => ({\n  type: ACTION_TYPES.FETCH_ROLES,\n  payload: axios.get(`${apiUrl}/authorities`)\n});\n\nexport const getUser: ICrudGetAction<IUser> = id => {\n  const requestUrl = `${apiUrl}/${id}`;\n  return {\n    type: ACTION_TYPES.FETCH_USER,\n    payload: axios.get<IUser>(requestUrl)\n  };\n};\n\nexport const createUser: ICrudPutAction<IUser> = user => async dispatch => {\n  const result = await dispatch({\n    type: ACTION_TYPES.CREATE_USER,\n    payload: axios.post(apiUrl, user)\n  });\n  dispatch(getUsers());\n  return result;\n};\n\nexport const updateUser: ICrudPutAction<IUser> = user => async dispatch => {\n  const result = await dispatch({\n    type: ACTION_TYPES.UPDATE_USER,\n    payload: axios.put(apiUrl, user)\n  });\n  dispatch(getUsers());\n  return result;\n};\n\nexport const deleteUser: ICrudDeleteAction<IUser> = id => async dispatch => {\n  const requestUrl = `${apiUrl}/${id}`;\n  const result = await dispatch({\n    type: ACTION_TYPES.DELETE_USER,\n    payload: axios.delete(requestUrl)\n  });\n  dispatch(getUsers());\n  return result;\n};\n\nexport const reset = () => ({\n  type: ACTION_TYPES.RESET\n});\n","\nvar content = require(\"!!../../../../../../node_modules/css-loader/index.js!./home.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../../node_modules/css-loader/index.js!./home.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../../node_modules/css-loader/index.js!./home.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import './home.css';\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Storage, Translate } from 'react-jhipster';\nimport { connect } from 'react-redux';\nimport { Row, Col, Alert } from 'reactstrap';\n\nimport { IRootState } from 'app/shared/reducers';\nimport { getSession } from 'app/shared/reducers/authentication';\n\nexport interface IHomeProp extends StateProps, DispatchProps {}\n\nexport class Home extends React.Component<IHomeProp> {\n  componentDidMount() {\n    this.props.getSession();\n  }\n\n  render() {\n    const { account } = this.props;\n    return (\n      <Row>\n        <Col md=\"9\">\n          <h2>\n            <Translate contentKey=\"home.title\">Welcome, Java Hipster!</Translate>\n          </h2>\n          <p className=\"lead\">\n            <Translate contentKey=\"home.subtitle\">This is your homepage</Translate>\n          </p>\n          {account && account.login ? (\n            <div>\n              <Alert color=\"success\">\n                <Translate contentKey=\"home.logged.message\" interpolate={{ username: account.firstName + ' ' + account.lastName }}>\n                  You are logged in as user {account.firstName + ' ' + account.lastName}.\n                </Translate>\n              </Alert>\n            </div>\n          ) : (\n            <div>\n              <Alert color=\"warning\">\n                <Translate contentKey=\"global.messages.info.authenticated.prefix\">If you want to </Translate>\n                <Link to=\"/login\" className=\"alert-link\">\n                  <Translate contentKey=\"global.messages.info.authenticated.link\"> sign in</Translate>\n                </Link>\n                <Translate contentKey=\"global.messages.info.authenticated.suffix\">\n                  , you can try the default accounts:\n                  <br />- Administrator (login=&quot;admin&quot; and password=&quot;admin&quot;)\n                  <br />- User (login=&quot;user&quot; and password=&quot;user&quot;).\n                </Translate>\n              </Alert>\n\n              <Alert color=\"warning\">\n                <Translate contentKey=\"global.messages.info.register.noaccount\">You do not have an account yet?</Translate>\n                &nbsp;\n                <Link to=\"/register\" className=\"alert-link\">\n                  <Translate contentKey=\"global.messages.info.register.link\">Register a new account</Translate>\n                </Link>\n              </Alert>\n            </div>\n          )}\n          <p>\n            <Translate contentKey=\"home.question\">If you have any question on JHipster:</Translate>\n          </p>\n\n          <ul>\n            <li>\n              <a href=\"https://www.jhipster.tech/\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <Translate contentKey=\"home.link.homepage\">JHipster homepage</Translate>\n              </a>\n            </li>\n            <li>\n              <a href=\"http://stackoverflow.com/tags/jhipster/info\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <Translate contentKey=\"home.link.stackoverflow\">JHipster on Stack Overflow</Translate>\n              </a>\n            </li>\n            <li>\n              <a href=\"https://github.com/jhipster/generator-jhipster/issues?state=open\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <Translate contentKey=\"home.link.bugtracker\">JHipster bug tracker</Translate>\n              </a>\n            </li>\n            <li>\n              <a href=\"https://gitter.im/jhipster/generator-jhipster\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <Translate contentKey=\"home.link.chat\">JHipster public chat room</Translate>\n              </a>\n            </li>\n            <li>\n              <a href=\"https://twitter.com/java_hipster\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <Translate contentKey=\"home.link.follow\">follow @java_hipster on Twitter</Translate>\n              </a>\n            </li>\n          </ul>\n\n          <p>\n            <Translate contentKey=\"home.like\">If you like JHipster, do not forget to give us a star on</Translate>{' '}\n            <a href=\"https://github.com/jhipster/generator-jhipster\" target=\"_blank\" rel=\"noopener noreferrer\">\n              Github\n            </a>\n            !\n          </p>\n        </Col>\n        <Col md=\"3\" className=\"pad\">\n          <span className=\"hipster rounded\" />\n        </Col>\n      </Row>\n    );\n  }\n}\n\nconst mapStateToProps = storeState => ({\n  account: storeState.authentication.account,\n  isAuthenticated: storeState.authentication.isAuthenticated\n});\n\nconst mapDispatchToProps = { getSession };\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Home);\n","import React from 'react';\nimport { Translate, translate } from 'react-jhipster';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Label, Alert, Row, Col } from 'reactstrap';\nimport { AvForm, AvField, AvGroup, AvInput } from 'availity-reactstrap-validation';\nimport { Link } from 'react-router-dom';\n\nexport interface ILoginModalProps {\n  showModal: boolean;\n  loginError: boolean;\n  handleLogin: Function;\n  handleClose: Function;\n}\n\nclass LoginModal extends React.Component<ILoginModalProps> {\n  handleSubmit = (event, errors, { username, password, rememberMe }) => {\n    const { handleLogin } = this.props;\n    handleLogin(username, password, rememberMe);\n  };\n/*\n  handleSubmitFacebook = (email, id, name, pictureurl) => {\n    const { handleLoginFacebook } = this.props;\n    handleLoginFacebook(email, id, name, pictureurl);\n  };\n\n  handleSubmitGoogle = (email, id, name, pictureurl) => {\n    const { handleLoginGoogle } = this.props;\n    handleLoginGoogle(email, id, name, pictureurl);\n  };*/\n\n  render() {\n    const { loginError, handleClose } = this.props;\n\n    return (\n      <Modal isOpen={this.props.showModal} toggle={handleClose} backdrop=\"static\" id=\"login-page\" autoFocus={false}>\n        <AvForm onSubmit={this.handleSubmit}>\n          <ModalHeader id=\"login-title\" toggle={handleClose}>\n            <Translate contentKey=\"login.title\">Sign in</Translate>\n          </ModalHeader>\n          <ModalBody>\n            <Row>\n              <Col md=\"12\">\n                {loginError ? (\n                  <Alert color=\"danger\">\n                    <Translate contentKey=\"login.messages.error.authentication\">\n                      <strong>Failed to sign in!</strong> Please check your credentials and try again.\n                    </Translate>\n                  </Alert>\n                ) : null}\n              </Col>\n              <Col md=\"12\">\n                <AvField\n                  name=\"username\"\n                  label={translate('global.form.username')}\n                  placeholder={translate('global.form.username.placeholder')}\n                  required\n                  errorMessage=\"Username cannot be empty!\"\n                  autoFocus\n                />\n                <AvField\n                  name=\"password\"\n                  type=\"password\"\n                  label={translate('login.form.password')}\n                  placeholder={translate('login.form.password.placeholder')}\n                  required\n                  errorMessage=\"Password cannot be empty!\"\n                />\n                <AvGroup check inline>\n                  <Label className=\"form-check-label\">\n                    <AvInput type=\"checkbox\" name=\"rememberMe\" /> <Translate contentKey=\"login.form.rememberme\">Remember me</Translate>\n                  </Label>\n                </AvGroup>\n              </Col>\n             {/* <Col md=\"12\">\n                <AvGroup>\n                  <div className=\"mt-1\">\n                    &nbsp;\n                    <Facebook showModal={false} loginError={loginError} actionLogin={this.handleSubmitFacebook} handleClose={handleClose} />\n                  </div>\n\n                  <div className=\"mt-1\">\n                    &nbsp;\n                    <GLogin showModal={false} loginError={loginError} handleClose={handleClose} actionLogin={this.handleSubmitGoogle} />\n                  </div>\n                </AvGroup>\n              </Col>*/}\n            </Row>\n            <div className=\"mt-1\">&nbsp;</div>\n            <Alert color=\"warning\">\n              <Link to=\"/reset/request\">\n                <Translate contentKey=\"login.password.forgot\">Did you forget your password?</Translate>\n              </Link>\n            </Alert>\n            <Alert color=\"warning\">\n              <span>\n                <Translate contentKey=\"global.messages.info.register.noaccount\">You don't have an account yet?</Translate>\n              </span>{' '}\n              <Link to=\"/register\">\n                <Translate contentKey=\"global.messages.info.register.link\">Register a new account</Translate>\n              </Link>\n            </Alert>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"secondary\" onClick={handleClose} tabIndex=\"1\">\n              <Translate contentKey=\"entity.action.cancel\">Cancel</Translate>\n            </Button>{' '}\n            <Button color=\"primary\" type=\"submit\">\n              <Translate contentKey=\"login.form.button\">Sign in</Translate>\n            </Button>\n          </ModalFooter>\n        </AvForm>\n      </Modal>\n    );\n  }\n}\n\nexport default LoginModal;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect, RouteComponentProps } from 'react-router-dom';\n\nimport { IRootState } from 'app/shared/reducers';\nimport { login } from 'app/shared/reducers/authentication';\nimport LoginModal from './login-modal';\n\nexport interface ILoginProps extends StateProps, DispatchProps, RouteComponentProps<{}> {}\n\nexport interface ILoginState {\n  showModal: boolean;\n}\n\nexport class Login extends React.Component<ILoginProps, ILoginState> {\n  state: ILoginState = {\n    showModal: this.props.showModal\n  };\n\n  componentDidUpdate(prevProps: ILoginProps, prevState) {\n    if (this.props !== prevProps) {\n      this.setState({ showModal: this.props.showModal });\n    }\n  }\n/*\n\n      handleLoginFacebook = (email, id, username, picture) => {\n        this.props.loginfacebook(email, id, username, picture);\n      };\n\n      handleLoginGoogle = (email, id, username, picture) => {\n        this.props.logingoogle(email, id, username, picture);\n      };\n    */\n\n  handleLogin = (username, password, rememberMe = false) => {\n    this.props.login(username, password, rememberMe);\n  }\n\n  handleClose = () => {\n    this.setState({ showModal: false });\n  };\n\n  render() {\n    const { location, isAuthenticated } = this.props;\n    const { from } = location.state || { from: { pathname: '/', search: location.search } };\n    const { showModal } = this.state;\n    if (isAuthenticated) {\n      return <Redirect to={from} />;\n    }\n    return (\n        <LoginModal\n            showModal={showModal}\n            loginError={this.props.loginError}\n            handleLogin={this.handleLogin}\n            handleClose={this.handleClose}\n          /*  handleLoginFacebook={this.handleLoginFacebook}\n            handleLoginGoogle={this.handleLoginGoogle}*/\n        />\n    );\n  }\n}\n\nconst mapStateToProps = ({ authentication }: IRootState) => ({\n  isAuthenticated: authentication.isAuthenticated,\n  loginError: authentication.loginError,\n  showModal: authentication.showModalLogin\n});\n\nconst mapDispatchToProps = {\n  login/*,\n  loginfacebook,\n  logingoogle*/\n};\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Login);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { IRootState } from 'app/shared/reducers';\nimport { logout } from 'app/shared/reducers/authentication';\n\nexport interface ILogoutProps extends StateProps, DispatchProps {\n  idToken: string;\n  logoutUrl: string;\n}\n\nexport class Logout extends React.Component<ILogoutProps> {\n  componentDidMount() {\n    this.props.logout();\n  }\n\n  render() {\n    const logoutUrl = this.props.logoutUrl;\n    if (logoutUrl) {\n      // if Keycloak, logoutUrl has protocol/openid-connect in it\n      window.location.href =\n        logoutUrl.indexOf('/protocol') > -1\n          ? logoutUrl + '?redirect_uri=' + window.location.origin\n          : logoutUrl + '?id_token_hint=' + this.props.idToken + '&post_logout_redirect_uri=' + window.location.origin;\n    }\n\n    return (\n      <div className=\"p-5\">\n        <h4>Logged out successfully!</h4>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (storeState: IRootState) => ({\n  logoutUrl: storeState.authentication.logoutUrl,\n  idToken: storeState.authentication.idToken\n});\n\nconst mapDispatchToProps = { logout };\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Logout);\n","import React from 'react';\nimport { Switch } from 'react-router-dom';\nimport Loadable from 'react-loadable';\n\nimport Login from 'app/modules/login/login';\nimport Register from 'app/modules/account/register/register';\nimport Activate from 'app/modules/account/activate/activate';\nimport PasswordResetInit from 'app/modules/account/password-reset/init/password-reset-init';\nimport PasswordResetFinish from 'app/modules/account/password-reset/finish/password-reset-finish';\nimport Logout from 'app/modules/login/logout';\nimport Home from 'app/modules/home/home';\nimport Entities from 'app/entities';\nimport PrivateRoute from 'app/shared/auth/private-route';\nimport ErrorBoundaryRoute from 'app/shared/error/error-boundary-route';\nimport { AUTHORITIES } from 'app/config/constants';\n\n// tslint:disable:space-in-parens\nconst Account = Loadable({\n  loader: () => import(/* webpackChunkName: \"account\" */ 'app/modules/account'),\n  loading: () => <div>loading ...</div>\n});\n\nconst Admin = Loadable({\n  loader: () => import(/* webpackChunkName: \"administration\" */ 'app/modules/administration'),\n  loading: () => <div>loading ...</div>\n});\n// tslint:enable\n\nconst Routes = () => (\n  <div className=\"view-routes\">\n    <ErrorBoundaryRoute path=\"/login\" component={Login} />\n    <Switch>\n      <ErrorBoundaryRoute path=\"/logout\" component={Logout} />\n      <ErrorBoundaryRoute path=\"/register\" component={Register} />\n      <ErrorBoundaryRoute path=\"/activate/:key?\" component={Activate} />\n      <ErrorBoundaryRoute path=\"/reset/request\" component={PasswordResetInit} />\n      <ErrorBoundaryRoute path=\"/reset/finish/:key?\" component={PasswordResetFinish} />\n      <PrivateRoute path=\"/admin\" component={Admin} hasAnyAuthorities={[AUTHORITIES.ADMIN]} />\n      <PrivateRoute path=\"/account\" component={Account} hasAnyAuthorities={[AUTHORITIES.ADMIN, AUTHORITIES.USER]} />\n      <PrivateRoute path=\"/entity\" component={Entities} hasAnyAuthorities={[AUTHORITIES.USER]} />\n      <ErrorBoundaryRoute path=\"/\" component={Home} />\n    </Switch>\n  </div>\n);\n\nexport default Routes;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Redirect, RouteProps } from 'react-router-dom';\nimport { Translate } from 'react-jhipster';\nimport { IRootState } from 'app/shared/reducers';\nimport ErrorBoundary from 'app/shared/error/error-boundary';\n\ninterface IOwnProps extends RouteProps {\n  hasAnyAuthorities?: string[];\n}\n\nexport interface IPrivateRouteProps extends IOwnProps, StateProps {}\n\nexport const PrivateRouteComponent = ({\n  component: Component,\n  isAuthenticated,\n  sessionHasBeenFetched,\n  isAuthorized,\n  hasAnyAuthorities = [],\n  ...rest\n}: IPrivateRouteProps) => {\n  const checkAuthorities = props =>\n    isAuthorized ? (\n      <ErrorBoundary>\n        <Component {...props} />\n      </ErrorBoundary>\n    ) : (\n      <div className=\"insufficient-authority\">\n        <div className=\"alert alert-danger\">\n          <Translate contentKey=\"error.http.403\">You are not authorized to access this page.</Translate>\n        </div>\n      </div>\n    );\n\n  const renderRedirect = props => {\n    if (!sessionHasBeenFetched) {\n      return <div />;\n    } else {\n      return isAuthenticated ? (\n        checkAuthorities(props)\n      ) : (\n        <Redirect\n          to={{\n            pathname: '/login',\n            search: props.location.search,\n            state: { from: props.location }\n          }}\n        />\n      );\n    }\n  };\n\n  if (!Component) throw new Error(`A component needs to be specified for private route for path ${(rest as any).path}`);\n\n  return <Route {...rest} render={renderRedirect} />;\n};\n\nexport const hasAnyAuthority = (authorities: string[], hasAnyAuthorities: string[]) => {\n  if (authorities && authorities.length !== 0) {\n    if (hasAnyAuthorities.length === 0) {\n      return true;\n    }\n    return hasAnyAuthorities.some(auth => authorities.includes(auth));\n  }\n  return false;\n};\n\nconst mapStateToProps = (\n  { authentication: { isAuthenticated, account, sessionHasBeenFetched } }: IRootState,\n  { hasAnyAuthorities = [] }: IOwnProps\n) => ({\n  isAuthenticated,\n  isAuthorized: hasAnyAuthority(account.authorities, hasAnyAuthorities),\n  sessionHasBeenFetched\n});\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\n\n/**\n * A route wrapped in an authentication check so that routing happens only when you are authenticated.\n * Accepts same props as React router Route.\n * The route also checks for authorization if hasAnyAuthorities is specified.\n */\nexport const PrivateRoute = connect<StateProps, undefined, IOwnProps>(\n  mapStateToProps,\n  null,\n  null,\n  { pure: false }\n)(PrivateRouteComponent);\n\nexport default PrivateRoute;\n","import React from 'react';\nimport { Route, RouteProps } from 'react-router-dom';\nimport ErrorBoundary from 'app/shared/error/error-boundary';\n\nexport const ErrorBoundaryRoute = ({ component: Component, ...rest }: RouteProps) => {\n  const encloseInErrorBoundary = props => (\n    <ErrorBoundary>\n      <Component {...props} />\n    </ErrorBoundary>\n  );\n\n  if (!Component) throw new Error(`A component needs to be specified for path ${(rest as any).path}`);\n\n  return <Route {...rest} render={encloseInErrorBoundary} />;\n};\n\nexport default ErrorBoundaryRoute;\n","import React from 'react';\n\ninterface IErrorBoundaryProps {\n  readonly children: JSX.Element | JSX.Element[];\n}\n\ninterface IErrorBoundaryState {\n  readonly error: any;\n  readonly errorInfo: any;\n}\n\nclass ErrorBoundary extends React.Component<IErrorBoundaryProps, IErrorBoundaryState> {\n  readonly state: IErrorBoundaryState = { error: undefined, errorInfo: undefined };\n\n  componentDidCatch(error, errorInfo) {\n    this.setState({\n      error,\n      errorInfo\n    });\n  }\n\n  render() {\n    const { error, errorInfo } = this.state;\n    if (errorInfo) {\n      const errorDetails =\n        process.env.NODE_ENV === 'development' ? (\n          <details className=\"preserve-space\">\n            {error && error.toString()}\n            <br />\n            {errorInfo.componentStack}\n          </details>\n        ) : (\n          undefined\n        );\n      return (\n        <div>\n          <h2 className=\"error\">An unexpected error has occurred.</h2>\n          {errorDetails}\n        </div>\n      );\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","\nvar content = require(\"!!../../../../../../../node_modules/css-loader/index.js!./footer.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../../../node_modules/css-loader/index.js!./footer.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../../../node_modules/css-loader/index.js!./footer.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import './footer.css';\n\nimport React from 'react';\nimport { Translate } from 'react-jhipster';\nimport { Col, Row } from 'reactstrap';\n\nconst Footer = props => (\n  <div className=\"footer page-content\">\n    <Row>\n      <Col md=\"12\">\n        <p>\n          <Translate contentKey=\"footer\">Your footer</Translate>\n        </p>\n      </Col>\n    </Row>\n  </div>\n);\n\nexport default Footer;\n","import React from 'react';\nimport { Translate } from 'react-jhipster';\n\nimport { UncontrolledDropdown, DropdownToggle, DropdownMenu, NavItem, NavLink, NavbarBrand } from 'reactstrap';\nimport { NavLink as Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport appConfig from 'app/config/constants';\n\nexport const NavDropdown = props => (\n  <UncontrolledDropdown nav inNavbar id={props.id}>\n    <DropdownToggle nav caret className=\"d-flex align-items-center\">\n      <FontAwesomeIcon icon={props.icon} />\n      <span>{props.name}</span>\n    </DropdownToggle>\n    <DropdownMenu right style={props.style}>\n      {props.children}\n    </DropdownMenu>\n  </UncontrolledDropdown>\n);\n\nexport const BrandIcon = props => (\n  <div {...props} className=\"brand-icon\">\n    <img src=\"content/images/logo-jhipster.png\" alt=\"Logo\" />\n  </div>\n);\n\nexport const Brand = props => (\n  <NavbarBrand tag={Link} to=\"/\" className=\"brand-logo\">\n    <BrandIcon />\n    <span className=\"brand-title\">\n      <Translate contentKey=\"global.title\">Sico</Translate>\n    </span>\n    <span className=\"navbar-version\">{appConfig.VERSION}</span>\n  </NavbarBrand>\n);\n\nexport const Home = props => (\n  <NavItem>\n    <NavLink tag={Link} to=\"/\" className=\"d-flex align-items-center\">\n      <FontAwesomeIcon icon=\"home\" />\n      <span>\n        <Translate contentKey=\"global.menu.home\">Home</Translate>\n      </span>\n    </NavLink>\n  </NavItem>\n);\n","\nvar content = require(\"!!../../../../../../../node_modules/css-loader/index.js!./header.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../../../node_modules/css-loader/index.js!./header.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../../../node_modules/css-loader/index.js!./header.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import './header.css';\n\nimport React from 'react';\nimport { Translate, Storage } from 'react-jhipster';\nimport { Navbar, Nav, NavbarToggler, NavbarBrand, Collapse } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { NavLink as Link } from 'react-router-dom';\nimport LoadingBar from 'react-redux-loading-bar';\n\nimport { Home, Brand } from './header-components';\nimport { PrestamosMenu, AdminMenu, EntitiesMenu, AccountMenu, LocaleMenu } from './menus';\n\nexport interface IHeaderProps {\n  isAuthenticated: boolean;\n  isAdmin: boolean;\n  ribbonEnv: string;\n  isInProduction: boolean;\n  isSwaggerEnabled: boolean;\n  currentLocale: string;\n  onLocaleChange: Function;\n}\n\nexport interface IHeaderState {\n  menuOpen: boolean;\n}\n\nexport default class Header extends React.Component<IHeaderProps, IHeaderState> {\n  state: IHeaderState = {\n    menuOpen: false\n  };\n\n  handleLocaleChange = event => {\n    const langKey = event.target.value;\n    Storage.session.set('locale', langKey);\n    this.props.onLocaleChange(langKey);\n  };\n\n  renderDevRibbon = () =>\n    this.props.isInProduction === false ? (\n      <div className=\"ribbon dev\">\n        <a href=\"\">\n          <Translate contentKey={`global.ribbon.${this.props.ribbonEnv}`} />\n        </a>\n      </div>\n    ) : null;\n\n  toggleMenu = () => {\n    this.setState({ menuOpen: !this.state.menuOpen });\n  };\n\n  render() {\n    const { currentLocale, isAuthenticated, isAdmin, isSwaggerEnabled, isInProduction } = this.props;\n\n    /* jhipster-needle-add-element-to-menu - JHipster will add new menu items here */\n\n    return (\n      <div id=\"app-header\">\n        {this.renderDevRibbon()}\n        <LoadingBar className=\"loading-bar\" />\n        <Navbar dark expand=\"sm\" fixed=\"top\" className=\"jh-navbar\">\n          <NavbarToggler aria-label=\"Menu\" onClick={this.toggleMenu} />\n          <Brand />\n          <Collapse isOpen={this.state.menuOpen} navbar>\n            <Nav id=\"header-tabs\" className=\"ml-auto\" navbar>\n              <Home />\n              <PrestamosMenu isAuthenticated={isAuthenticated} />\n              {isAuthenticated && <EntitiesMenu />}\n              {isAuthenticated && isAdmin && <AdminMenu showSwagger={isSwaggerEnabled} />}\n              <LocaleMenu currentLocale={currentLocale} onClick={this.handleLocaleChange} />\n              <AccountMenu isAuthenticated={isAuthenticated} />\n            </Nav>\n          </Collapse>\n        </Navbar>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { DropdownItem } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { NavLink as Link } from 'react-router-dom';\nimport { Translate, translate } from 'react-jhipster';\nimport { NavDropdown } from '../header-components';\n\nconst accountMenuItemsAuthenticated = (\n  <>\n    <DropdownItem tag={Link} to=\"/account/clienteregister-update\">\n      <FontAwesomeIcon icon=\"wrench\" fixedWidth /> <Translate contentKey=\"global.menu.account.settings\">Settings</Translate>\n    </DropdownItem>\n    <DropdownItem tag={Link} to=\"/account/password\">\n      <FontAwesomeIcon icon=\"clock\" fixedWidth /> <Translate contentKey=\"global.menu.account.password\">Password</Translate>\n    </DropdownItem>\n    <DropdownItem tag={Link} to=\"/logout\">\n      <FontAwesomeIcon icon=\"sign-out-alt\" fixedWidth /> <Translate contentKey=\"global.menu.account.logout\">Sign out</Translate>\n    </DropdownItem>\n  </>\n);\n\nconst accountMenuItems = (\n  <>\n    <DropdownItem id=\"login-item\" tag={Link} to=\"/login\">\n      <FontAwesomeIcon icon=\"sign-in-alt\" fixedWidth /> <Translate contentKey=\"global.menu.account.login\">Sign in</Translate>\n    </DropdownItem>\n    <DropdownItem tag={Link} to=\"/register\">\n      <FontAwesomeIcon icon=\"sign-in-alt\" fixedWidth /> <Translate contentKey=\"global.menu.account.register\">Register</Translate>\n    </DropdownItem>\n  </>\n);\n\nexport const AccountMenu = ({ isAuthenticated = false }) => (\n  <NavDropdown icon=\"user\" name={translate('global.menu.account.main')} id=\"account-menu\">\n    {isAuthenticated ? accountMenuItemsAuthenticated : accountMenuItems}\n  </NavDropdown>\n);\n\nexport default AccountMenu;\n","import React from 'react';\nimport { DropdownItem } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { NavLink as Link } from 'react-router-dom';\nimport { NavDropdown } from '../header-components';\nimport { Translate, translate } from 'react-jhipster';\n\nconst adminMenuItems = (\n  <>\n    <DropdownItem tag={Link} to=\"/admin/user-management\">\n      <FontAwesomeIcon icon=\"user\" fixedWidth /> <Translate contentKey=\"global.menu.admin.userManagement\">User management</Translate>\n    </DropdownItem>\n    <DropdownItem tag={Link} to=\"/admin/metrics\">\n      <FontAwesomeIcon icon=\"tachometer-alt\" fixedWidth /> <Translate contentKey=\"global.menu.admin.metrics\">Metrics</Translate>\n    </DropdownItem>\n    <DropdownItem tag={Link} to=\"/admin/health\">\n      <FontAwesomeIcon icon=\"heart\" fixedWidth /> <Translate contentKey=\"global.menu.admin.health\">Health</Translate>\n    </DropdownItem>\n    <DropdownItem tag={Link} to=\"/admin/configuration\">\n      <FontAwesomeIcon icon=\"list\" fixedWidth /> <Translate contentKey=\"global.menu.admin.configuration\">Configuration</Translate>\n    </DropdownItem>\n    <DropdownItem tag={Link} to=\"/admin/audits\">\n      <FontAwesomeIcon icon=\"bell\" fixedWidth /> <Translate contentKey=\"global.menu.admin.audits\">Audits</Translate>\n    </DropdownItem>\n    {/* jhipster-needle-add-element-to-admin-menu - JHipster will add entities to the admin menu here */}\n    <DropdownItem tag={Link} to=\"/admin/logs\">\n      <FontAwesomeIcon icon=\"tasks\" fixedWidth /> <Translate contentKey=\"global.menu.admin.logs\">Logs</Translate>\n    </DropdownItem>\n  </>\n);\n\nconst swaggerItem = (\n  <DropdownItem tag={Link} to=\"/admin/docs\">\n    <FontAwesomeIcon icon=\"book\" fixedWidth /> <Translate contentKey=\"global.menu.admin.apidocs\">API</Translate>\n  </DropdownItem>\n);\n\nexport const AdminMenu = ({ showSwagger }) => (\n  <NavDropdown icon=\"user-plus\" name={translate('global.menu.admin.main')} style={{ width: '140%' }} id=\"admin-menu\">\n    {adminMenuItems}\n    {showSwagger && swaggerItem}\n  </NavDropdown>\n);\n\nexport default AdminMenu;\n","import React from 'react';\nimport { DropdownItem } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Translate, translate } from 'react-jhipster';\nimport { NavLink as Link } from 'react-router-dom';\nimport { NavDropdown } from '../header-components';\n\nexport const EntitiesMenu = props => (\n  // tslint:disable-next-line:jsx-self-close\n  <NavDropdown icon=\"th-list\" name={translate('global.menu.entities.main')} id=\"entity-menu\">\n    {/* <DropdownItem tag={Link} to=\"/entity/region\">\n      <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\n      &nbsp;\n      <Translate contentKey=\"global.menu.entities.region\" />\n    </DropdownItem>\n    <DropdownItem tag={Link} to=\"/entity/country\">\n      <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\n      &nbsp;\n      <Translate contentKey=\"global.menu.entities.country\" />\n    </DropdownItem>*/}\n    <DropdownItem tag={Link} to=\"/entity/department\">\n      <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\n      &nbsp;\n      <Translate contentKey=\"global.menu.entities.department\" />\n    </DropdownItem>\n    {/*<DropdownItem tag={Link} to=\"/entity/location\">\n      <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\n      &nbsp;\n      <Translate contentKey=\"global.menu.entities.location\" />\n    </DropdownItem>\n\n    <DropdownItem tag={Link} to=\"/entity/task\">\n      <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\n      &nbsp;\n      <Translate contentKey=\"global.menu.entities.task\" />\n    </DropdownItem>\n    <DropdownItem tag={Link} to=\"/entity/employee\">\n      <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\n      &nbsp;\n      <Translate contentKey=\"global.menu.entities.employee\" />\n    </DropdownItem>\n    <DropdownItem tag={Link} to=\"/entity/job\">\n      <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\n      &nbsp;\n      <Translate contentKey=\"global.menu.entities.job\" />\n    </DropdownItem>\n    <DropdownItem tag={Link} to=\"/entity/job-history\">\n      <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\n      &nbsp;\n      <Translate contentKey=\"global.menu.entities.jobHistory\" />\n    </DropdownItem>*/}\n    <DropdownItem tag={Link} to=\"/entity/banco\">\n      <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\n      &nbsp;\n      <Translate contentKey=\"global.menu.entities.banco\" />\n    </DropdownItem>\n    {/*<DropdownItem tag={Link} to=\"/entity/credit-detalle\">\n      <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\n      &nbsp;\n      <Translate contentKey=\"global.menu.entities.creditDetalle\" />\n    </DropdownItem>\n    <DropdownItem tag={Link} to=\"/entity/credit\">\n      <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\n      &nbsp;\n      <Translate contentKey=\"global.menu.entities.credit\" />\n    </DropdownItem>*/}\n    <DropdownItem tag={Link} to=\"/entity/cliente\">\n      <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\n      &nbsp;\n      <Translate contentKey=\"global.menu.entities.cliente\" />\n    </DropdownItem>\n    <DropdownItem tag={Link} to=\"/entity/clientemisdatos\">\n      <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\n      &nbsp;\n      <Translate contentKey=\"global.menu.entities.clientemisdatos\" />\n    </DropdownItem>\n\n      <DropdownItem tag={Link} to=\"/entity/token\">\n          <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\n          &nbsp;\n          <Translate contentKey=\"global.menu.entities.token\" />\n      </DropdownItem>\n    {/* jhipster-needle-add-entity-to-menu - JHipster will add entities to the menu here */}\n  </NavDropdown>\n);\n","export * from './account';\r\nexport * from './admin';\r\nexport * from './locale';\r\nexport * from './entities';\r\nexport * from './prestamos';\r\n","import React from 'react';\nimport { DropdownItem } from 'reactstrap';\nimport { NavDropdown } from '../header-components';\nimport { locales, languages } from 'app/config/translation';\n\nexport const LocaleMenu = ({ currentLocale, onClick }) =>\n  Object.keys(languages).length > 1 && (\n    <NavDropdown icon=\"flag\" name={currentLocale ? languages[currentLocale].name : undefined}>\n      {locales.map(locale => (\n        <DropdownItem key={locale} value={locale} onClick={onClick}>\n          {languages[locale].name}\n        </DropdownItem>\n      ))}\n    </NavDropdown>\n  );\n","import React from 'react';\nimport { DropdownItem } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Translate, translate } from 'react-jhipster';\nimport { NavLink as Link } from 'react-router-dom';\nimport { NavDropdown } from '../header-components';\n\nexport const PrestamosMenu = props => (\n  // tslint:disable-next-line:jsx-self-close\n  <NavDropdown icon=\"th-list\" name={translate('global.menu.prestamos.main')} id=\"prestamos-menu\">\n      <DropdownItem tag={Link} to=\"/entity/recaudador\">\n          <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\n          &nbsp;\n          <Translate contentKey=\"global.menu.entities.recaudador\" />\n      </DropdownItem>\n      <DropdownItem tag={Link} to=\"/entity/transferencias\">\n          <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\n          &nbsp;\n          <Translate contentKey=\"global.menu.entities.transferencias\" />\n      </DropdownItem>\n\n  </NavDropdown>\n);\n","\nvar content = require(\"!!../../../../../../../node_modules/css-loader/index.js!./password-strength-bar.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../../../node_modules/css-loader/index.js!./password-strength-bar.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../../../node_modules/css-loader/index.js!./password-strength-bar.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import './password-strength-bar.css';\n\nimport React from 'react';\nimport { Translate } from 'react-jhipster';\n\nexport interface IPasswordStrengthBarProps {\n  password: string;\n}\n\nexport const PasswordStrengthBar = ({ password }: IPasswordStrengthBarProps) => {\n  const colors = ['#F00', '#F90', '#FF0', '#9F0', '#0F0'];\n\n  const measureStrength = (p: string): number => {\n    let force = 0;\n    const regex = /[$-/:-?{-~!\"^_`\\[\\]]/g;\n    const flags = {\n      lowerLetters: /[a-z]+/.test(p),\n      upperLetters: /[A-Z]+/.test(p),\n      numbers: /[0-9]+/.test(p),\n      symbols: regex.test(p)\n    };\n\n    const passedMatches = Object.values(flags).filter((isMatchedFlag: boolean) => !!isMatchedFlag).length;\n\n    force += 2 * p.length + (p.length >= 10 ? 1 : 0);\n    force += passedMatches * 10;\n\n    // penalty (short password)\n    force = p.length <= 6 ? Math.min(force, 10) : force;\n\n    // penalty (poor variety of characters)\n    force = passedMatches === 1 ? Math.min(force, 10) : force;\n    force = passedMatches === 2 ? Math.min(force, 20) : force;\n    force = passedMatches === 3 ? Math.min(force, 40) : force;\n\n    return force;\n  };\n\n  const getColor = (s: number): any => {\n    let idx = 0;\n    if (s <= 10) {\n      idx = 0;\n    } else if (s <= 20) {\n      idx = 1;\n    } else if (s <= 30) {\n      idx = 2;\n    } else if (s <= 40) {\n      idx = 3;\n    } else {\n      idx = 4;\n    }\n    return { idx: idx + 1, col: colors[idx] };\n  };\n\n  const getPoints = force => {\n    const pts = [];\n    for (let i = 0; i < 5; i++) {\n      pts.push(<li key={i} className=\"point\" style={i < force.idx ? { backgroundColor: force.col } : { backgroundColor: '#DDD' }} />);\n    }\n    return pts;\n  };\n\n  const strength = getColor(measureStrength(password));\n  const points = getPoints(strength);\n\n  return (\n    <div id=\"strength\">\n      <small>\n        <Translate contentKey=\"global.messages.validate.newpassword.strength\">Password strength:</Translate>\n      </small>\n      <ul id=\"strengthBar\">{points}</ul>\n    </div>\n  );\n};\n\nexport default PasswordStrengthBar;\n","export interface IBanco {\n  id?: number;\n  bancoName?: string;\n}\n\nexport const defaultValue: Readonly<IBanco> = {};\n","import { Moment } from 'moment';\nimport { IDepartment } from 'app/shared/model/department.model';\nimport { IBanco } from 'app/shared/model/banco.model';\n\nexport const enum SEXO {\n  MASCULINO = 'MASCULINO',\n  FEMENINO = 'FEMENINO'\n}\n\nexport interface ICliente {\n  id?: number;\n  firstName?: string;\n  lastName?: string;\n  dni?: string;\n  fechaNacimiento?: Moment;\n  direccion?: string;\n  numero?: number;\n  telefono?: string;\n  mail?: string;\n  sexo?: SEXO;\n  salary?: number;\n  scoringCredit?: number;\n  department?: IDepartment;\n  numero_Cuenta?: string;\n  nro_Cbu?: string;\n  sex?: string;\n  phoneNumber?: string;\n  cuit?: string;\n  idBanco?: IBanco;\n}\n\nexport const defaultValue: Readonly<ICliente> = {};\n","import { IRegion } from 'app/shared/model/region.model';\n\nexport interface ICountry {\n  id?: number;\n  countryName?: string;\n  region?: IRegion;\n}\n\nexport const defaultValue: Readonly<ICountry> = {};\n","import { Moment } from 'moment';\nimport { ICredit } from 'app/shared/model/credit.model';\n\nexport interface ICreditDetalle {\n  id?: number;\n  nroCuota?: number;\n  fechaProgramada?: Moment;\n  fechaEjecucion?: Moment;\n  reintentos?: number;\n  ejecutada?: boolean;\n  observaciones?: string;\n  cantidadRenegociado?: number;\n  credit?: ICredit;\n}\n\nexport const defaultValue: Readonly<ICreditDetalle> = {\n  ejecutada: false\n};\n","import { Moment } from 'moment';\nimport { ICreditDetalle } from 'app/shared/model/credit-detalle.model';\n\nexport const enum Periodicidad {\n  DIARIO = 'DIARIO',\n  SEMANAL = 'SEMANAL',\n  MENSUAL = 'MENSUAL',\n  BIMENSUAL = 'BIMENSUAL',\n  SEMESTRAL = 'SEMESTRAL'\n}\n\nexport const enum TipoCobro {\n  PRESTAMO = 'PRESTAMO',\n  INSUMOINFORMATICO = 'INSUMOINFORMATICO'\n}\n\nexport interface ICredit {\n  id?: number;\n  periodicidad?: Periodicidad;\n  diaHoraEjecucion?: number;\n  tipoCobro?: TipoCobro;\n  monto?: number;\n  observaciones?: string;\n  activo?: boolean;\n  cantCuotas?: number;\n  cuotaCobrada?: number;\n  fechaCreacion?: Moment;\n  fechaInicio?: Moment;\n  fechaVencimiento?: Moment;\n  excluirFindeSemanas?: boolean;\n  porcParticipacion?: number;\n  capitalPrestamo?: number;\n  interesesPrestamos?: number;\n  cuotaPura?: number;\n  interesesCuota?: number;\n  cuotaRecuperoCapital?: number;\n  cantidadRenegociado?: number;\n  incobrable?: boolean;\n  pagoManual?: boolean;\n  esPersonal?: boolean;\n  credits?: ICreditDetalle[];\n}\n\nexport const defaultValue: Readonly<ICredit> = {\n  activo: false,\n  excluirFindeSemanas: false,\n  incobrable: false,\n  pagoManual: false,\n  esPersonal: false\n};\n","import { ICliente } from 'app/shared/model/cliente.model';\r\n\r\nexport interface IDepartment {\r\n  id?: number;\r\n  departmentName?: string;\r\n  clientes?: ICliente[];\r\n}\r\n\r\nexport const defaultValue: Readonly<IDepartment> = {};\r\n","export interface ILocation {\r\n  id?: number;\r\n  streetAddress?: string;\r\n  postalCode?: string;\r\n  city?: string;\r\n  stateProvince?: string;\r\n}\r\n\r\nexport const defaultValue: Readonly<ILocation> = {};\r\n","import { Moment } from 'moment';\nimport { IRecaudador } from 'app/shared/model/recaudador.model';\n\nexport interface IRecaudadorDetalle {\n  id?: number;\n  ejecutada?: number;\n  fechaEjecucion?: Moment;\n  fechaProgramada?: Moment;\n  nroCuota?: number;\n  observaciones?: string;\n  reintentos?: number;\n  recaudador?: IRecaudador;\n}\n\nexport const defaultValue: Readonly<IRecaudadorDetalle> = {};\n","import { Moment } from 'moment';\nimport { IRecaudadorDetalle } from 'app/shared/model/recaudador-detalle.model';\n\nexport const enum Periodicidad {\n  DIARIO = 'DIARIO',\n  SEMANAL = 'SEMANAL',\n  MENSUAL = 'MENSUAL',\n  BIMENSUAL = 'BIMENSUAL',\n  SEMESTRAL = 'SEMESTRAL'\n}\n\nexport const enum TipoCobro {\n  PRESTAMO = 'PRESTAMO',\n  INSUMOINFORMATICO = 'INSUMOINFORMATICO'\n}\n\nexport interface IRecaudador {\n  id?: number;\n  activo?: boolean;\n  cantCuotas?: number;\n  cantidadRenegociado?: number;\n  capitalPrestamo?: number;\n  cuotaCobrada?: number;\n  cuotaPura?: number;\n  cuotaRecuperoCapital?: number;\n  diaHoraEjecucion?: number;\n  esPersonal?: boolean;\n  excluirFindeSemanas?: boolean;\n  fechaCreacion?: Moment;\n  fechaInicio?: Moment;\n  fechaVencimiento?: Moment;\n  incobrable?: boolean;\n  interesesCuota?: number;\n  interesesPrestamos?: number;\n  monto?: number;\n  observaciones?: string;\n  pagoManual?: number;\n  periodicidad?: Periodicidad;\n  porcParticipacion?: number;\n  tipoCobro?: TipoCobro;\n  idCliente?: number;\n    transferido?: boolean;\n  recaudadorDetalles?: IRecaudadorDetalle[];\n}\n\nexport const defaultValue: Readonly<IRecaudador> = {\n  activo: false,\n  esPersonal: false,\n  excluirFindeSemanas: false,\n  incobrable: false\n};\n","export interface IRegion {\n  id?: number;\n  regionName?: string;\n}\n\nexport const defaultValue: Readonly<IRegion> = {};\n","export interface IToken {\n  id?: number;\n  token?: string;\n    vigenciafecha?: string;\n}\n\nexport const defaultValue: Readonly<IToken> = {};\n","import {Moment} from \"moment\";\n\nexport const enum EstadoTransferencia {\n    COMPLETA = 'COMPLETA',\n    PENDIENTE = 'PENDIENTE',\n    CANCELADA = 'CANCELADA'\n}\n\nexport interface ITransferencia {\n  id?: number;\n    nrotransferencia?: string;\n    nrocuenta?: string;\n    cuitdestinatario?: string;\n    nombre?: string;\n    nrocbu?: string;\n    fecha?: Moment;\n    estado?: EstadoTransferencia;\n    monto?: number;\n    status?: string;\n}\n\nexport const defaultValue: Readonly<ITransferencia> = {};\n","import { IBanco } from 'app/shared/model/banco.model';\r\n\r\nexport interface IUser {\r\n  id?: any;\r\n  login?: string;\r\n  firstName?: string;\r\n  lastName?: string;\r\n  email?: string;\r\n  activated?: boolean;\r\n  langKey?: string;\r\n  authorities?: any[];\r\n  createdBy?: string;\r\n  createdDate?: Date;\r\n  lastModifiedBy?: string;\r\n  lastModifiedDate?: Date;\r\n  password?: string;\r\n}\r\n\r\nexport const defaultValue: Readonly<IUser> = {\r\n  id: '',\r\n  login: '',\r\n  firstName: '',\r\n  lastName: '',\r\n  email: '',\r\n  activated: false,\r\n  langKey: '',\r\n  authorities: [],\r\n  createdBy: '',\r\n  createdDate: null,\r\n  lastModifiedBy: '',\r\n  lastModifiedDate: null,\r\n  password: ''\r\n};\r\n","/**\n * Appends REQUEST async action type\n */\n\nexport const REQUEST = actionType => `${actionType}_PENDING`;\n\n/**\n * Appends SUCCESS async action type\n */\n\nexport const SUCCESS = actionType => `${actionType}_FULFILLED`;\n\n/**\n * Appends FAILURE async action type\n */\n\nexport const FAILURE = actionType => `${actionType}_REJECTED`;\n","import axios from 'axios';\n\nimport { SUCCESS } from 'app/shared/reducers/action-type.util';\n\nexport const ACTION_TYPES = {\n  GET_PROFILE: 'applicationProfile/GET_PROFILE'\n};\n\nconst initialState = {\n  ribbonEnv: '',\n  inProduction: true,\n  isSwaggerEnabled: false\n};\n\nexport type ApplicationProfileState = Readonly<typeof initialState>;\n\nexport default (state: ApplicationProfileState = initialState, action): ApplicationProfileState => {\n  switch (action.type) {\n    case SUCCESS(ACTION_TYPES.GET_PROFILE):\n      const { data } = action.payload;\n      return {\n        ...state,\n        ribbonEnv: data['display-ribbon-on-profiles'],\n        inProduction: data.activeProfiles.includes('prod'),\n        isSwaggerEnabled: data.activeProfiles.includes('swagger')\n      };\n    default:\n      return state;\n  }\n};\n\nexport const getProfile = () => ({\n  type: ACTION_TYPES.GET_PROFILE,\n  payload: axios.get('management/info')\n});\n","import axios from 'axios';\nimport { ICrudPutAction, Storage } from 'react-jhipster';\n\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\nimport { setLocale } from 'app/shared/reducers/locale';\nimport { getUsers } from 'app/modules/administration/user-management/user-management.reducer';\nimport { IUser } from 'app/shared/model/user.model';\n\nexport const ACTION_TYPES = {\n  LOGIN: 'authentication/LOGIN',\n  GET_SESSION: 'authentication/GET_SESSION',\n  LOGOUT: 'authentication/LOGOUT',\n  CLEAR_AUTH: 'authentication/CLEAR_AUTH',\n  ERROR_MESSAGE: 'authentication/ERROR_MESSAGE'\n};\n\nconst AUTH_TOKEN_KEY = 'jhi-authenticationToken';\n\nconst initialState = {\n  loading: false,\n  isAuthenticated: false,\n  loginSuccess: false,\n  loginError: false, // Errors returned from server side\n  showModalLogin: false,\n  account: {} as any,\n  errorMessage: null as string, // Errors returned from server side\n  redirectMessage: null as string,\n  sessionHasBeenFetched: false,\n  idToken: null as string,\n  logoutUrl: null as string\n};\n\nexport type AuthenticationState = Readonly<typeof initialState>;\n\n// Reducer\n\nexport default (state: AuthenticationState = initialState, action): AuthenticationState => {\n  switch (action.type) {\n    case REQUEST(ACTION_TYPES.LOGIN):\n    case REQUEST(ACTION_TYPES.GET_SESSION):\n      return {\n        ...state,\n        loading: true\n      };\n    case FAILURE(ACTION_TYPES.LOGIN):\n      return {\n        ...initialState,\n        errorMessage: action.payload,\n        showModalLogin: true,\n        loginError: true\n      };\n    case FAILURE(ACTION_TYPES.GET_SESSION):\n      return {\n        ...state,\n        loading: false,\n        isAuthenticated: false,\n        sessionHasBeenFetched: true,\n        showModalLogin: true,\n        errorMessage: action.payload\n      };\n    case SUCCESS(ACTION_TYPES.LOGIN):\n      return {\n        ...state,\n        loading: false,\n        loginError: false,\n        showModalLogin: false,\n        loginSuccess: true\n      };\n    case ACTION_TYPES.LOGOUT:\n      return {\n        ...initialState,\n        showModalLogin: true\n      };\n    case SUCCESS(ACTION_TYPES.GET_SESSION): {\n      const isAuthenticated = action.payload && action.payload.data && action.payload.data.activated;\n      return {\n        ...state,\n        isAuthenticated,\n        loading: false,\n        sessionHasBeenFetched: true,\n        account: action.payload.data\n      };\n    }\n    case ACTION_TYPES.ERROR_MESSAGE:\n      return {\n        ...initialState,\n        showModalLogin: true,\n        redirectMessage: action.message\n      };\n    case ACTION_TYPES.CLEAR_AUTH:\n      return {\n        ...state,\n        loading: false,\n        showModalLogin: true,\n        isAuthenticated: false\n      };\n    default:\n      return state;\n  }\n};\n\nexport const displayAuthError = message => ({ type: ACTION_TYPES.ERROR_MESSAGE, message });\n\nexport const getSession = () => async (dispatch, getState) => {\n  await dispatch({\n    type: ACTION_TYPES.GET_SESSION,\n    payload: axios.get('api/account')\n  });\n\n  const { account } = getState().authentication;\n  if (account && account.langKey) {\n    const langKey = Storage.session.get('locale', account.langKey);\n    Storage.session.set('email', account.email);\n    await dispatch(setLocale(langKey));\n  }\n};\n\nexport const login = (username, password, rememberMe = false) => async (dispatch, getState) => {\n  const result = await dispatch({\n    type: ACTION_TYPES.LOGIN,\n    payload: axios.post('api/authenticate', { username, password, rememberMe })\n  });\n\n  const bearerToken = result.value.headers.authorization;\n  if (bearerToken && bearerToken.slice(0, 7) === 'Bearer ') {\n    const jwt = bearerToken.slice(7, bearerToken.length);\n    if (rememberMe) {\n      Storage.local.set(AUTH_TOKEN_KEY, jwt);\n    } else {\n      Storage.session.set(AUTH_TOKEN_KEY, jwt);\n    }\n  }\n  await dispatch(getSession());\n};\n\nexport const loginfacebook = (email, password, username, imageUrl) => async (dispatch, getState) => {\n  const result = await dispatch({\n    type: ACTION_TYPES.LOGIN,\n    payload: axios.post('api/userbyemailsocialnetwork', { email, password, username, imageUrl })\n  });\n  if (result) {\n    await dispatch(login(email, password, false));\n  }\n};\n\nexport const logingoogle = (email, password, username, imageUrl) => async (dispatch, getState) => {\n  const result = await dispatch({\n    type: ACTION_TYPES.LOGIN,\n    payload: axios.post('api/userbyemailsocialnetwork', { email, password, username, imageUrl })\n  });\n  if (result) {\n    await dispatch(login(email, password, false));\n  }\n};\n\nexport const clearAuthToken = () => {\n  if (Storage.local.get(AUTH_TOKEN_KEY)) {\n    Storage.local.remove(AUTH_TOKEN_KEY);\n  }\n  if (Storage.session.get(AUTH_TOKEN_KEY)) {\n    Storage.session.remove(AUTH_TOKEN_KEY);\n  }\n};\n\nexport const logout = () => dispatch => {\n  clearAuthToken();\n  dispatch({\n    type: ACTION_TYPES.LOGOUT\n  });\n};\n\nexport const clearAuthentication = messageKey => (dispatch, getState) => {\n  clearAuthToken();\n  dispatch(displayAuthError(messageKey));\n  dispatch({\n    type: ACTION_TYPES.CLEAR_AUTH\n  });\n};\n","import { combineReducers } from 'redux';\nimport { loadingBarReducer as loadingBar } from 'react-redux-loading-bar';\n\nimport locale, { LocaleState } from './locale';\nimport authentication, { AuthenticationState } from './authentication';\nimport applicationProfile, { ApplicationProfileState } from './application-profile';\n\nimport administration, { AdministrationState } from 'app/modules/administration/administration.reducer';\nimport userManagement, { UserManagementState } from 'app/modules/administration/user-management/user-management.reducer';\nimport register, { RegisterState } from 'app/modules/account/register/register.reducer';\nimport activate, { ActivateState } from 'app/modules/account/activate/activate.reducer';\nimport password, { PasswordState } from 'app/modules/account/password/password.reducer';\nimport settings, { SettingsState } from 'app/modules/account/settings/settings.reducer';\nimport passwordReset, { PasswordResetState } from 'app/modules/account/password-reset/password-reset.reducer';\n// prettier-ignore\nimport region, {\n  RegionState\n} from 'app/entities/region/region.reducer';\n// prettier-ignore\nimport country, {\n  CountryState\n} from 'app/entities/country/country.reducer';\n// prettier-ignore\nimport location, {\n  LocationState\n} from 'app/entities/location/location.reducer';\n// prettier-ignore\nimport department, {\n  DepartmentState\n} from 'app/entities/department/department.reducer';\n// prettier-ignore\nimport banco, {\n  BancoState\n} from 'app/entities/banco/banco.reducer';\n// prettier-ignore\nimport creditDetalle, {\n  CreditDetalleState\n} from 'app/entities/credit-detalle/credit-detalle.reducer';\n// prettier-ignore\nimport credit, {\n  CreditState\n} from 'app/entities/credit/credit.reducer';\n// prettier-ignore\nimport cliente, {\n  ClienteState\n} from 'app/entities/cliente/cliente.reducer';\n// prettier-ignore\nimport recaudador, { RecaudadorState } from 'app/entities/recaudador/recaudador.reducer';\n// prettier-ignore\nimport recaudadorDetalle, { RecaudadorDetalleState } from 'app/entities/recaudador-detalle/recaudador-detalle.reducer';\n\nimport token, { TokenState } from 'app/entities/token/token.reducer';\nimport transferencia, { TransferenciaState } from \"app/entities/transferencia/transferencia.reducer\";\n/* jhipster-needle-add-reducer-import - JHipster will add reducer here */\n\nexport interface IRootState {\n  readonly authentication: AuthenticationState;\n  readonly locale: LocaleState;\n  readonly applicationProfile: ApplicationProfileState;\n  readonly administration: AdministrationState;\n  readonly userManagement: UserManagementState;\n  readonly register: RegisterState;\n  readonly activate: ActivateState;\n  readonly passwordReset: PasswordResetState;\n  readonly password: PasswordState;\n  readonly settings: SettingsState;\n  readonly region: RegionState;\n  readonly country: CountryState;\n  readonly location: LocationState;\n  readonly department: DepartmentState;\n  readonly banco: BancoState;\n  readonly creditDetalle: CreditDetalleState;\n  readonly credit: CreditState;\n  readonly cliente: ClienteState;\n  readonly recaudador: RecaudadorState;\n  readonly recaudadorDetalle: RecaudadorDetalleState;\n  readonly token: TokenState;\n    readonly transferencia: TransferenciaState;\n  /* jhipster-needle-add-reducer-type - JHipster will add reducer type here */\n  readonly loadingBar: any;\n}\n\nconst rootReducer = combineReducers<IRootState>({\n  authentication,\n  locale,\n  applicationProfile,\n  administration,\n  userManagement,\n  register,\n  activate,\n  passwordReset,\n  password,\n  settings,\n  region,\n  country,\n  location,\n  department,\n  banco,\n  creditDetalle,\n  credit,\n  cliente,\n  recaudador,\n  recaudadorDetalle, token, transferencia,\n  /* jhipster-needle-add-reducer-combine - JHipster will add reducer here */\n  loadingBar\n});\n\nexport default rootReducer;\n","import axios from 'axios';\n\nimport { TranslatorContext, Storage } from 'react-jhipster';\n\nexport const ACTION_TYPES = {\n  SET_LOCALE: 'locale/SET_LOCALE'\n};\n\nconst initialState = {\n  currentLocale: undefined\n};\n\nexport type LocaleState = Readonly<typeof initialState>;\n\nexport default (state: LocaleState = initialState, action): LocaleState => {\n  switch (action.type) {\n    case ACTION_TYPES.SET_LOCALE:\n      const currentLocale = action.locale;\n      if (state.currentLocale !== currentLocale) {\n        TranslatorContext.setLocale(currentLocale);\n      }\n      return {\n        currentLocale\n      };\n    default:\n      return state;\n  }\n};\n\nexport const setLocale = locale => async dispatch => {\n  if (!Object.keys(TranslatorContext.context.translations).includes(locale)) {\n    const response = await axios.get(`i18n/${locale}.json?buildTimestamp=${process.env.BUILD_TIMESTAMP}`, { baseURL: '' });\n    TranslatorContext.registerTranslations(locale, response.data);\n  }\n  dispatch({\n    type: ACTION_TYPES.SET_LOCALE,\n    locale\n  });\n};\n","import moment from 'moment';\n\nimport { APP_LOCAL_DATETIME_FORMAT, APP_LOCAL_DATETIME_FORMAT_Z } from 'app/config/constants';\n\nexport const convertDateTimeFromServer = date => (date ? moment(date).format(APP_LOCAL_DATETIME_FORMAT) : null);\n\nexport const convertDateTimeToServer = date => (date ? moment(date, APP_LOCAL_DATETIME_FORMAT_Z).toDate() : null);\n","import pick from 'lodash/pick';\n\n/**\n * Removes fields with an 'id' field that equals ''.\n * This function was created to prevent entities to be sent to\n * the server with relationship fields with empty an empty id and thus\n * resulting in a 500.\n *\n * @param entity Object to clean.\n */\nexport const cleanEntity = entity => {\n  const keysToKeep = Object.keys(entity).filter(k => !(entity[k] instanceof Object) || (entity[k]['id'] !== '' && entity[k]['id'] !== -1));\n\n  return pick(entity, keysToKeep);\n};\n\n/**\n * Simply map a list of element to a list a object with the element as id.\n *\n * @param idList Elements to map.\n * @returns The list of objects with mapped ids.\n */\nexport const mapIdList = (idList: ReadonlyArray<any>) =>\n  idList.filter((entityId: any) => entityId !== '').map((entityId: any) => ({ id: entityId }));\n","export const ITEMS_PER_PAGE = 20;\n","module.exports = __webpack_public_path__ + \"content/4335d5f923e59343903e1b055ef4570c.svg\";","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC15BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC5QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5CA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAAA;AAAA;;AAuCA;AAtCA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAKA;AACA;AAUA;AACA;AACA;AACA;AAGA;AAKA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AAKA;AACA;AACA;;;;;;;;;;;;;;AC/EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;AC/BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC1BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;ACVA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACvCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAgCA;AACA;AACA;;;;;;;;;;;;;;ACpEA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;ACfA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AChHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AALA;AAOA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;;;;;;;;;;;;;;AC9BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBA;AACA;AAEA;AACA;AACA;AAIA;AAIA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AA6BA;AAzCA;AACA;AACA;AAYA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AACA;AACA;;AAEA;AAEA;AACA;;AAEA;AAKA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAOA;AAAA;AAAA;;AAsCA;AArCA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAAA;AACA;AACA;;AAIA;AACA;AAAA;AACA;AACA;AAMA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAYA;AAAA;AACA;AAAA;AAqBA;AACA;AACA;AACA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AArCA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAsBA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAKA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AAEA;AACA;;AAEA;AACA;;AAIA;AACA;;AAEA;AAQA;AACA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;AC1IA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAKA;AACA;AAKA;AACA;AACA;AAMA;AACA;AAMA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;;AACA;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AClJA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAOA;AAAA;AAAA;;AAqEA;AApEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAGA;AAGA;AACA;AAIA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAYA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;ACpGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AARA;AAYA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AAEA;AACA;AACA;AAIA;AAIA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AA6BA;AAzCA;AACA;AACA;AAYA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AACA;AACA;;AAEA;AAEA;AACA;;AAEA;AAKA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAOA;AAAA;AAAA;;AA8EA;AA7EA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AACA;AACA;;AAIA;AACA;AAAA;AACA;AACA;AAMA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AAYA;AAAA;AACA;AAAA;AA0BA;AACA;AAEA;AACA;AACA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AA5CA;AACA;AACA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAwBA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAKA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AAKA;AACA;AAGA;AACA;AACA;AAEA;AAKA;AACA;AAGA;AACA;AACA;AAEA;AAKA;AACA;AAGA;AACA;AACA;AAEA;AAKA;AACA;AAGA;AACA;AACA;AAEA;AASA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAKA;AAGA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAOA;AACA;AAEA;AACA;AAIA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAKA;AAGA;AACA;;AAEA;AACA;;AAIA;AACA;;AAEA;AAQA;AACA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;ACzTA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAMA;AACA;AAKA;AACA;AACA;AAMA;AACA;AAMA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;;AACA;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/KA;AACA;AACA;AACA;AACA;AACA;AASA;AAGA;AAEA;AACA;AACA;AAMA;AAAA;AAAA;AAAA;AACA;AAQA;AACA;AAEA;AACA;AACA;AAGA;AAOA;AAEA;AACA;AACA;AACA;;AAgIA;AAxJA;AACA;AACA;AAYA;AACA;AACA;AACA;AASA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AAGA;AAGA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAUA;AACA;AASA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxMA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAUA;AAAA;AACA;AAAA;AAoBA;AACA;AAEA;AACA;AACA;AAKA;;;;AAIA;AACA;AACA;AAEA;AACA;AACA;AAtCA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAuBA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAKA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AACA;AAGA;AAMA;AACA;AAGA;AACA;AACA;AACA;AAGA;AAMA;AACA;AAGA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AAGA;AAMA;AACA;AAGA;AACA;AACA;AACA;AAGA;AASA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAKA;AAGA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAIA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAKA;AAGA;AACA;;AAEA;AACA;;AAIA;AACA;;AAEA;AAQA;AACA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACvSA;AACA;AAEA;AACA;AAIA;AAIA;AAAA;AAAA;;AAsBA;AArBA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAMA;AACA;AAAA;;AACA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AAKA;AACA;AACA;;;;;;;;;;;;;;AC/CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AARA;AAYA;AACA;AACA;;;;;;;;;;;;;;ACxBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAKA;AACA;AAKA;AACA;AACA;AAMA;AACA;AAMA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;;AACA;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AClJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAKA;AACA;AAKA;AACA;AACA;AAMA;AACA;AAMA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;;AACA;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AClJA;AACA;AAEA;AACA;AACA;AAIA;AAIA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AA6BA;AAzCA;AACA;AACA;AAYA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AACA;AACA;;AAEA;AAEA;AACA;;AAEA;AAKA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAIA;AAAA;AAAA;;AA0KA;AAzKA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAAA;AACA;AACA;;AAIA;AACA;AAAA;AACA;AACA;AAMA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AASA;AAAA;AACA;AAAA;AAqBA;AACA;AACA;AACA;AAEA;AACA;AACA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAzCA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AA0BA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAKA;AAEA;AACA;AAEA;AA0EA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AA2GA;AACA;;AAEA;AACA;;AAIA;AACA;;AAEA;AAQA;AACA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;ACpUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAMA;AACA;AAKA;AACA;AACA;AAMA;AACA;AAMA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;;AACA;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvJA;AACA;AACA;AACA;AACA;AACA;AASA;AAGA;AAEA;AACA;AACA;AAMA;AAAA;AAAA;AAAA;AACA;AAQA;AACA;AAEA;AACA;AACA;AAGA;AAOA;AAEA;AACA;AACA;AACA;;AA6KA;AArMA;AACA;AACA;AAYA;AACA;AACA;AACA;AASA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AACA;;AAAA;AAKA;AACA;;AAAA;AAQA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AACA;;AAAA;AAQA;AACA;;AAAA;AAoCA;AAGA;AAGA;AACA;AAIA;AACA;AAEA;AAIA;AACA;AAGA;AACA;AAOA;AACA;AAaA;AACA;AACA;AACA;AAAA;AACA;AACA;AAsBA;AACA;AASA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;ACrPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AARA;AAYA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AAEA;AACA;AACA;AAIA;AAIA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AA6BA;AAzCA;AACA;AACA;AAYA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AACA;AACA;;AAEA;AAEA;AACA;;AAEA;AAKA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAOA;AAAA;AAAA;;AAsCA;AArCA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAAA;AACA;AACA;;AAIA;AACA;AAAA;AACA;AACA;AAMA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAYA;AAAA;AACA;AAAA;AAqBA;AACA;AACA;AACA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AArCA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAsBA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAKA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AAKA;AACA;AAGA;AACA;;AAEA;AACA;;AAIA;AACA;;AAEA;AAQA;AACA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;ACjJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAKA;AACA;AAKA;AACA;AACA;AAMA;AACA;AAMA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;;AACA;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AClJA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAOA;AAAA;AAAA;;AAqEA;AApEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAGA;AAGA;AACA;AAIA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAYA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;ACpGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AARA;AAYA;AACA;AACA;;;;;;;;;;;;;;ACxBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AAKA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AApBA;AA0BA;AACA;AACA;;;;;;;;;;;;;;ACnDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAKA;AACA;AAKA;AACA;AACA;AAMA;AACA;AAMA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;;AACA;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AClJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AARA;AAYA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AAEA;AACA;AACA;AAIA;AAIA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AA2BA;AAvCA;AACA;AACA;AAYA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AACA;AACA;;AACA;AAEA;AACA;;AACA;AAKA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAIA;AAAA;AAAA;;AA6EA;AA5EA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAAA;AAGA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AACA;AACA;;AAGA;AACA;AAAA;AACA;AACA;AAMA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAEA;AACA;AAUA;AAAA;AACA;AAAA;AAwBA;AACA;AACA;AAEA;AACA;AACA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AA3CA;AACA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAyBA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAKA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AASA;AACA;AACA;AAEA;AASA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAKA;AAGA;AACA;;AACA;AACA;;AAIA;AACA;;AACA;AAQA;AACA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;AC9MA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAKA;AACA;AAKA;AACA;AACA;AAMA;AACA;AAMA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;;AACA;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClJA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAIA;AAAA;AAAA;;AAsGA;AArGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAGA;AAGA;AACA;AAIA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAYA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;ACrIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AARA;AAYA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AAEA;AACA;AACA;AAIA;AAIA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AA2BA;AAvCA;AACA;AACA;AAYA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AACA;AACA;;AACA;AAEA;AACA;;AACA;AAKA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAIA;AAAA;AAAA;;AA+KA;AA9KA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAAA;AACA;AACA;;AAGA;AACA;AAAA;AACA;AACA;AAMA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AASA;AAAA;AACA;AAAA;AAqBA;AACA;AACA;AACA;AAEA;AACA;AACA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAzCA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AA0BA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAKA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AASA;AACA;AACA;AAEA;AASA;AACA;AACA;AAEA;AASA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAOA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAOA;AACA;AAEA;AACA;AAIA;AACA;AACA;AAEA;AAEA;AACA;;AACA;AACA;;AAIA;AACA;;AACA;AAQA;AACA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;ACxUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAMA;AACA;AAKA;AACA;AACA;AAMA;AACA;AAMA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;;AACA;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;;AACA;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjKA;AACA;AACA;AACA;AACA;AACA;AASA;AAGA;AAEA;AAEA;AACA;AAMA;AAAA;AAAA;AAAA;AACA;AAQA;AACA;AAEA;AACA;AACA;AAGA;AAOA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAIA;;AA0MA;AAzOA;AACA;AACA;AAYA;AACA;AACA;AACA;AAeA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AACA;;AAAA;AAMA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AACA;;AAAA;AAMA;AACA;;AAAA;AAYA;AACA;;AAAA;AAQA;AACA;;AAAA;AAEA;AACA;AAAA;AACA;AAEA;AACA;;AAAA;AAQA;AACA;;AAAA;AAYA;AAGA;AAGA;AACA;AAKA;AAGA;AAKA;AAKA;AAWA;AAEA;AACA;AACA;AAEA;AAMA;AACA;AAMA;AACA;AACA;AAGA;AACA;AAOA;AACA;AACA;AACA;AAAA;AACA;AACA;AAsBA;AACA;AASA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;AC1RA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAKA;AACA;AAKA;AACA;AACA;AAMA;AACA;AAMA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;;AACA;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AClJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AARA;AAYA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AAEA;AACA;AACA;AAIA;AAIA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AA6BA;AAzCA;AACA;AACA;AAYA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AACA;AACA;;AAEA;AAEA;AACA;;AAEA;AAKA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAOA;AAAA;AAAA;;AAsCA;AArCA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAAA;AACA;AACA;;AAIA;AACA;AAAA;AACA;AACA;AAMA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAYA;AAAA;AACA;AAAA;AAqBA;AACA;AACA;AACA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AArCA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAsBA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAKA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AAEA;AACA;;AAEA;AACA;;AAIA;AACA;;AAEA;AAQA;AACA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;AC1IA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAKA;AACA;AAKA;AACA;AACA;AAMA;AACA;AAMA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;;AACA;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AClJA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAOA;AAAA;AAAA;;AAqEA;AApEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAGA;AAGA;AACA;AAIA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AASA;AACA;AAAA;AACA;AACA;AAYA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;ACpGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAKA;AACA;AAKA;AACA;AACA;AAMA;AACA;AAMA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;;AACA;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AClJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAPA;AAeA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACrDA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AAGA;AACA;AAIA;AACA;AAIA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACpDA;AACA;AACA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAGA;AAEA;AACA;AACA;AAMA;AAAA;AAAA;;AA2BA;AA1BA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAKA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxEA;AACA;AACA;AACA;AACA;AAIA;AACA;AASA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AAEA;AACA;AACA;;AAqDA;AA/DA;AACA;AACA;AAUA;AACA;AAEA;AAMA;AACA;AACA;AACA;AAGA;AACA;AAMA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAKA;AACA;AAAA;;AAEA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/FA;AACA;AACA;AACA;AACA;AAGA;AAIA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;;AAoCA;AA3CA;AACA;AACA;AAOA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAMA;AACA;AACA;AACA;AAEA;AACA;AAOA;AACA;AAAA;;AAEA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AC/DA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAKA;AACA;AACA;AAKA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AACA;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AC5EA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AAMA;AACA;AAMA;AACA;AAMA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACpEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AAIA;AACA;AAKA;AACA;AAIA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5DA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAQA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAMA;AACA;AAQA;AACA;AAEA;AACA;AACA;;AAyGA;AA3HA;AACA;AACA;AAkBA;AACA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAMA;AACA;AAEA;AAMA;AACA;AAEA;AAMA;AACA;AACA;AACA;AAEA;AAKA;AACA;AACA;AACA;AACA;AAEA;AAOA;AACA;AACA;AACA;AAEA;AACA;AAMA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AAoBA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAIA;AACA;AACA;;;;;;;;;;;;;;AC5JA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AAMA;AACA;AAMA;AACA;AAMA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AAEA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AANA;AAQA;AACA;AACA;AAEA;;AAAA;;;;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC5EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AAKA;AACA;AAKA;AACA;AAIA;AACA;AAEA;AACA;AAQA;AACA;AAQA;AACA;AAMA;AACA;AAKA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;;;;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AClLA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AAGA;AACA;AACA;AAMA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAIA;AACA;AAMA;AACA;AAKA;AACA;AACA;AAMA;AACA;AAMA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;;AACA;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AC5CA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAIA;AAAA;AAAA;;AA6FA;AA5FA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;;AACA;AACA;AAKA;AACA;AACA;AACA;AAEA;;AAEA;;AACA;AACA;AAGA;AACA;;AAEA;AACA;AAKA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AACA;AAKA;AACA;AAAA;AACA;AAIA;AAEA;AACA;AAIA;AACA;AAAA;;AAEA;AACA;AACA;AACA;AAEA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACxHA;AACA;AACA;AACA;AACA;AASA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;;AAgGA;AA/FA;;;;;;;;;AASA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AAIA;AACA;AAQA;AAQA;AACA;AACA;;AAAA;AAkBA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACrHA;AACA;AACA;AAGA;AACA;AAQA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAOA;AACA;;;;;;;;AAQA;AAEA;AAAA;AACA;AACA;AAEA;AACA;AACA;;AAoBA;AA1CA;AACA;AACA;AACA;AACA;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAUA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;;AAEA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;AChFA;AACA;AAGA;AAOA;AAAA;AAAA;;AAqBA;AApBA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAGA;AACA;AAAA;;AAEA;AACA;AACA;AACA;AAEA;AAKA;AACA;AACA;;;;;;;;;;;;;;AC9CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/CA;AACA;AACA;AACA;AAEA;AAQA;AACA;AAOA;AACA;AAEA;AAIA;AACA;AAPA;AAYA;AACA;AACA;AACA;AAAA;AACA;AAKA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAQA;;;;AAIA;AACA;AAOA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;AC5FA;AACA;AACA;AAEA;AAAA;AACA;AAEA;AAIA;AAAA;AAEA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;AClBA;AAWA;AAAA;AAAA;AAAA;AACA;;AA+BA;AA7BA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AAKA;AAEA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;;;;;;;;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC5CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAOA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AAMA;AAEA;AAIA;AAEA;AACA;AACA;AAEA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AC5CA;AAEA;AACA;AACA;AAIA;AAEA;AACA;AAgBA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAHA;AAQA;AACA;AACA;;AA4BA;AA1BA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;;;;;;;;;;;;;;;;;AC7EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AACA;;AAAA;AAKA;AAEA;AACA;;AAAA;AAEA;AACA;;AAAA;AAKA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;;;;;;;;;;;;;;ACxCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AACA;;AAAA;AAGA;AACA;;AAAA;AAKA;AAEA;;AAAA;AAIA;AAAA;AAAA;AAEA;AACA;AAHA;AAOA;AACA;AACA;;;;;;;;;;;;;;AC9CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAWA;AACA;;AAEA;AA4BA;AACA;;AAEA;AAYA;AACA;;AAEA;AAEA;AACA;;AAEA;AAGA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACNA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AACA;;;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC5CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAMA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AAGA;AAEA;AACA;AACA;;;;;;;;;;;;;;ACxEA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;ACHA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAwBA;AACA;AACA;;;;;;;;;;;;;;ACzBA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;ACKA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AChBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AA6BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC3CA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;ACFA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;ACIA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;ACbA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AA+BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC/CA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;ACDA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;ACNA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAeA;AACA;AACA;;;;;;;;;;;;;;ACLA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AClCA;AAAA;AAAA;AAAA;AAAA;;AAEA;AAEA;AAEA;;AAEA;AAEA;AAEA;;AAEA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;AClBA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AAAA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACpCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AACA;AAEA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAIA;AACA;AAMA;AACA;AAQA;AACA;AAOA;AACA;AAIA;AACA;AACA;AAOA;AACA;AACA;AAKA;AACA;AAMA;AACA;AACA;AACA;AAEA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAKA;AACA;AACA;AACA;AACA;;AAAA;;;;;AAEA;AAEA;AAAA;AAAA;;;;AACA;AACA;AACA;AACA;;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;;AAAA;;;;AACA;AAhBA;AAkBA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;AAAA;;;;;AAEA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;AAAA;;;;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACnLA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAGA;AACA;AAGA;AACA;AAGA;AACA;AAGA;AACA;AAGA;AACA;AAGA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AA8BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;AC7GA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAIA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;AACA;AACA;;AAAA;AACA;;;AAEA;AACA;AACA;AACA;;;;AACA;AACA;AACA;;;;;;;;;;;;;;ACxCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAEA;AACA;AACA;;;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;;;;;;;AAOA;AACA;AACA;AAEA;AACA;AAEA;;;;;AAKA;AACA;AACA;AAAA;AACA;AACA;;;;;;;;;;;;;;ACzBA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;ACFA;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}