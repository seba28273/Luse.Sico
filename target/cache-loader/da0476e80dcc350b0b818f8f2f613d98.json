{"remainingRequest":"E:\\Proyectos\\JHipster\\sico\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-2!E:\\Proyectos\\JHipster\\sico\\node_modules\\ts-loader\\index.js??ref--4-3!E:\\Proyectos\\JHipster\\sico\\node_modules\\tslint-loader\\index.js!E:\\Proyectos\\JHipster\\sico\\src\\main\\webapp\\app\\modules\\administration\\user-management\\user-management-detail.tsx","dependencies":[{"path":"E:\\Proyectos\\JHipster\\sico\\src\\main\\webapp\\app\\modules\\administration\\user-management\\user-management-detail.tsx","mtime":1555525626038},{"path":"E:\\Proyectos\\JHipster\\sico\\node_modules\\react-hot-loader\\webpack.js","mtime":1505850161000},{"path":"E:\\Proyectos\\JHipster\\sico\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1555002618200},{"path":"E:\\Proyectos\\JHipster\\sico\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Proyectos\\JHipster\\sico\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"E:\\Proyectos\\JHipster\\sico\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Row, Badge } from 'reactstrap';\r\nimport { Translate, TextFormat } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { APP_DATE_FORMAT } from 'app/config/constants';\r\nimport { languages } from 'app/config/translation';\r\nimport { getUser } from './user-management.reducer';\r\nvar UserManagementDetail = /** @class */ (function (_super) {\r\n    tslib_1.__extends(UserManagementDetail, _super);\r\n    function UserManagementDetail() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    UserManagementDetail.prototype.componentDidMount = function () {\r\n        this.props.getUser(this.props.match.params.login);\r\n    };\r\n    UserManagementDetail.prototype.render = function () {\r\n        var user = this.props.user;\r\n        return (React.createElement(\"div\", null,\r\n            React.createElement(\"h2\", null,\r\n                React.createElement(Translate, { contentKey: \"userManagement.detail.title\" }, \"User\"),\r\n                \" [\",\r\n                React.createElement(\"b\", null, user.login),\r\n                \"]\"),\r\n            React.createElement(Row, { size: \"md\" },\r\n                React.createElement(\"dl\", { className: \"jh-entity-details\" },\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(Translate, { contentKey: \"userManagement.login\" }, \"Login\")),\r\n                    React.createElement(\"dd\", null,\r\n                        React.createElement(\"span\", null, user.login),\r\n                        \"\\u00A0\",\r\n                        user.activated ? (React.createElement(Badge, { color: \"success\" },\r\n                            React.createElement(Translate, { contentKey: \"userManagement.activated\" }, \"Activated\"))) : (React.createElement(Badge, { color: \"danger\" },\r\n                            React.createElement(Translate, { contentKey: \"userManagement.deactivated\" }, \"Deactivated\")))),\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(Translate, { contentKey: \"userManagement.firstName\" }, \"First Name\")),\r\n                    React.createElement(\"dd\", null, user.firstName),\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(Translate, { contentKey: \"userManagement.lastName\" }, \"Last Name\")),\r\n                    React.createElement(\"dd\", null, user.lastName),\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(Translate, { contentKey: \"userManagement.email\" }, \"Email\")),\r\n                    React.createElement(\"dd\", null, user.email),\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(Translate, { contentKey: \"userManagement.langKey\" }, \"Lang Key\")),\r\n                    React.createElement(\"dd\", null, user.langKey ? languages[user.langKey].name : undefined),\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(Translate, { contentKey: \"userManagement.createdBy\" }, \"Created By\")),\r\n                    React.createElement(\"dd\", null, user.createdBy),\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(Translate, { contentKey: \"userManagement.createdDate\" }, \"Created Date\")),\r\n                    React.createElement(\"dd\", null,\r\n                        React.createElement(TextFormat, { value: user.createdDate, type: \"date\", format: APP_DATE_FORMAT, blankOnInvalid: true })),\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(Translate, { contentKey: \"userManagement.lastModifiedBy\" }, \"Last Modified By\")),\r\n                    React.createElement(\"dd\", null, user.lastModifiedBy),\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(Translate, { contentKey: \"userManagement.lastModifiedDate\" }, \"Last Modified Date\")),\r\n                    React.createElement(\"dd\", null,\r\n                        React.createElement(TextFormat, { value: user.lastModifiedDate, type: \"date\", format: APP_DATE_FORMAT, blankOnInvalid: true })),\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(Translate, { contentKey: \"userManagement.profiles\" }, \"Profiles\")),\r\n                    React.createElement(\"dd\", null,\r\n                        React.createElement(\"ul\", { className: \"list-unstyled\" }, user.authorities\r\n                            ? user.authorities.map(function (authority, i) { return (React.createElement(\"li\", { key: \"user-auth-\" + i },\r\n                                React.createElement(Badge, { color: \"info\" }, authority))); })\r\n                            : null)))),\r\n            React.createElement(Button, { tag: Link, to: \"/admin/user-management\", replace: true, color: \"info\" },\r\n                React.createElement(FontAwesomeIcon, { icon: \"arrow-left\" }),\r\n                ' ',\r\n                React.createElement(\"span\", { className: \"d-none d-md-inline\" },\r\n                    React.createElement(Translate, { contentKey: \"entity.action.back\" }, \"Back\")))));\r\n    };\r\n    return UserManagementDetail;\r\n}(React.Component));\r\nexport { UserManagementDetail };\r\nvar mapStateToProps = function (storeState) { return ({\r\n    user: storeState.userManagement.user\r\n}); };\r\nvar mapDispatchToProps = { getUser: getUser };\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserManagementDetail);\r\n",{"version":3,"file":"E:\\Proyectos\\JHipster\\sico\\src\\main\\webapp\\app\\modules\\administration\\user-management\\user-management-detail.tsx","sourceRoot":"","sources":["E:\\Proyectos\\JHipster\\sico\\node_modules\\tslint-loader\\index.js!E:\\Proyectos\\JHipster\\sico\\src\\main\\webapp\\app\\modules\\administration\\user-management\\user-management-detail.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, RouteComponentProps } from 'react-router-dom';\nimport { Button, Row, Badge } from 'reactstrap';\nimport { Translate, TextFormat } from 'react-jhipster';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { APP_DATE_FORMAT } from 'app/config/constants';\nimport { languages } from 'app/config/translation';\nimport { getUser } from './user-management.reducer';\nimport { IRootState } from 'app/shared/reducers';\n\nexport interface IUserManagementDetailProps extends StateProps, DispatchProps, RouteComponentProps<{ login: string }> {}\n\nexport class UserManagementDetail extends React.Component<IUserManagementDetailProps> {\n  componentDidMount() {\n    this.props.getUser(this.props.match.params.login);\n  }\n\n  render() {\n    const { user } = this.props;\n    return (\n      <div>\n        <h2>\n          <Translate contentKey=\"userManagement.detail.title\">User</Translate> [<b>{user.login}</b>]\n        </h2>\n        <Row size=\"md\">\n          <dl className=\"jh-entity-details\">\n            <dt>\n              <Translate contentKey=\"userManagement.login\">Login</Translate>\n            </dt>\n            <dd>\n              <span>{user.login}</span>\n              &nbsp;\n              {user.activated ? (\n                <Badge color=\"success\">\n                  <Translate contentKey=\"userManagement.activated\">Activated</Translate>\n                </Badge>\n              ) : (\n                <Badge color=\"danger\">\n                  <Translate contentKey=\"userManagement.deactivated\">Deactivated</Translate>\n                </Badge>\n              )}\n            </dd>\n            <dt>\n              <Translate contentKey=\"userManagement.firstName\">First Name</Translate>\n            </dt>\n            <dd>{user.firstName}</dd>\n            <dt>\n              <Translate contentKey=\"userManagement.lastName\">Last Name</Translate>\n            </dt>\n            <dd>{user.lastName}</dd>\n            <dt>\n              <Translate contentKey=\"userManagement.email\">Email</Translate>\n            </dt>\n            <dd>{user.email}</dd>\n            <dt>\n              <Translate contentKey=\"userManagement.langKey\">Lang Key</Translate>\n            </dt>\n            <dd>{user.langKey ? languages[user.langKey].name : undefined}</dd>\n            <dt>\n              <Translate contentKey=\"userManagement.createdBy\">Created By</Translate>\n            </dt>\n            <dd>{user.createdBy}</dd>\n            <dt>\n              <Translate contentKey=\"userManagement.createdDate\">Created Date</Translate>\n            </dt>\n            <dd>\n              <TextFormat value={user.createdDate} type=\"date\" format={APP_DATE_FORMAT} blankOnInvalid />\n            </dd>\n            <dt>\n              <Translate contentKey=\"userManagement.lastModifiedBy\">Last Modified By</Translate>\n            </dt>\n            <dd>{user.lastModifiedBy}</dd>\n            <dt>\n              <Translate contentKey=\"userManagement.lastModifiedDate\">Last Modified Date</Translate>\n            </dt>\n            <dd>\n              <TextFormat value={user.lastModifiedDate} type=\"date\" format={APP_DATE_FORMAT} blankOnInvalid />\n            </dd>\n            <dt>\n              <Translate contentKey=\"userManagement.profiles\">Profiles</Translate>\n            </dt>\n            <dd>\n              <ul className=\"list-unstyled\">\n                {user.authorities\n                  ? user.authorities.map((authority, i) => (\n                      <li key={`user-auth-${i}`}>\n                        <Badge color=\"info\">{authority}</Badge>\n                      </li>\n                    ))\n                  : null}\n              </ul>\n            </dd>\n          </dl>\n        </Row>\n        <Button tag={Link} to=\"/admin/user-management\" replace color=\"info\">\n          <FontAwesomeIcon icon=\"arrow-left\" />{' '}\n          <span className=\"d-none d-md-inline\">\n            <Translate contentKey=\"entity.action.back\">Back</Translate>\n          </span>\n        </Button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (storeState: IRootState) => ({\n  user: storeState.userManagement.user\n});\n\nconst mapDispatchToProps = { getUser };\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UserManagementDetail);\n"]}]}