{"remainingRequest":"E:\\Proyectos\\JHipster\\sico\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-1!E:\\Proyectos\\JHipster\\sico\\node_modules\\ts-loader\\index.js??ref--4-2!E:\\Proyectos\\JHipster\\sico\\node_modules\\tslint-loader\\index.js!E:\\Proyectos\\JHipster\\sico\\src\\main\\webapp\\app\\entities\\credit\\credit-update.tsx","dependencies":[{"path":"E:\\Proyectos\\JHipster\\sico\\src\\main\\webapp\\app\\entities\\credit\\credit-update.tsx","mtime":1557402845940},{"path":"E:\\Proyectos\\JHipster\\sico\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1555002618200},{"path":"E:\\Proyectos\\JHipster\\sico\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Proyectos\\JHipster\\sico\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"E:\\Proyectos\\JHipster\\sico\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Row, Col, Label } from 'reactstrap';\r\nimport { AvForm, AvGroup, AvInput, AvField } from 'availity-reactstrap-validation';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { getEntity, updateEntity, createEntity, reset } from './credit.reducer';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { convertDateTimeToServer } from 'app/shared/util/date-utils';\r\nvar CreditUpdate = /** @class */ (function (_super) {\r\n    tslib_1.__extends(CreditUpdate, _super);\r\n    function CreditUpdate(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this.saveEntity = function (event, errors, values) {\r\n            values.fechaCreacion = convertDateTimeToServer(values.fechaCreacion);\r\n            values.fechaInicio = convertDateTimeToServer(values.fechaInicio);\r\n            values.fechaVencimiento = convertDateTimeToServer(values.fechaVencimiento);\r\n            if (errors.length === 0) {\r\n                var creditEntity = _this.props.creditEntity;\r\n                var entity = tslib_1.__assign({}, creditEntity, values);\r\n                if (_this.state.isNew) {\r\n                    _this.props.createEntity(entity);\r\n                }\r\n                else {\r\n                    _this.props.updateEntity(entity);\r\n                }\r\n            }\r\n        };\r\n        _this.handleClose = function () {\r\n            _this.props.history.push('/entity/credit');\r\n        };\r\n        _this.state = {\r\n            isNew: !_this.props.match.params || !_this.props.match.params.id\r\n        };\r\n        return _this;\r\n    }\r\n    CreditUpdate.prototype.componentWillUpdate = function (nextProps, nextState) {\r\n        if (nextProps.updateSuccess !== this.props.updateSuccess && nextProps.updateSuccess) {\r\n            this.handleClose();\r\n        }\r\n    };\r\n    CreditUpdate.prototype.componentDidMount = function () {\r\n        if (this.state.isNew) {\r\n            this.props.reset();\r\n        }\r\n        else {\r\n            this.props.getEntity(this.props.match.params.id);\r\n        }\r\n    };\r\n    CreditUpdate.prototype.render = function () {\r\n        var _a = this.props, creditEntity = _a.creditEntity, loading = _a.loading, updating = _a.updating;\r\n        var isNew = this.state.isNew;\r\n        return (React.createElement(\"div\", null,\r\n            React.createElement(Row, { className: \"justify-content-center\" },\r\n                React.createElement(Col, { md: \"8\" },\r\n                    React.createElement(\"h2\", { id: \"sicoApp.credit.home.createOrEditLabel\" },\r\n                        React.createElement(Translate, { contentKey: \"sicoApp.credit.home.createOrEditLabel\" }, \"Create or edit a Credit\")))),\r\n            React.createElement(Row, { className: \"justify-content-center\" },\r\n                React.createElement(Col, { md: \"8\" }, loading ? (React.createElement(\"p\", null, \"Loading...\")) : (React.createElement(AvForm, { model: isNew ? {} : creditEntity, onSubmit: this.saveEntity },\r\n                    !isNew ? (React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { for: \"id\" },\r\n                            React.createElement(Translate, { contentKey: \"global.field.id\" }, \"ID\")),\r\n                        React.createElement(AvInput, { id: \"credit-id\", type: \"text\", className: \"form-control\", name: \"id\", required: true, readOnly: true }))) : null,\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { id: \"capitalPrestamoLabel\", for: \"capitalPrestamo\" },\r\n                            React.createElement(Translate, { contentKey: \"sicoApp.credit.capitalPrestamo\" }, \"Capital Prestamo\")),\r\n                        React.createElement(AvField, { id: \"credit-capitalPrestamo\", type: \"string\", className: \"form-control\", name: \"capitalPrestamo\" })),\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { id: \"cantCuotasLabel\", for: \"cantCuotas\" },\r\n                            React.createElement(Translate, { contentKey: \"sicoApp.credit.cantCuotas\" }, \"Cant Cuotas\")),\r\n                        React.createElement(AvField, { id: \"credit-cantCuotas\", type: \"string\", className: \"form-control\", name: \"cantCuotas\" })),\r\n                    React.createElement(Button, { tag: Link, id: \"cancel-save\", to: \"/entity/credit\", replace: true, color: \"info\" },\r\n                        React.createElement(FontAwesomeIcon, { icon: \"arrow-left\" }),\r\n                        \"\\u00A0\",\r\n                        React.createElement(\"span\", { className: \"d-none d-md-inline\" },\r\n                            React.createElement(Translate, { contentKey: \"entity.action.back\" }, \"Back\"))),\r\n                    \"\\u00A0\",\r\n                    React.createElement(Button, { color: \"primary\", id: \"save-entity\", type: \"submit\", disabled: updating },\r\n                        React.createElement(FontAwesomeIcon, { icon: \"save\" }),\r\n                        \"\\u00A0\",\r\n                        React.createElement(Translate, { contentKey: \"entity.action.save\" }, \"Save\"))))))));\r\n    };\r\n    return CreditUpdate;\r\n}(React.Component));\r\nexport { CreditUpdate };\r\nvar mapStateToProps = function (storeState) { return ({\r\n    creditEntity: storeState.credit.entity,\r\n    loading: storeState.credit.loading,\r\n    updating: storeState.credit.updating,\r\n    updateSuccess: storeState.credit.updateSuccess\r\n}); };\r\nvar mapDispatchToProps = {\r\n    getEntity: getEntity,\r\n    updateEntity: updateEntity,\r\n    createEntity: createEntity,\r\n    reset: reset\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreditUpdate);\r\n",{"version":3,"file":"E:\\Proyectos\\JHipster\\sico\\src\\main\\webapp\\app\\entities\\credit\\credit-update.tsx","sourceRoot":"","sources":["E:\\Proyectos\\JHipster\\sico\\node_modules\\tslint-loader\\index.js!E:\\Proyectos\\JHipster\\sico\\src\\main\\webapp\\app\\entities\\credit\\credit-update.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, RouteComponentProps } from 'react-router-dom';\nimport { Button, Row, Col, Label } from 'reactstrap';\nimport { AvForm, AvGroup, AvInput, AvField } from 'availity-reactstrap-validation';\n// tslint:disable-next-line:no-unused-variable\nimport { Translate, translate, ICrudGetAction, ICrudGetAllAction, ICrudPutAction } from 'react-jhipster';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { IRootState } from 'app/shared/reducers';\n\nimport { getEntity, updateEntity, createEntity, reset } from './credit.reducer';\nimport { ICredit } from 'app/shared/model/credit.model';\n// tslint:disable-next-line:no-unused-variable\nimport { convertDateTimeFromServer, convertDateTimeToServer } from 'app/shared/util/date-utils';\nimport { mapIdList } from 'app/shared/util/entity-utils';\n\nexport interface ICreditUpdateProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\n\nexport interface ICreditUpdateState {\n  isNew: boolean;\n}\n\nexport class CreditUpdate extends React.Component<ICreditUpdateProps, ICreditUpdateState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isNew: !this.props.match.params || !this.props.match.params.id\n    };\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    if (nextProps.updateSuccess !== this.props.updateSuccess && nextProps.updateSuccess) {\n      this.handleClose();\n    }\n  }\n\n  componentDidMount() {\n    if (this.state.isNew) {\n      this.props.reset();\n    } else {\n      this.props.getEntity(this.props.match.params.id);\n    }\n  }\n\n  saveEntity = (event, errors, values) => {\n    values.fechaCreacion = convertDateTimeToServer(values.fechaCreacion);\n    values.fechaInicio = convertDateTimeToServer(values.fechaInicio);\n    values.fechaVencimiento = convertDateTimeToServer(values.fechaVencimiento);\n\n    if (errors.length === 0) {\n      const { creditEntity } = this.props;\n      const entity = {\n        ...creditEntity,\n        ...values\n      };\n\n      if (this.state.isNew) {\n        this.props.createEntity(entity);\n      } else {\n        this.props.updateEntity(entity);\n      }\n    }\n  };\n\n  handleClose = () => {\n    this.props.history.push('/entity/credit');\n  };\n\n  render() {\n    const { creditEntity, loading, updating } = this.props;\n    const { isNew } = this.state;\n\n    return (\n      <div>\n        <Row className=\"justify-content-center\">\n          <Col md=\"8\">\n            <h2 id=\"sicoApp.credit.home.createOrEditLabel\">\n              <Translate contentKey=\"sicoApp.credit.home.createOrEditLabel\">Create or edit a Credit</Translate>\n            </h2>\n          </Col>\n        </Row>\n        <Row className=\"justify-content-center\">\n          <Col md=\"8\">\n            {loading ? (\n              <p>Loading...</p>\n            ) : (\n              <AvForm model={isNew ? {} : creditEntity} onSubmit={this.saveEntity}>\n                {!isNew ? (\n                  <AvGroup>\n                    <Label for=\"id\">\n                      <Translate contentKey=\"global.field.id\">ID</Translate>\n                    </Label>\n                    <AvInput id=\"credit-id\" type=\"text\" className=\"form-control\" name=\"id\" required readOnly />\n                  </AvGroup>\n                ) : null}\n                {/*<AvGroup>\n                  <Label id=\"periodicidadLabel\">\n                    <Translate contentKey=\"sicoApp.credit.periodicidad\">Periodicidad</Translate>\n                  </Label>\n                  <AvInput\n                    id=\"credit-periodicidad\"\n                    type=\"select\"\n                    className=\"form-control\"\n                    name=\"periodicidad\"\n                    value={(!isNew && creditEntity.periodicidad) || 'DIARIO'}\n                  >\n                    <option value=\"DIARIO\">\n                      <Translate contentKey=\"sicoApp.Periodicidad.DIARIO\" />\n                    </option>\n                    <option value=\"SEMANAL\">\n                      <Translate contentKey=\"sicoApp.Periodicidad.SEMANAL\" />\n                    </option>\n                    <option value=\"MENSUAL\">\n                      <Translate contentKey=\"sicoApp.Periodicidad.MENSUAL\" />\n                    </option>\n                    <option value=\"BIMENSUAL\">\n                      <Translate contentKey=\"sicoApp.Periodicidad.BIMENSUAL\" />\n                    </option>\n                    <option value=\"SEMESTRAL\">\n                      <Translate contentKey=\"sicoApp.Periodicidad.SEMESTRAL\" />\n                    </option>\n                  </AvInput>\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"diaHoraEjecucionLabel\" for=\"diaHoraEjecucion\">\n                    <Translate contentKey=\"sicoApp.credit.diaHoraEjecucion\">Dia Hora Ejecucion</Translate>\n                  </Label>\n                  <AvField id=\"credit-diaHoraEjecucion\" type=\"string\" className=\"form-control\" name=\"diaHoraEjecucion\" />\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"tipoCobroLabel\">\n                    <Translate contentKey=\"sicoApp.credit.tipoCobro\">Tipo Cobro</Translate>\n                  </Label>\n                  <AvInput\n                    id=\"credit-tipoCobro\"\n                    type=\"select\"\n                    className=\"form-control\"\n                    name=\"tipoCobro\"\n                    value={(!isNew && creditEntity.tipoCobro) || 'PRESTAMO'}\n                  >\n                    <option value=\"PRESTAMO\">\n                      <Translate contentKey=\"sicoApp.TipoCobro.PRESTAMO\" />\n                    </option>\n                    <option value=\"INSUMOINFORMATICO\">\n                      <Translate contentKey=\"sicoApp.TipoCobro.INSUMOINFORMATICO\" />\n                    </option>\n                  </AvInput>\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"montoLabel\" for=\"monto\">\n                    <Translate contentKey=\"sicoApp.credit.monto\">Monto</Translate>\n                  </Label>\n                  <AvField id=\"credit-monto\" type=\"string\" className=\"form-control\" name=\"monto\" />\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"observacionesLabel\" for=\"observaciones\">\n                    <Translate contentKey=\"sicoApp.credit.observaciones\">Observaciones</Translate>\n                  </Label>\n                  <AvField id=\"credit-observaciones\" type=\"text\" name=\"observaciones\" />\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"activoLabel\" check>\n                    <AvInput id=\"credit-activo\" type=\"checkbox\" className=\"form-control\" name=\"activo\" />\n                    <Translate contentKey=\"sicoApp.credit.activo\">Activo</Translate>\n                  </Label>\n                </AvGroup>*/}\n                <AvGroup>\n                  <Label id=\"capitalPrestamoLabel\" for=\"capitalPrestamo\">\n                    <Translate contentKey=\"sicoApp.credit.capitalPrestamo\">Capital Prestamo</Translate>\n                  </Label>\n                  <AvField id=\"credit-capitalPrestamo\" type=\"string\" className=\"form-control\" name=\"capitalPrestamo\" />\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"cantCuotasLabel\" for=\"cantCuotas\">\n                    <Translate contentKey=\"sicoApp.credit.cantCuotas\">Cant Cuotas</Translate>\n                  </Label>\n                  <AvField id=\"credit-cantCuotas\" type=\"string\" className=\"form-control\" name=\"cantCuotas\" />\n                </AvGroup>\n                {/*<AvGroup>\n                  <Label id=\"cuotaCobradaLabel\" for=\"cuotaCobrada\">\n                    <Translate contentKey=\"sicoApp.credit.cuotaCobrada\">Cuota Cobrada</Translate>\n                  </Label>\n                  <AvField id=\"credit-cuotaCobrada\" type=\"string\" className=\"form-control\" name=\"cuotaCobrada\" />\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"fechaCreacionLabel\" for=\"fechaCreacion\">\n                    <Translate contentKey=\"sicoApp.credit.fechaCreacion\">Fecha Creacion</Translate>\n                  </Label>\n                  <AvInput\n                    id=\"credit-fechaCreacion\"\n                    type=\"datetime-local\"\n                    className=\"form-control\"\n                    name=\"fechaCreacion\"\n                    placeholder={'YYYY-MM-DD HH:mm'}\n                    value={isNew ? null : convertDateTimeFromServer(this.props.creditEntity.fechaCreacion)}\n                  />\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"fechaInicioLabel\" for=\"fechaInicio\">\n                    <Translate contentKey=\"sicoApp.credit.fechaInicio\">Fecha Inicio</Translate>\n                  </Label>\n                  <AvInput\n                    id=\"credit-fechaInicio\"\n                    type=\"datetime-local\"\n                    className=\"form-control\"\n                    name=\"fechaInicio\"\n                    placeholder={'YYYY-MM-DD HH:mm'}\n                    value={isNew ? null : convertDateTimeFromServer(this.props.creditEntity.fechaInicio)}\n                  />\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"fechaVencimientoLabel\" for=\"fechaVencimiento\">\n                    <Translate contentKey=\"sicoApp.credit.fechaVencimiento\">Fecha Vencimiento</Translate>\n                  </Label>\n                  <AvInput\n                    id=\"credit-fechaVencimiento\"\n                    type=\"datetime-local\"\n                    className=\"form-control\"\n                    name=\"fechaVencimiento\"\n                    placeholder={'YYYY-MM-DD HH:mm'}\n                    value={isNew ? null : convertDateTimeFromServer(this.props.creditEntity.fechaVencimiento)}\n                  />\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"excluirFindeSemanasLabel\" check>\n                    <AvInput id=\"credit-excluirFindeSemanas\" type=\"checkbox\" className=\"form-control\" name=\"excluirFindeSemanas\" />\n                    <Translate contentKey=\"sicoApp.credit.excluirFindeSemanas\">Excluir Finde Semanas</Translate>\n                  </Label>\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"porcParticipacionLabel\" for=\"porcParticipacion\">\n                    <Translate contentKey=\"sicoApp.credit.porcParticipacion\">Porc Participacion</Translate>\n                  </Label>\n                  <AvField id=\"credit-porcParticipacion\" type=\"string\" className=\"form-control\" name=\"porcParticipacion\" />\n                </AvGroup>*/}\n                {/*<AvGroup>\n                  <Label id=\"interesesPrestamosLabel\" for=\"interesesPrestamos\">\n                    <Translate contentKey=\"sicoApp.credit.interesesPrestamos\">Intereses Prestamos</Translate>\n                  </Label>\n                  <AvField id=\"credit-interesesPrestamos\" type=\"string\" className=\"form-control\" name=\"interesesPrestamos\" />\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"cuotaPuraLabel\" for=\"cuotaPura\">\n                    <Translate contentKey=\"sicoApp.credit.cuotaPura\">Cuota Pura</Translate>\n                  </Label>\n                  <AvField id=\"credit-cuotaPura\" type=\"string\" className=\"form-control\" name=\"cuotaPura\" />\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"interesesCuotaLabel\" for=\"interesesCuota\">\n                    <Translate contentKey=\"sicoApp.credit.interesesCuota\">Intereses Cuota</Translate>\n                  </Label>\n                  <AvField id=\"credit-interesesCuota\" type=\"string\" className=\"form-control\" name=\"interesesCuota\" />\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"cuotaRecuperoCapitalLabel\" for=\"cuotaRecuperoCapital\">\n                    <Translate contentKey=\"sicoApp.credit.cuotaRecuperoCapital\">Cuota Recupero Capital</Translate>\n                  </Label>\n                  <AvField id=\"credit-cuotaRecuperoCapital\" type=\"string\" className=\"form-control\" name=\"cuotaRecuperoCapital\" />\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"cantidadRenegociadoLabel\" for=\"cantidadRenegociado\">\n                    <Translate contentKey=\"sicoApp.credit.cantidadRenegociado\">Cantidad Renegociado</Translate>\n                  </Label>\n                  <AvField id=\"credit-cantidadRenegociado\" type=\"string\" className=\"form-control\" name=\"cantidadRenegociado\" />\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"incobrableLabel\" check>\n                    <AvInput id=\"credit-incobrable\" type=\"checkbox\" className=\"form-control\" name=\"incobrable\" />\n                    <Translate contentKey=\"sicoApp.credit.incobrable\">Incobrable</Translate>\n                  </Label>\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"pagoManualLabel\" check>\n                    <AvInput id=\"credit-pagoManual\" type=\"checkbox\" className=\"form-control\" name=\"pagoManual\" />\n                    <Translate contentKey=\"sicoApp.credit.pagoManual\">Pago Manual</Translate>\n                  </Label>\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"esPersonalLabel\" check>\n                    <AvInput id=\"credit-esPersonal\" type=\"checkbox\" className=\"form-control\" name=\"esPersonal\" />\n                    <Translate contentKey=\"sicoApp.credit.esPersonal\">Es Personal</Translate>\n                  </Label>\n                </AvGroup>*/}\n                <Button tag={Link} id=\"cancel-save\" to=\"/entity/credit\" replace color=\"info\">\n                  <FontAwesomeIcon icon=\"arrow-left\" />\n                  &nbsp;\n                  <span className=\"d-none d-md-inline\">\n                    <Translate contentKey=\"entity.action.back\">Back</Translate>\n                  </span>\n                </Button>\n                &nbsp;\n                <Button color=\"primary\" id=\"save-entity\" type=\"submit\" disabled={updating}>\n                  <FontAwesomeIcon icon=\"save\" />\n                  &nbsp;\n                  <Translate contentKey=\"entity.action.save\">Save</Translate>\n                </Button>\n              </AvForm>\n            )}\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (storeState: IRootState) => ({\n  creditEntity: storeState.credit.entity,\n  loading: storeState.credit.loading,\n  updating: storeState.credit.updating,\n  updateSuccess: storeState.credit.updateSuccess\n});\n\nconst mapDispatchToProps = {\n  getEntity,\n  updateEntity,\n  createEntity,\n  reset\n};\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CreditUpdate);\n"]}]}