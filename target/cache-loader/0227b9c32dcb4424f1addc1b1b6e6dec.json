{"remainingRequest":"E:\\Proyectos\\JHipster\\sico\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-1!E:\\Proyectos\\JHipster\\sico\\node_modules\\ts-loader\\index.js??ref--4-2!E:\\Proyectos\\JHipster\\sico\\node_modules\\tslint-loader\\index.js!E:\\Proyectos\\JHipster\\sico\\src\\main\\webapp\\app\\modules\\account\\activate\\activate.tsx","dependencies":[{"path":"E:\\Proyectos\\JHipster\\sico\\src\\main\\webapp\\app\\modules\\account\\activate\\activate.tsx","mtime":1555525628916},{"path":"E:\\Proyectos\\JHipster\\sico\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1555002618200},{"path":"E:\\Proyectos\\JHipster\\sico\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Proyectos\\JHipster\\sico\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"E:\\Proyectos\\JHipster\\sico\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, Alert } from 'reactstrap';\r\nimport { Translate, getUrlParameter } from 'react-jhipster';\r\nimport { activateAction, reset } from './activate.reducer';\r\nvar successAlert = (React.createElement(Alert, { color: \"success\" },\r\n    React.createElement(Translate, { contentKey: \"activate.messages.success\" },\r\n        React.createElement(\"strong\", null, \"Your user account has been activated.\"),\r\n        \" Please\"),\r\n    React.createElement(Link, { to: \"/login\", className: \"alert-link\" },\r\n        React.createElement(Translate, { contentKey: \"global.messages.info.authenticated.link\" }, \"sign in\")),\r\n    \".\"));\r\nvar failureAlert = (React.createElement(Alert, { color: \"danger\" },\r\n    React.createElement(Translate, { contentKey: \"activate.messages.error\" },\r\n        React.createElement(\"strong\", null, \"Your user could not be activated.\"),\r\n        \" Please use the registration form to sign up.\")));\r\nvar ActivatePage = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ActivatePage, _super);\r\n    function ActivatePage() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ActivatePage.prototype.componentWillUnmount = function () {\r\n        this.props.reset();\r\n    };\r\n    ActivatePage.prototype.componentDidMount = function () {\r\n        var key = getUrlParameter('key', this.props.location.search);\r\n        this.props.activateAction(key);\r\n    };\r\n    ActivatePage.prototype.render = function () {\r\n        var _a = this.props, activationSuccess = _a.activationSuccess, activationFailure = _a.activationFailure;\r\n        return (React.createElement(\"div\", null,\r\n            React.createElement(Row, { className: \"justify-content-center\" },\r\n                React.createElement(Col, { md: \"8\" },\r\n                    React.createElement(\"h1\", null,\r\n                        React.createElement(Translate, { contentKey: \"activate.title\" }, \"Activation\")),\r\n                    activationSuccess ? successAlert : undefined,\r\n                    activationFailure ? failureAlert : undefined))));\r\n    };\r\n    return ActivatePage;\r\n}(React.Component));\r\nexport { ActivatePage };\r\nvar mapStateToProps = function (_a) {\r\n    var activate = _a.activate;\r\n    return ({\r\n        activationSuccess: activate.activationSuccess,\r\n        activationFailure: activate.activationFailure\r\n    });\r\n};\r\nvar mapDispatchToProps = { activateAction: activateAction, reset: reset };\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ActivatePage);\r\n",{"version":3,"file":"E:\\Proyectos\\JHipster\\sico\\src\\main\\webapp\\app\\modules\\account\\activate\\activate.tsx","sourceRoot":"","sources":["E:\\Proyectos\\JHipster\\sico\\node_modules\\tslint-loader\\index.js!E:\\Proyectos\\JHipster\\sico\\src\\main\\webapp\\app\\modules\\account\\activate\\activate.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,OAAO,EAAE,MAAM,aAAa,CAAC;AACtC,OAAO,EAAE,IAAI,EAAuB,MAAM,kBAAkB,CAAC;AAC7D,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,MAAM,YAAY,CAAC;AAC7C,OAAO,EAAE,SAAS,EAAE,eAAe,EAAE,MAAM,gBAAgB,CAAC;AAG5D,OAAO,EAAE,cAAc,EAAE,KAAK,EAAE,MAAM,oBAAoB,CAAC;AAE3D,IAAM,YAAY,GAAG,CACnB,oBAAC,KAAK,IAAC,KAAK,EAAC,SAAS;IACpB,oBAAC,SAAS,IAAC,UAAU,EAAC,2BAA2B;QAC/C,4EAAsD;kBAC5C;IACZ,oBAAC,IAAI,IAAC,EAAE,EAAC,QAAQ,EAAC,SAAS,EAAC,YAAY;QACtC,oBAAC,SAAS,IAAC,UAAU,EAAC,yCAAyC,cAAoB,CAC9E;QAED,CACT,CAAC;AAEF,IAAM,YAAY,GAAG,CACnB,oBAAC,KAAK,IAAC,KAAK,EAAC,QAAQ;IACnB,oBAAC,SAAS,IAAC,UAAU,EAAC,yBAAyB;QAC7C,wEAAkD;wDACxC,CACN,CACT,CAAC;AAIF;IAAkC,wCAA+B;IAAjE;;IA2BA,CAAC;IA1BC,2CAAoB,GAApB;QACE,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;IACrB,CAAC;IAED,wCAAiB,GAAjB;QACE,IAAM,GAAG,GAAG,eAAe,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAC/D,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;IACjC,CAAC;IAED,6BAAM,GAAN;QACQ,IAAA,eAAqD,EAAnD,wCAAiB,EAAE,wCAAiB,CAAgB;QAE5D,OAAO,CACL;YACE,oBAAC,GAAG,IAAC,SAAS,EAAC,wBAAwB;gBACrC,oBAAC,GAAG,IAAC,EAAE,EAAC,GAAG;oBACT;wBACE,oBAAC,SAAS,IAAC,UAAU,EAAC,gBAAgB,iBAAuB,CAC1D;oBACJ,iBAAiB,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,SAAS;oBAC5C,iBAAiB,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,SAAS,CACzC,CACF,CACF,CACP,CAAC;IACJ,CAAC;IACH,mBAAC;AAAD,CAAC,AA3BD,CAAkC,KAAK,CAAC,SAAS,GA2BhD;;AAED,IAAM,eAAe,GAAG,UAAC,EAAwB;QAAtB,sBAAQ;IAAmB,OAAA,CAAC;QACrD,iBAAiB,EAAE,QAAQ,CAAC,iBAAiB;QAC7C,iBAAiB,EAAE,QAAQ,CAAC,iBAAiB;KAC9C,CAAC;AAHoD,CAGpD,CAAC;AAEH,IAAM,kBAAkB,GAAG,EAAE,cAAc,gBAAA,EAAE,KAAK,OAAA,EAAE,CAAC;AAKrD,eAAe,OAAO,CACpB,eAAe,EACf,kBAAkB,CACnB,CAAC,YAAY,CAAC,CAAC","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, RouteComponentProps } from 'react-router-dom';\nimport { Row, Col, Alert } from 'reactstrap';\nimport { Translate, getUrlParameter } from 'react-jhipster';\n\nimport { IRootState } from 'app/shared/reducers';\nimport { activateAction, reset } from './activate.reducer';\n\nconst successAlert = (\n  <Alert color=\"success\">\n    <Translate contentKey=\"activate.messages.success\">\n      <strong>Your user account has been activated.</strong> Please\n    </Translate>\n    <Link to=\"/login\" className=\"alert-link\">\n      <Translate contentKey=\"global.messages.info.authenticated.link\">sign in</Translate>\n    </Link>\n    .\n  </Alert>\n);\n\nconst failureAlert = (\n  <Alert color=\"danger\">\n    <Translate contentKey=\"activate.messages.error\">\n      <strong>Your user could not be activated.</strong> Please use the registration form to sign up.\n    </Translate>\n  </Alert>\n);\n\nexport interface IActivateProps extends StateProps, DispatchProps, RouteComponentProps<{ key: any }> {}\n\nexport class ActivatePage extends React.Component<IActivateProps> {\n  componentWillUnmount() {\n    this.props.reset();\n  }\n\n  componentDidMount() {\n    const key = getUrlParameter('key', this.props.location.search);\n    this.props.activateAction(key);\n  }\n\n  render() {\n    const { activationSuccess, activationFailure } = this.props;\n\n    return (\n      <div>\n        <Row className=\"justify-content-center\">\n          <Col md=\"8\">\n            <h1>\n              <Translate contentKey=\"activate.title\">Activation</Translate>\n            </h1>\n            {activationSuccess ? successAlert : undefined}\n            {activationFailure ? failureAlert : undefined}\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ activate }: IRootState) => ({\n  activationSuccess: activate.activationSuccess,\n  activationFailure: activate.activationFailure\n});\n\nconst mapDispatchToProps = { activateAction, reset };\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ActivatePage);\n"]}]}