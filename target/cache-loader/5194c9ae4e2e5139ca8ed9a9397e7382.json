{"remainingRequest":"E:\\Proyectos\\JHipster\\sico\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-2!E:\\Proyectos\\JHipster\\sico\\node_modules\\ts-loader\\index.js??ref--4-3!E:\\Proyectos\\JHipster\\sico\\node_modules\\tslint-loader\\index.js!E:\\Proyectos\\JHipster\\sico\\src\\main\\webapp\\app\\entities\\recaudador-detalle\\recaudador-detalle-update.tsx","dependencies":[{"path":"E:\\Proyectos\\JHipster\\sico\\src\\main\\webapp\\app\\entities\\recaudador-detalle\\recaudador-detalle-update.tsx","mtime":1565708306810},{"path":"E:\\Proyectos\\JHipster\\sico\\node_modules\\react-hot-loader\\webpack.js","mtime":1505850161000},{"path":"E:\\Proyectos\\JHipster\\sico\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1555002618200},{"path":"E:\\Proyectos\\JHipster\\sico\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Proyectos\\JHipster\\sico\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"E:\\Proyectos\\JHipster\\sico\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Row, Col, Label } from 'reactstrap';\r\nimport { AvForm, AvGroup, AvInput, AvField } from 'availity-reactstrap-validation';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { getEntities as getRecaudadors } from 'app/entities/recaudador/recaudador.reducer';\r\nimport { getEntity, updateEntity, createEntity, reset } from './recaudador-detalle.reducer';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { convertDateTimeFromServer, convertDateTimeToServer } from 'app/shared/util/date-utils';\r\nvar RecaudadorDetalleUpdate = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RecaudadorDetalleUpdate, _super);\r\n    function RecaudadorDetalleUpdate(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this.saveEntity = function (event, errors, values) {\r\n            values.fechaEjecucion = convertDateTimeToServer(values.fechaEjecucion);\r\n            values.fechaProgramada = convertDateTimeToServer(values.fechaProgramada);\r\n            if (errors.length === 0) {\r\n                var recaudadorDetalleEntity = _this.props.recaudadorDetalleEntity;\r\n                var entity = tslib_1.__assign({}, recaudadorDetalleEntity, values);\r\n                if (_this.state.isNew) {\r\n                    _this.props.createEntity(entity);\r\n                }\r\n                else {\r\n                    _this.props.updateEntity(entity);\r\n                }\r\n            }\r\n        };\r\n        _this.handleClose = function () {\r\n            _this.props.history.push('/entity/recaudador-detalle');\r\n        };\r\n        _this.state = {\r\n            recaudadorId: '0',\r\n            isNew: !_this.props.match.params || !_this.props.match.params.id\r\n        };\r\n        return _this;\r\n    }\r\n    RecaudadorDetalleUpdate.prototype.componentWillUpdate = function (nextProps, nextState) {\r\n        if (nextProps.updateSuccess !== this.props.updateSuccess && nextProps.updateSuccess) {\r\n            this.handleClose();\r\n        }\r\n    };\r\n    RecaudadorDetalleUpdate.prototype.componentDidMount = function () {\r\n        if (this.state.isNew) {\r\n            this.props.reset();\r\n        }\r\n        else {\r\n            this.props.getEntity(this.props.match.params.id);\r\n        }\r\n        this.props.getRecaudadors();\r\n    };\r\n    RecaudadorDetalleUpdate.prototype.render = function () {\r\n        var _a = this.props, recaudadorDetalleEntity = _a.recaudadorDetalleEntity, recaudadors = _a.recaudadors, loading = _a.loading, updating = _a.updating;\r\n        var isNew = this.state.isNew;\r\n        return (React.createElement(\"div\", null,\r\n            React.createElement(Row, { className: \"justify-content-center\" },\r\n                React.createElement(Col, { md: \"8\" },\r\n                    React.createElement(\"h2\", { id: \"sicoApp.recaudadorDetalle.home.createOrEditLabel\" },\r\n                        React.createElement(Translate, { contentKey: \"sicoApp.recaudadorDetalle.home.createOrEditLabel\" }, \"Create or edit a RecaudadorDetalle\")))),\r\n            React.createElement(Row, { className: \"justify-content-center\" },\r\n                React.createElement(Col, { md: \"8\" }, loading ? (React.createElement(\"p\", null, \"Loading...\")) : (React.createElement(AvForm, { model: isNew ? {} : recaudadorDetalleEntity, onSubmit: this.saveEntity },\r\n                    !isNew ? (React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { for: \"id\" },\r\n                            React.createElement(Translate, { contentKey: \"global.field.id\" }, \"ID\")),\r\n                        React.createElement(AvInput, { id: \"recaudador-detalle-id\", type: \"text\", className: \"form-control\", name: \"id\", required: true, readOnly: true }))) : null,\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { id: \"ejecutadaLabel\", for: \"ejecutada\" },\r\n                            React.createElement(Translate, { contentKey: \"sicoApp.recaudadorDetalle.ejecutada\" }, \"Ejecutada\")),\r\n                        React.createElement(AvField, { id: \"recaudador-detalle-ejecutada\", type: \"string\", className: \"form-control\", name: \"ejecutada\" })),\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { id: \"fechaEjecucionLabel\", for: \"fechaEjecucion\" },\r\n                            React.createElement(Translate, { contentKey: \"sicoApp.recaudadorDetalle.fechaEjecucion\" }, \"Fecha Ejecucion\")),\r\n                        React.createElement(AvInput, { id: \"recaudador-detalle-fechaEjecucion\", type: \"datetime-local\", className: \"form-control\", name: \"fechaEjecucion\", placeholder: 'YYYY-MM-DD HH:mm', value: isNew ? null : convertDateTimeFromServer(this.props.recaudadorDetalleEntity.fechaEjecucion) })),\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { id: \"fechaProgramadaLabel\", for: \"fechaProgramada\" },\r\n                            React.createElement(Translate, { contentKey: \"sicoApp.recaudadorDetalle.fechaProgramada\" }, \"Fecha Programada\")),\r\n                        React.createElement(AvInput, { id: \"recaudador-detalle-fechaProgramada\", type: \"datetime-local\", className: \"form-control\", name: \"fechaProgramada\", placeholder: 'YYYY-MM-DD HH:mm', value: isNew ? null : convertDateTimeFromServer(this.props.recaudadorDetalleEntity.fechaProgramada) })),\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { id: \"nroCuotaLabel\", for: \"nroCuota\" },\r\n                            React.createElement(Translate, { contentKey: \"sicoApp.recaudadorDetalle.nroCuota\" }, \"Nro Cuota\")),\r\n                        React.createElement(AvField, { id: \"recaudador-detalle-nroCuota\", type: \"string\", className: \"form-control\", name: \"nroCuota\" })),\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { id: \"observacionesLabel\", for: \"observaciones\" },\r\n                            React.createElement(Translate, { contentKey: \"sicoApp.recaudadorDetalle.observaciones\" }, \"Observaciones\")),\r\n                        React.createElement(AvField, { id: \"recaudador-detalle-observaciones\", type: \"text\", name: \"observaciones\" })),\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { id: \"reintentosLabel\", for: \"reintentos\" },\r\n                            React.createElement(Translate, { contentKey: \"sicoApp.recaudadorDetalle.reintentos\" }, \"Reintentos\")),\r\n                        React.createElement(AvField, { id: \"recaudador-detalle-reintentos\", type: \"string\", className: \"form-control\", name: \"reintentos\" })),\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { for: \"recaudador.id\" },\r\n                            React.createElement(Translate, { contentKey: \"sicoApp.recaudadorDetalle.recaudador\" }, \"Recaudador\")),\r\n                        React.createElement(AvInput, { id: \"recaudador-detalle-recaudador\", type: \"select\", className: \"form-control\", name: \"recaudador.id\" },\r\n                            React.createElement(\"option\", { value: \"\", key: \"0\" }),\r\n                            recaudadors\r\n                                ? recaudadors.map(function (otherEntity) { return (React.createElement(\"option\", { value: otherEntity.id, key: otherEntity.id }, otherEntity.id)); })\r\n                                : null)),\r\n                    React.createElement(Button, { tag: Link, id: \"cancel-save\", to: \"/entity/recaudador-detalle\", replace: true, color: \"info\" },\r\n                        React.createElement(FontAwesomeIcon, { icon: \"arrow-left\" }),\r\n                        \"\\u00A0\",\r\n                        React.createElement(\"span\", { className: \"d-none d-md-inline\" },\r\n                            React.createElement(Translate, { contentKey: \"entity.action.back\" }, \"Back\"))),\r\n                    \"\\u00A0\",\r\n                    React.createElement(Button, { color: \"primary\", id: \"save-entity\", type: \"submit\", disabled: updating },\r\n                        React.createElement(FontAwesomeIcon, { icon: \"save\" }),\r\n                        \"\\u00A0\",\r\n                        React.createElement(Translate, { contentKey: \"entity.action.save\" }, \"Save\"))))))));\r\n    };\r\n    return RecaudadorDetalleUpdate;\r\n}(React.Component));\r\nexport { RecaudadorDetalleUpdate };\r\nvar mapStateToProps = function (storeState) { return ({\r\n    recaudadors: storeState.recaudador.entities,\r\n    recaudadorDetalleEntity: storeState.recaudadorDetalle.entity,\r\n    loading: storeState.recaudadorDetalle.loading,\r\n    updating: storeState.recaudadorDetalle.updating,\r\n    updateSuccess: storeState.recaudadorDetalle.updateSuccess\r\n}); };\r\nvar mapDispatchToProps = {\r\n    getRecaudadors: getRecaudadors,\r\n    getEntity: getEntity,\r\n    updateEntity: updateEntity,\r\n    createEntity: createEntity,\r\n    reset: reset\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RecaudadorDetalleUpdate);\r\n",{"version":3,"file":"E:\\Proyectos\\JHipster\\sico\\src\\main\\webapp\\app\\entities\\recaudador-detalle\\recaudador-detalle-update.tsx","sourceRoot":"","sources":["E:\\Proyectos\\JHipster\\sico\\node_modules\\tslint-loader\\index.js!E:\\Proyectos\\JHipster\\sico\\src\\main\\webapp\\app\\entities\\recaudador-detalle\\recaudador-detalle-update.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, RouteComponentProps } from 'react-router-dom';\nimport { Button, Row, Col, Label } from 'reactstrap';\nimport { AvForm, AvGroup, AvInput, AvField } from 'availity-reactstrap-validation';\n// tslint:disable-next-line:no-unused-variable\nimport { Translate, translate, ICrudGetAction, ICrudGetAllAction, ICrudPutAction } from 'react-jhipster';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { IRootState } from 'app/shared/reducers';\n\nimport { IRecaudador } from 'app/shared/model/recaudador.model';\nimport { getEntities as getRecaudadors } from 'app/entities/recaudador/recaudador.reducer';\nimport { getEntity, updateEntity, createEntity, reset } from './recaudador-detalle.reducer';\nimport { IRecaudadorDetalle } from 'app/shared/model/recaudador-detalle.model';\n// tslint:disable-next-line:no-unused-variable\nimport { convertDateTimeFromServer, convertDateTimeToServer } from 'app/shared/util/date-utils';\nimport { mapIdList } from 'app/shared/util/entity-utils';\n\nexport interface IRecaudadorDetalleUpdateProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\n\nexport interface IRecaudadorDetalleUpdateState {\n  isNew: boolean;\n  recaudadorId: string;\n}\n\nexport class RecaudadorDetalleUpdate extends React.Component<IRecaudadorDetalleUpdateProps, IRecaudadorDetalleUpdateState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      recaudadorId: '0',\n      isNew: !this.props.match.params || !this.props.match.params.id\n    };\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    if (nextProps.updateSuccess !== this.props.updateSuccess && nextProps.updateSuccess) {\n      this.handleClose();\n    }\n  }\n\n  componentDidMount() {\n    if (this.state.isNew) {\n      this.props.reset();\n    } else {\n      this.props.getEntity(this.props.match.params.id);\n    }\n\n    this.props.getRecaudadors();\n  }\n\n  saveEntity = (event, errors, values) => {\n    values.fechaEjecucion = convertDateTimeToServer(values.fechaEjecucion);\n    values.fechaProgramada = convertDateTimeToServer(values.fechaProgramada);\n\n    if (errors.length === 0) {\n      const { recaudadorDetalleEntity } = this.props;\n      const entity = {\n        ...recaudadorDetalleEntity,\n        ...values\n      };\n\n      if (this.state.isNew) {\n        this.props.createEntity(entity);\n      } else {\n        this.props.updateEntity(entity);\n      }\n    }\n  };\n\n  handleClose = () => {\n    this.props.history.push('/entity/recaudador-detalle');\n  };\n\n  render() {\n    const { recaudadorDetalleEntity, recaudadors, loading, updating } = this.props;\n    const { isNew } = this.state;\n\n    return (\n      <div>\n        <Row className=\"justify-content-center\">\n          <Col md=\"8\">\n            <h2 id=\"sicoApp.recaudadorDetalle.home.createOrEditLabel\">\n              <Translate contentKey=\"sicoApp.recaudadorDetalle.home.createOrEditLabel\">Create or edit a RecaudadorDetalle</Translate>\n            </h2>\n          </Col>\n        </Row>\n        <Row className=\"justify-content-center\">\n          <Col md=\"8\">\n            {loading ? (\n              <p>Loading...</p>\n            ) : (\n              <AvForm model={isNew ? {} : recaudadorDetalleEntity} onSubmit={this.saveEntity}>\n                {!isNew ? (\n                  <AvGroup>\n                    <Label for=\"id\">\n                      <Translate contentKey=\"global.field.id\">ID</Translate>\n                    </Label>\n                    <AvInput id=\"recaudador-detalle-id\" type=\"text\" className=\"form-control\" name=\"id\" required readOnly />\n                  </AvGroup>\n                ) : null}\n                <AvGroup>\n                  <Label id=\"ejecutadaLabel\" for=\"ejecutada\">\n                    <Translate contentKey=\"sicoApp.recaudadorDetalle.ejecutada\">Ejecutada</Translate>\n                  </Label>\n                  <AvField id=\"recaudador-detalle-ejecutada\" type=\"string\" className=\"form-control\" name=\"ejecutada\" />\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"fechaEjecucionLabel\" for=\"fechaEjecucion\">\n                    <Translate contentKey=\"sicoApp.recaudadorDetalle.fechaEjecucion\">Fecha Ejecucion</Translate>\n                  </Label>\n                  <AvInput\n                    id=\"recaudador-detalle-fechaEjecucion\"\n                    type=\"datetime-local\"\n                    className=\"form-control\"\n                    name=\"fechaEjecucion\"\n                    placeholder={'YYYY-MM-DD HH:mm'}\n                    value={isNew ? null : convertDateTimeFromServer(this.props.recaudadorDetalleEntity.fechaEjecucion)}\n                  />\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"fechaProgramadaLabel\" for=\"fechaProgramada\">\n                    <Translate contentKey=\"sicoApp.recaudadorDetalle.fechaProgramada\">Fecha Programada</Translate>\n                  </Label>\n                  <AvInput\n                    id=\"recaudador-detalle-fechaProgramada\"\n                    type=\"datetime-local\"\n                    className=\"form-control\"\n                    name=\"fechaProgramada\"\n                    placeholder={'YYYY-MM-DD HH:mm'}\n                    value={isNew ? null : convertDateTimeFromServer(this.props.recaudadorDetalleEntity.fechaProgramada)}\n                  />\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"nroCuotaLabel\" for=\"nroCuota\">\n                    <Translate contentKey=\"sicoApp.recaudadorDetalle.nroCuota\">Nro Cuota</Translate>\n                  </Label>\n                  <AvField id=\"recaudador-detalle-nroCuota\" type=\"string\" className=\"form-control\" name=\"nroCuota\" />\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"observacionesLabel\" for=\"observaciones\">\n                    <Translate contentKey=\"sicoApp.recaudadorDetalle.observaciones\">Observaciones</Translate>\n                  </Label>\n                  <AvField id=\"recaudador-detalle-observaciones\" type=\"text\" name=\"observaciones\" />\n                </AvGroup>\n                <AvGroup>\n                  <Label id=\"reintentosLabel\" for=\"reintentos\">\n                    <Translate contentKey=\"sicoApp.recaudadorDetalle.reintentos\">Reintentos</Translate>\n                  </Label>\n                  <AvField id=\"recaudador-detalle-reintentos\" type=\"string\" className=\"form-control\" name=\"reintentos\" />\n                </AvGroup>\n                <AvGroup>\n                  <Label for=\"recaudador.id\">\n                    <Translate contentKey=\"sicoApp.recaudadorDetalle.recaudador\">Recaudador</Translate>\n                  </Label>\n                  <AvInput id=\"recaudador-detalle-recaudador\" type=\"select\" className=\"form-control\" name=\"recaudador.id\">\n                    <option value=\"\" key=\"0\" />\n                    {recaudadors\n                      ? recaudadors.map(otherEntity => (\n                          <option value={otherEntity.id} key={otherEntity.id}>\n                            {otherEntity.id}\n                          </option>\n                        ))\n                      : null}\n                  </AvInput>\n                </AvGroup>\n                <Button tag={Link} id=\"cancel-save\" to=\"/entity/recaudador-detalle\" replace color=\"info\">\n                  <FontAwesomeIcon icon=\"arrow-left\" />&nbsp;\n                  <span className=\"d-none d-md-inline\">\n                    <Translate contentKey=\"entity.action.back\">Back</Translate>\n                  </span>\n                </Button>\n                &nbsp;\n                <Button color=\"primary\" id=\"save-entity\" type=\"submit\" disabled={updating}>\n                  <FontAwesomeIcon icon=\"save\" />&nbsp;\n                  <Translate contentKey=\"entity.action.save\">Save</Translate>\n                </Button>\n              </AvForm>\n            )}\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (storeState: IRootState) => ({\n  recaudadors: storeState.recaudador.entities,\n  recaudadorDetalleEntity: storeState.recaudadorDetalle.entity,\n  loading: storeState.recaudadorDetalle.loading,\n  updating: storeState.recaudadorDetalle.updating,\n  updateSuccess: storeState.recaudadorDetalle.updateSuccess\n});\n\nconst mapDispatchToProps = {\n  getRecaudadors,\n  getEntity,\n  updateEntity,\n  createEntity,\n  reset\n};\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RecaudadorDetalleUpdate);\n"]}]}