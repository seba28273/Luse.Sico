{"remainingRequest":"E:\\Proyectos\\JHipster\\sico\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-1!E:\\Proyectos\\JHipster\\sico\\node_modules\\ts-loader\\index.js??ref--4-2!E:\\Proyectos\\JHipster\\sico\\node_modules\\tslint-loader\\index.js!E:\\Proyectos\\JHipster\\sico\\src\\main\\webapp\\app\\modules\\administration\\administration.reducer.ts","dependencies":[{"path":"E:\\Proyectos\\JHipster\\sico\\src\\main\\webapp\\app\\modules\\administration\\administration.reducer.ts","mtime":1555002495710},{"path":"E:\\Proyectos\\JHipster\\sico\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1555002618200},{"path":"E:\\Proyectos\\JHipster\\sico\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Proyectos\\JHipster\\sico\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"E:\\Proyectos\\JHipster\\sico\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["var _this = this;\r\nimport * as tslib_1 from \"tslib\";\r\nimport axios from 'axios';\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\nexport var ACTION_TYPES = {\r\n    FETCH_LOGS: 'administration/FETCH_LOGS',\r\n    FETCH_LOGS_CHANGE_LEVEL: 'administration/FETCH_LOGS_CHANGE_LEVEL',\r\n    FETCH_HEALTH: 'administration/FETCH_HEALTH',\r\n    FETCH_METRICS: 'administration/FETCH_METRICS',\r\n    FETCH_THREAD_DUMP: 'administration/FETCH_THREAD_DUMP',\r\n    FETCH_CONFIGURATIONS: 'administration/FETCH_CONFIGURATIONS',\r\n    FETCH_ENV: 'administration/FETCH_ENV',\r\n    FETCH_AUDITS: 'administration/FETCH_AUDITS'\r\n};\r\nvar initialState = {\r\n    loading: false,\r\n    errorMessage: null,\r\n    logs: {\r\n        loggers: []\r\n    },\r\n    health: {},\r\n    metrics: {},\r\n    threadDump: [],\r\n    configuration: {\r\n        configProps: {},\r\n        env: {}\r\n    },\r\n    audits: [],\r\n    totalItems: 0\r\n};\r\n// Reducer\r\nexport default (function (state, action) {\r\n    if (state === void 0) { state = initialState; }\r\n    switch (action.type) {\r\n        case REQUEST(ACTION_TYPES.FETCH_METRICS):\r\n        case REQUEST(ACTION_TYPES.FETCH_THREAD_DUMP):\r\n        case REQUEST(ACTION_TYPES.FETCH_LOGS):\r\n        case REQUEST(ACTION_TYPES.FETCH_CONFIGURATIONS):\r\n        case REQUEST(ACTION_TYPES.FETCH_ENV):\r\n        case REQUEST(ACTION_TYPES.FETCH_AUDITS):\r\n        case REQUEST(ACTION_TYPES.FETCH_HEALTH):\r\n            return tslib_1.__assign({}, state, { errorMessage: null, loading: true });\r\n        case FAILURE(ACTION_TYPES.FETCH_METRICS):\r\n        case FAILURE(ACTION_TYPES.FETCH_THREAD_DUMP):\r\n        case FAILURE(ACTION_TYPES.FETCH_LOGS):\r\n        case FAILURE(ACTION_TYPES.FETCH_CONFIGURATIONS):\r\n        case FAILURE(ACTION_TYPES.FETCH_ENV):\r\n        case FAILURE(ACTION_TYPES.FETCH_AUDITS):\r\n        case FAILURE(ACTION_TYPES.FETCH_HEALTH):\r\n            return tslib_1.__assign({}, state, { loading: false, errorMessage: action.payload });\r\n        case SUCCESS(ACTION_TYPES.FETCH_METRICS):\r\n            return tslib_1.__assign({}, state, { loading: false, metrics: action.payload.data });\r\n        case SUCCESS(ACTION_TYPES.FETCH_THREAD_DUMP):\r\n            return tslib_1.__assign({}, state, { loading: false, threadDump: action.payload.data });\r\n        case SUCCESS(ACTION_TYPES.FETCH_LOGS):\r\n            return tslib_1.__assign({}, state, { loading: false, logs: {\r\n                    loggers: action.payload.data\r\n                } });\r\n        case SUCCESS(ACTION_TYPES.FETCH_CONFIGURATIONS):\r\n            return tslib_1.__assign({}, state, { loading: false, configuration: tslib_1.__assign({}, state.configuration, { configProps: action.payload.data }) });\r\n        case SUCCESS(ACTION_TYPES.FETCH_ENV):\r\n            return tslib_1.__assign({}, state, { loading: false, configuration: tslib_1.__assign({}, state.configuration, { env: action.payload.data }) });\r\n        case SUCCESS(ACTION_TYPES.FETCH_AUDITS):\r\n            return tslib_1.__assign({}, state, { loading: false, audits: action.payload.data, totalItems: action.payload.headers['x-total-count'] });\r\n        case SUCCESS(ACTION_TYPES.FETCH_HEALTH):\r\n            return tslib_1.__assign({}, state, { loading: false, health: action.payload.data });\r\n        default:\r\n            return state;\r\n    }\r\n});\r\n// Actions\r\nexport var systemHealth = function () { return ({\r\n    type: ACTION_TYPES.FETCH_HEALTH,\r\n    payload: axios.get('management/health')\r\n}); };\r\nexport var systemMetrics = function () { return ({\r\n    type: ACTION_TYPES.FETCH_METRICS,\r\n    payload: axios.get('management/jhi-metrics')\r\n}); };\r\nexport var systemThreadDump = function () { return ({\r\n    type: ACTION_TYPES.FETCH_THREAD_DUMP,\r\n    payload: axios.get('management/threaddump')\r\n}); };\r\nexport var getLoggers = function () { return ({\r\n    type: ACTION_TYPES.FETCH_LOGS,\r\n    payload: axios.get('management/logs')\r\n}); };\r\nexport var changeLogLevel = function (name, level) {\r\n    var body = {\r\n        level: level,\r\n        name: name\r\n    };\r\n    return function (dispatch) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n        return tslib_1.__generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, dispatch({\r\n                        type: ACTION_TYPES.FETCH_LOGS_CHANGE_LEVEL,\r\n                        payload: axios.put('management/logs', body)\r\n                    })];\r\n                case 1:\r\n                    _a.sent();\r\n                    dispatch(getLoggers());\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    }); };\r\n};\r\nexport var getConfigurations = function () { return ({\r\n    type: ACTION_TYPES.FETCH_CONFIGURATIONS,\r\n    payload: axios.get('management/configprops')\r\n}); };\r\nexport var getEnv = function () { return ({\r\n    type: ACTION_TYPES.FETCH_ENV,\r\n    payload: axios.get('management/env')\r\n}); };\r\nexport var getAudits = function (page, size, sort, fromDate, toDate) {\r\n    var requestUrl = \"management/audits\" + (sort ? \"?page=\" + page + \"&size=\" + size + \"&sort=\" + sort : '');\r\n    if (fromDate) {\r\n        requestUrl += \"&fromDate=\" + fromDate;\r\n    }\r\n    if (toDate) {\r\n        requestUrl += \"&toDate=\" + toDate;\r\n    }\r\n    return {\r\n        type: ACTION_TYPES.FETCH_AUDITS,\r\n        payload: axios.get(requestUrl)\r\n    };\r\n};\r\n",{"version":3,"file":"E:\\Proyectos\\JHipster\\sico\\src\\main\\webapp\\app\\modules\\administration\\administration.reducer.ts","sourceRoot":"","sources":["E:\\Proyectos\\JHipster\\sico\\node_modules\\tslint-loader\\index.js!E:\\Proyectos\\JHipster\\sico\\src\\main\\webapp\\app\\modules\\administration\\administration.reducer.ts"],"names":[],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\n\nexport const ACTION_TYPES = {\n  FETCH_LOGS: 'administration/FETCH_LOGS',\n  FETCH_LOGS_CHANGE_LEVEL: 'administration/FETCH_LOGS_CHANGE_LEVEL',\n  FETCH_HEALTH: 'administration/FETCH_HEALTH',\n  FETCH_METRICS: 'administration/FETCH_METRICS',\n  FETCH_THREAD_DUMP: 'administration/FETCH_THREAD_DUMP',\n  FETCH_CONFIGURATIONS: 'administration/FETCH_CONFIGURATIONS',\n  FETCH_ENV: 'administration/FETCH_ENV',\n  FETCH_AUDITS: 'administration/FETCH_AUDITS'\n};\n\nconst initialState = {\n  loading: false,\n  errorMessage: null,\n  logs: {\n    loggers: [] as any[]\n  },\n  health: {} as any,\n  metrics: {} as any,\n  threadDump: [],\n  configuration: {\n    configProps: {} as any,\n    env: {} as any\n  },\n  audits: [],\n  totalItems: 0\n};\n\nexport type AdministrationState = Readonly<typeof initialState>;\n\n// Reducer\n\nexport default (state: AdministrationState = initialState, action): AdministrationState => {\n  switch (action.type) {\n    case REQUEST(ACTION_TYPES.FETCH_METRICS):\n    case REQUEST(ACTION_TYPES.FETCH_THREAD_DUMP):\n    case REQUEST(ACTION_TYPES.FETCH_LOGS):\n    case REQUEST(ACTION_TYPES.FETCH_CONFIGURATIONS):\n    case REQUEST(ACTION_TYPES.FETCH_ENV):\n    case REQUEST(ACTION_TYPES.FETCH_AUDITS):\n    case REQUEST(ACTION_TYPES.FETCH_HEALTH):\n      return {\n        ...state,\n        errorMessage: null,\n        loading: true\n      };\n    case FAILURE(ACTION_TYPES.FETCH_METRICS):\n    case FAILURE(ACTION_TYPES.FETCH_THREAD_DUMP):\n    case FAILURE(ACTION_TYPES.FETCH_LOGS):\n    case FAILURE(ACTION_TYPES.FETCH_CONFIGURATIONS):\n    case FAILURE(ACTION_TYPES.FETCH_ENV):\n    case FAILURE(ACTION_TYPES.FETCH_AUDITS):\n    case FAILURE(ACTION_TYPES.FETCH_HEALTH):\n      return {\n        ...state,\n        loading: false,\n        errorMessage: action.payload\n      };\n    case SUCCESS(ACTION_TYPES.FETCH_METRICS):\n      return {\n        ...state,\n        loading: false,\n        metrics: action.payload.data\n      };\n    case SUCCESS(ACTION_TYPES.FETCH_THREAD_DUMP):\n      return {\n        ...state,\n        loading: false,\n        threadDump: action.payload.data\n      };\n    case SUCCESS(ACTION_TYPES.FETCH_LOGS):\n      return {\n        ...state,\n        loading: false,\n        logs: {\n          loggers: action.payload.data\n        }\n      };\n    case SUCCESS(ACTION_TYPES.FETCH_CONFIGURATIONS):\n      return {\n        ...state,\n        loading: false,\n        configuration: {\n          ...state.configuration,\n          configProps: action.payload.data\n        }\n      };\n    case SUCCESS(ACTION_TYPES.FETCH_ENV):\n      return {\n        ...state,\n        loading: false,\n        configuration: {\n          ...state.configuration,\n          env: action.payload.data\n        }\n      };\n    case SUCCESS(ACTION_TYPES.FETCH_AUDITS):\n      return {\n        ...state,\n        loading: false,\n        audits: action.payload.data,\n        totalItems: action.payload.headers['x-total-count']\n      };\n    case SUCCESS(ACTION_TYPES.FETCH_HEALTH):\n      return {\n        ...state,\n        loading: false,\n        health: action.payload.data\n      };\n    default:\n      return state;\n  }\n};\n\n// Actions\n\nexport const systemHealth = () => ({\n  type: ACTION_TYPES.FETCH_HEALTH,\n  payload: axios.get('management/health')\n});\n\nexport const systemMetrics = () => ({\n  type: ACTION_TYPES.FETCH_METRICS,\n  payload: axios.get('management/jhi-metrics')\n});\n\nexport const systemThreadDump = () => ({\n  type: ACTION_TYPES.FETCH_THREAD_DUMP,\n  payload: axios.get('management/threaddump')\n});\n\nexport const getLoggers = () => ({\n  type: ACTION_TYPES.FETCH_LOGS,\n  payload: axios.get('management/logs')\n});\n\nexport const changeLogLevel = (name, level) => {\n  const body = {\n    level,\n    name\n  };\n  return async dispatch => {\n    await dispatch({\n      type: ACTION_TYPES.FETCH_LOGS_CHANGE_LEVEL,\n      payload: axios.put('management/logs', body)\n    });\n    dispatch(getLoggers());\n  };\n};\n\nexport const getConfigurations = () => ({\n  type: ACTION_TYPES.FETCH_CONFIGURATIONS,\n  payload: axios.get('management/configprops')\n});\n\nexport const getEnv = () => ({\n  type: ACTION_TYPES.FETCH_ENV,\n  payload: axios.get('management/env')\n});\n\nexport const getAudits = (page, size, sort, fromDate, toDate) => {\n  let requestUrl = `management/audits${sort ? `?page=${page}&size=${size}&sort=${sort}` : ''}`;\n  if (fromDate) {\n    requestUrl += `&fromDate=${fromDate}`;\n  }\n  if (toDate) {\n    requestUrl += `&toDate=${toDate}`;\n  }\n  return {\n    type: ACTION_TYPES.FETCH_AUDITS,\n    payload: axios.get(requestUrl)\n  };\n};\n"]}]}