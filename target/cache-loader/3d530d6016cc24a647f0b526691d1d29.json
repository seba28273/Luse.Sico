{"remainingRequest":"E:\\Proyectos\\JHipster\\sico\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-2!E:\\Proyectos\\JHipster\\sico\\node_modules\\ts-loader\\index.js??ref--4-3!E:\\Proyectos\\JHipster\\sico\\node_modules\\tslint-loader\\index.js!E:\\Proyectos\\JHipster\\sico\\src\\main\\webapp\\app\\modules\\account\\register\\register.reducer.ts","dependencies":[{"path":"E:\\Proyectos\\JHipster\\sico\\src\\main\\webapp\\app\\modules\\account\\register\\register.reducer.ts","mtime":1558114401798},{"path":"E:\\Proyectos\\JHipster\\sico\\node_modules\\react-hot-loader\\webpack.js","mtime":1505850161000},{"path":"E:\\Proyectos\\JHipster\\sico\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1555002618200},{"path":"E:\\Proyectos\\JHipster\\sico\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Proyectos\\JHipster\\sico\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"E:\\Proyectos\\JHipster\\sico\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\r\nimport axios from 'axios';\r\nimport { translate } from 'react-jhipster';\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\nexport var ACTION_TYPES = {\r\n    CREATE_ACCOUNT: 'register/CREATE_ACCOUNT',\r\n    RESET: 'register/RESET'\r\n};\r\nvar initialState = {\r\n    loading: false,\r\n    registrationSuccess: false,\r\n    registrationFailure: false,\r\n    errorMessage: null\r\n};\r\n// Reducer\r\nexport default (function (state, action) {\r\n    if (state === void 0) { state = initialState; }\r\n    switch (action.type) {\r\n        case REQUEST(ACTION_TYPES.CREATE_ACCOUNT):\r\n            return tslib_1.__assign({}, state, { loading: true });\r\n        case FAILURE(ACTION_TYPES.CREATE_ACCOUNT):\r\n            return tslib_1.__assign({}, initialState, { registrationFailure: true, errorMessage: action.payload.response.data.errorKey });\r\n        case SUCCESS(ACTION_TYPES.CREATE_ACCOUNT):\r\n            return tslib_1.__assign({}, initialState, { registrationSuccess: true });\r\n        case ACTION_TYPES.RESET:\r\n            return tslib_1.__assign({}, initialState);\r\n        default:\r\n            return state;\r\n    }\r\n});\r\n// Actions\r\nexport var handleRegister = function (login, email, password, langKey, firstName, lastName) {\r\n    if (langKey === void 0) { langKey = 'es'; }\r\n    return ({\r\n        type: ACTION_TYPES.CREATE_ACCOUNT,\r\n        payload: axios.post('api/register', { login: login, email: email, password: password, langKey: langKey, firstName: firstName, lastName: lastName }),\r\n        meta: {\r\n            successMessage: translate('register.messages.success')\r\n        }\r\n    });\r\n};\r\nexport var reset = function () { return ({\r\n    type: ACTION_TYPES.RESET\r\n}); };\r\n",{"version":3,"file":"E:\\Proyectos\\JHipster\\sico\\src\\main\\webapp\\app\\modules\\account\\register\\register.reducer.ts","sourceRoot":"","sources":["E:\\Proyectos\\JHipster\\sico\\node_modules\\tslint-loader\\index.js!E:\\Proyectos\\JHipster\\sico\\src\\main\\webapp\\app\\modules\\account\\register\\register.reducer.ts"],"names":[],"mappings":";AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,SAAS,EAAE,MAAM,gBAAgB,CAAC;AAE3C,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,sCAAsC,CAAC;AAEjF,MAAM,CAAC,IAAM,YAAY,GAAG;IAC1B,cAAc,EAAE,yBAAyB;IACzC,KAAK,EAAE,gBAAgB;CACxB,CAAC;AAEF,IAAM,YAAY,GAAG;IACnB,OAAO,EAAE,KAAK;IACd,mBAAmB,EAAE,KAAK;IAC1B,mBAAmB,EAAE,KAAK;IAC1B,YAAY,EAAE,IAAI;CACnB,CAAC;AAIF,UAAU;AACV,gBAAe,UAAC,KAAmC,EAAE,MAAM;IAA3C,sBAAA,EAAA,oBAAmC;IACjD,QAAQ,MAAM,CAAC,IAAI,EAAE;QACnB,KAAK,OAAO,CAAC,YAAY,CAAC,cAAc,CAAC;YACvC,4BACK,KAAK,IACR,OAAO,EAAE,IAAI,IACb;QACJ,KAAK,OAAO,CAAC,YAAY,CAAC,cAAc,CAAC;YACvC,4BACK,YAAY,IACf,mBAAmB,EAAE,IAAI,EACzB,YAAY,EAAE,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,IACnD;QACJ,KAAK,OAAO,CAAC,YAAY,CAAC,cAAc,CAAC;YACvC,4BACK,YAAY,IACf,mBAAmB,EAAE,IAAI,IACzB;QACJ,KAAK,YAAY,CAAC,KAAK;YACrB,4BACK,YAAY,EACf;QACJ;YACE,OAAO,KAAK,CAAC;KAChB;AACH,CAAC,EAAC;AAEF,UAAU;AACV,MAAM,CAAC,IAAM,cAAc,GAAG,UAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,OAAc,EAAE,SAAS,EAAE,QAAQ;IAAnC,wBAAA,EAAA,cAAc;IAA0B,OAAA,CAAC;QAC9F,IAAI,EAAE,YAAY,CAAC,cAAc;QACjC,OAAO,EAAE,KAAK,CAAC,IAAI,CAAC,cAAc,EAAE,EAAE,KAAK,OAAA,EAAE,KAAK,OAAA,EAAE,QAAQ,UAAA,EAAE,OAAO,SAAA,EAAE,SAAS,WAAA,EAAE,QAAQ,UAAA,EAAE,CAAC;QAC7F,IAAI,EAAE;YACJ,cAAc,EAAE,SAAS,CAAC,2BAA2B,CAAC;SACvD;KACF,CAAC;AAN6F,CAM7F,CAAC;AAEH,MAAM,CAAC,IAAM,KAAK,GAAG,cAAM,OAAA,CAAC;IAC1B,IAAI,EAAE,YAAY,CAAC,KAAK;CACzB,CAAC,EAFyB,CAEzB,CAAC","sourcesContent":["import axios from 'axios';\nimport { translate } from 'react-jhipster';\n\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\n\nexport const ACTION_TYPES = {\n  CREATE_ACCOUNT: 'register/CREATE_ACCOUNT',\n  RESET: 'register/RESET'\n};\n\nconst initialState = {\n  loading: false,\n  registrationSuccess: false,\n  registrationFailure: false,\n  errorMessage: null\n};\n\nexport type RegisterState = Readonly<typeof initialState>;\n\n// Reducer\nexport default (state: RegisterState = initialState, action): RegisterState => {\n  switch (action.type) {\n    case REQUEST(ACTION_TYPES.CREATE_ACCOUNT):\n      return {\n        ...state,\n        loading: true\n      };\n    case FAILURE(ACTION_TYPES.CREATE_ACCOUNT):\n      return {\n        ...initialState,\n        registrationFailure: true,\n        errorMessage: action.payload.response.data.errorKey\n      };\n    case SUCCESS(ACTION_TYPES.CREATE_ACCOUNT):\n      return {\n        ...initialState,\n        registrationSuccess: true\n      };\n    case ACTION_TYPES.RESET:\n      return {\n        ...initialState\n      };\n    default:\n      return state;\n  }\n};\n\n// Actions\nexport const handleRegister = (login, email, password, langKey = 'es', firstName, lastName) => ({\n  type: ACTION_TYPES.CREATE_ACCOUNT,\n  payload: axios.post('api/register', { login, email, password, langKey, firstName, lastName }),\n  meta: {\n    successMessage: translate('register.messages.success')\n  }\n});\n\nexport const reset = () => ({\n  type: ACTION_TYPES.RESET\n});\n"]}]}